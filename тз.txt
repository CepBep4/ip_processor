
üìå –í–≤–µ–¥–µ–Ω–∏–µ

üìå –í–≤–µ–¥–µ–Ω–∏–µ
 
1.1 –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∞—É–¥–∏—Ç–æ—Ä–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
–î–æ–∫—É–º–µ–Ω—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–µ—Å—Ç—Ä–æ–≤ –ø–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞–º.
–ï–≥–æ —Ü–µ–ª—å ‚Äî –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å:
‚Ä¢	–õ–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–µ—Å—Ç—Ä–æ–≤ –∏ –∞—Ä—Ö–∏–≤–æ–≤ –æ—Ç –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ (Valberis, Ozon –∏ –¥—Ä.);
‚Ä¢	–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–æ–¥—É–ª–∏ –∏ –ø–æ—Ä—è–¥–æ–∫ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è;
‚Ä¢	–ê–ª–≥–æ—Ä–∏—Ç–º—ã –ø–∞—Ä—Å–∏–Ω–≥–∞, –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏—Ç–æ–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ 1–° —á–µ—Ä–µ–∑ FTP;
‚Ä¢	–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –æ–∫—Ä—É–∂–µ–Ω–∏—é –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
–ê—É–¥–∏—Ç–æ—Ä–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞:
–†–æ–ª—å	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –ø–æ–ª—å–∑–∞
üë®‚Äçüíª –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏	–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –º–æ–¥—É–ª–µ–π –∏ —Ç–æ—á–µ–∫ –≤—Ö–æ–¥–∞ –≤ –ø–∞–π–ø–ª–∞–π–Ω
üßëüè´ –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ	–û—Ü–µ–Ω–∫–∞ –∑–æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏, –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã—Ö —Ç–æ—á–µ–∫ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
üßëüíº –Æ—Ä–∏—Å—Ç—ã/–û–ø–µ—Ä–∞—Ç–æ—Ä—ã	–í–∏–¥—è—Ç, –∫–∞–∫ –∏—Ö –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ 1–°
üõ†Ô∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã	–ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –∫ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—é –∏ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ
üßëüîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞	–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫, –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
 
1.2 –ú–∏—Å—Å–∏—è, –∑–∞–¥–∞—á–∏ –∏ –∑–æ–Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è
üéØ –ú–∏—Å—Å–∏—è:
–ú–∏–Ω–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É—á–∞—Å—Ç–∏–µ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –ø—Ä–∏—ë–º–µ, —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ, –ø—Ä–æ–≤–µ—Ä–∫–µ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ò–ü –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ 1–°.
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–ø–æ—á–∫—É:
Email / –∞—Ä—Ö–∏–≤ / Excel ‚Üí –ø–∞—Ä—Å–∏–Ω–≥ ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Üí –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è 1–° ‚Üí –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ FTP ‚Üí Telegram.
üîß –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏:
‚Ä¢	–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–µ—Å—Ç—Ä–æ–≤ –∏ –∞—Ä—Ö–∏–≤–æ–≤ –æ—Ç —Ä–∞–∑–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ (–ø–æ—á—Ç–∞ / –ø–∞–ø–∫–∞);
‚Ä¢	–†–∞—Å–ø–∞–∫–æ–≤–∫–∞, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É;
‚Ä¢	–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (PDF, —Å–∫–∞–Ω—ã) –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ Excel;
‚Ä¢	–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤;
‚Ä¢	–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ 1–° —á–µ—Ä–µ–∑ FTP;
‚Ä¢	Telegram-–æ—Ç—á—ë—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö.
üó∫Ô∏è –ó–æ–Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:
‚Ä¢	–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—â–∏–µ –ò–ü, –¥–æ–ª–≥–∏, —Å—É–¥—ã;
‚Ä¢	–û—Ç–¥–µ–ª—ã, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏, —Å–∫–∞–Ω–∞–º–∏ –∏ Excel-—Ä–µ–µ—Å—Ç—Ä–∞–º–∏;
‚Ä¢	–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 1–° —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–¥–∞—á—É —Ñ–∞–π–ª–æ–≤ –ø–æ FTP, –±–µ–∑ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å—ã –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤.
 
1.3 –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã
üîπ –†–µ–∑—É–ª—å—Ç–∞—Ç	üìà –≠—Ñ—Ñ–µ–∫—Ç
–£–¥–∞–ª–µ–Ω–∏–µ —Ä—É—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è	–°–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–æ 90%
–ß—ë—Ç–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ –Ω–æ–º–µ—Ä–∞–º –¥–æ–≥–æ–≤–æ—Ä–æ–≤	–ü—Ä–æ—Å—Ç–æ—Ç–∞ –ø–æ–∏—Å–∫–∞, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –§–ò–û –≤ –ø—É—Ç—è—Ö
–í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ Excel	–ü–æ–≤—ã—à–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Ç—ã –∏ —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è	–ú–æ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å
–°—Ç–∞–±–∏–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –≤ 1–° —á–µ—Ä–µ–∑ FTP	–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–ø—É—Å–∫–æ–≤, —É—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –æ—Ç–¥–µ–ª–∞
 
















–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ 
‚Ññ	–†–∞–∑–¥–µ–ª	–°—Ç—Ä.
1	üìå –í–≤–µ–¥–µ–Ω–∏–µ	1
	1.1 –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –∞—É–¥–∏—Ç–æ—Ä–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞	
	1.2 –ú–∏—Å—Å–∏—è, –∑–∞–¥–∞—á–∏ –∏ –∑–æ–Ω–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è	
	1.3 –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —ç—Ñ—Ñ–µ–∫—Ç—ã	
2	üó∫Ô∏è –û–±—â–∞—è —Å—Ö–µ–º–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞	5
	2.1 –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞	
	2.2 –°—Ö–µ–º–∞ –ø–æ—Ç–æ–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö	
	2.3 –ß–µ–∫-–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ	
	2.4 –¢–æ—á–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π	
3	‚öôÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è	8
	3.1 –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è (Linux/Windows)	
	3.2 –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π	
	3.3 –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è (venv)	
	3.4 –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤	
	3.5 –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã	
	3.6 –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞	
4	üß© –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –º–æ–¥—É–ª–µ–π	10
	4.1 –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤	
	4.2 –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –∏ –∏—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ	
	4.3 –û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ main.py	
	4.4 –°—Ç—Ä–∞—Ç–µ–≥–∏—è –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å	
5	üì¨ –†–∞–±–æ—Ç–∞ —Å –≤—Ö–æ–¥—è—â–∏–º–∏ –ø–∏—Å—å–º–∞–º–∏ –∏ –∞—Ä—Ö–∏–≤–∞–º–∏	14
	5.1 mail_parser.py: –ø—Ä–∏—ë–º –ø–æ—á—Ç—ã, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ	
	5.2 archive_handler.py: –≥–ª—É–±–æ–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è	
	5.3 –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏	
6	üìä –û–±—Ä–∞–±–æ—Ç–∫–∞ Excel –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö	21
	6.1 excel_processor.py: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü	
	6.2 data_enrichment.py: –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–æ–≤	
	6.3 validator.py: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã	
7	üóÇÔ∏è –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏	31
	7.1 folder_structurer.py: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–∞–ø–∫–∞–º	
	7.2 –ö–æ–Ω—Ç—Ä–æ–ª—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏ –∏—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞	
	7.3 exporter.py: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è JSON-—Ñ–∞–π–ª–æ–≤ –¥–ª—è 1–°	
	7.4 aggregator.py: –∞–≥—Ä–µ–≥–∞—Ü–∏—è JSON-—Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏	
8	üì§  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è 1–° (—á–µ—Ä–µ–∑ FTP)	44
	8.1 –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è 1–°	
	8.2 –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä 1–°	
	8.3 –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è 1–°	
	8.4 –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤	
9	üì¢ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è	53
	9.1 telegram_notifier.py: –ª–æ–≥–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —Ñ–æ—Ä–º–∞—Ç	
	9.2 –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π	
10	ü™µ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞—É–¥–∏—Ç	58
	10.1 –§–æ—Ä–º–∞—Ç—ã –ª–æ–≥–æ–≤: –æ–±—Ä–∞–±–æ—Ç–∫–∞, –æ—à–∏–±–∫–∏, –¥—É–±–ª–∏	
	10.2 –§–∞–π–ª pause.flag, –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã	
	10.3 –î–æ—Å—Ç—É–ø –∫ –ª–æ–≥–∞–º –∏ –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π	
11	üöÄ –°–∫–≤–æ–∑–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫	59
	11.1 –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞	
	11.2 –ü–æ—Ä—è–¥–æ–∫ –∑–∞–ø—É—Å–∫–∞ –∏ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏	
	11.3 –õ–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π	
	11.4. –ß–µ–∫-–ª–∏—Å—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∫–≤–æ–∑–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞	
	11.5. –°—Ü–µ–Ω–∞—Ä–∏–∏ –∑–∞–ø—É—Å–∫–∞ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏	




















üó∫Ô∏è 2. –û–±—â–∞—è —Å—Ö–µ–º–∞ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞
 
2.1 –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞
–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö –∞—Ä—Ö–∏–≤–æ–≤ –∏ —Ä–µ–µ—Å—Ç—Ä–æ–≤ –æ—Ç —Ä–∞–∑–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ (Valberis, Ozon –∏ –¥—Ä.) –ø–æ –∑–∞—Ä–∞–Ω–µ–µ –∑–∞–¥–∞–Ω–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤, –º–∞—Å–∫–∏, —à–∞–±–ª–æ–Ω—ã Excel –∏ –ø—É—Ç–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–æ–≥—É—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è. –í—Å—ë —ç—Ç–æ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
–ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ—Ö–æ–¥–∏—Ç 9 –∫–ª—é—á–µ–≤—ã—Ö —ç—Ç–∞–ø–æ–≤:
‚Ññ	–≠—Ç–∞–ø	–û–ø–∏—Å–∞–Ω–∏–µ
1	–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö	–ü—Ä–∏—ë–º –ø–∏—Å–µ–º —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ –∏–ª–∏ —Ñ–∞–π–ª–æ–≤ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏
2	–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ (routing)	–ö—Ä–µ–¥–∏—Ç–æ—Ä –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–æ —à–∞–±–ª–æ–Ω–∞–º, Excel-—Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º, –Ω–∞–∑–≤–∞–Ω–∏—è–º —Ñ–∞–π–ª–æ–≤
3	–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è	–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π, —É–¥–∞–ª–µ–Ω–∏–µ –º—É—Å–æ—Ä–∞, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –º–∞—Å–æ–∫
4	–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è	–ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π –∫ —à–∞–±–ª–æ–Ω–∞–º ‚Äú–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞‚Äù, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–æ—Ñ–∏–ª—é
5	–û–±—Ä–∞–±–æ—Ç–∫–∞ Excel-—Ä–µ–µ—Å—Ç—Ä–æ–≤	–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–æ–Ω–æ–∫, –∞–≤—Ç–æ-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö, –æ—á–∏—Å—Ç–∫–∞ –æ—Ç –ª–∏—à–Ω–µ–≥–æ
6	–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ PDF / JPG	OCR + –ø–∞—Ä—Å–∏–Ω–≥ –ò–ù–ù, –§–ò–û, –¥–∞—Ç –∏ —Å—É–º–º –ø–æ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º
7	–í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–µ–π	–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞—á–µ—Å—Ç–≤–∞, –ø–æ–ª–Ω–æ—Ç—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
8	–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è 1–°	–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ (JSON/Excel)
9	–ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä 1–°, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ	–ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP, Telegram-–æ—Ç—á—ë—Ç, –∑–∞–ø–∏—Å—å –æ—à–∏–±–æ–∫ –∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏
 
2.2 –°—Ö–µ–º–∞ –ø–æ—Ç–æ–∫–æ–≤ –¥–∞–Ω–Ω—ã—Ö
–£–ø—Ä–æ—â—ë–Ω–Ω–∞—è –≤–∏–∑—É–∞–ª—å–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞:
üì• Email / –ü–∞–ø–∫–∞ —Å –∞—Ä—Ö–∏–≤–æ–º
     ‚Üì
üîç route_selector.py ‚Äî –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ (Valberis, Ozon –∏ –¥—Ä.)
     ‚Üì
üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º—É—Å–æ—Ä–∞
     ‚Üì
üìÅ –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ + üßæ Excel-–æ–±—Ä–∞–±–æ—Ç–∫–∞
     ‚Üì                           ‚Üì
üìÉ PDF / JPG ‚Üí OCR + –ø–æ–∏—Å–∫ –¥–∞–Ω–Ω—ã—Ö (–ò–ù–ù, —Å—É–º–º—ã, –¥–∞—Ç—ã)
     ‚Üì
‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è + üîÅ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
     ‚Üì
üìÇ –°–±–æ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏ ‚Üí üì§ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –¥–ª—è 1–°
     ‚Üì
üåê **–ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ FTP –¥–ª—è 1–°**
     ‚Üì
üì¢ Telegram + –ª–æ–≥-—Ñ–∞–π–ª—ã
–§–æ—Ä–º–∞—Ç—ã –Ω–∞ –≤—Ö–æ–¥–µ: .zip, .rar, .xlsx, .pdf, .jpg
–í—ã—Ö–æ–¥:
‚Ä¢	–ò—Ç–æ–≥–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø–æ —à–∞–±–ª–æ–Ω—É
‚Ä¢	–ò—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª (JSON/Excel) –¥–ª—è 1–°
‚Ä¢	–õ–æ–≥ —É—Å–ø–µ—à–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ FTP
‚Ä¢	Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 
2.3 –ß–µ–∫-–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ
–≠—Ç–∞–ø	–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π / —Ä–æ–ª—å	–¢–∏–ø —É—á–∞—Å—Ç–∏—è
–ü—Ä–∏—ë–º –ø–∏—Å–µ–º, –∑–∞–≥—Ä—É–∑–∫–∞ –∏–∑ –ø–∞–ø–∫–∏	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞ (route_selector)	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–û–±—Ä–∞–±–æ—Ç–∫–∞ Excel / —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ PDF / OCR	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–í–∞–ª–∏–¥–∞—Ü–∏—è, –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–ó–∞–≥—Ä—É–∑–∫–∞ –≤ 1–°	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram	–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–æ	‚õî –ë–µ–∑ —É—á–∞—Å—Ç–∏—è
–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–±–æ–µ–≤ –∏ –ª–æ–≥–æ–≤	–û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é	‚ö† –¢–æ–ª—å–∫–æ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ
 

2.4 –¢–æ—á–∫–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏–π
–≠—Ç–∞–ø	–£—Å–ª–æ–≤–∏–µ / —Å–æ–±—ã—Ç–∏–µ	–î–µ–π—Å—Ç–≤–∏–µ —Å–∏—Å—Ç–µ–º—ã
–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è	–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞	–õ–æ–≥ –≤ routing_log.json, –º–µ—Ç–∫–∞ ‚Äúunknown‚Äù
–†–∞—Å–ø–∞–∫–æ–≤–∫–∞	–ü–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π –∞—Ä—Ö–∏–≤ –∏–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç	–§–∏–∫—Å–∞—Ü–∏—è –≤ error_log.json
–û–±—Ä–∞–±–æ—Ç–∫–∞ Excel	–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏	–õ–æ–≥ + –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ Telegram
–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏–∑ PDF	–ù–µ –Ω–∞–π–¥–µ–Ω–æ –§–ò–û / –ò–ù–ù / —Å—É–º–º–∞	–ó–∞–Ω–æ—Å–∏—Ç—Å—è –≤ not_processed.json
–í–∞–ª–∏–¥–∞—Ü–∏—è	–ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–∏–ø–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏	–ó–∞–Ω–æ—Å–∏—Ç—Å—è –≤ error_log.json
–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞	–í—Ä–µ–º–µ–Ω–Ω—ã–π —Å–±–æ–π –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ / OCR	–ü–æ–≤—Ç–æ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ 3 —Ä–∞–∑
–ü–µ—Ä–µ–¥–∞—á–∞ –Ω–∞ FTP	–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω FTP, –æ—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏	–§–∏–∫—Å–∞—Ü–∏—è –≤ error_log.json, –ø–æ–ø—ã—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏
Telegram	–õ—é–±–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ü–∏–∫–ª–∞	–û—Ç—á—ë—Ç —Å –∏—Ç–æ–≥–∞–º–∏ –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ª–æ–≥–∏
 




















3 ‚öôÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è (Windows Server, –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç)
 
3.1 –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
–ö–æ–º–ø–æ–Ω–µ–Ω—Ç	–¢—Ä–µ–±—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
–û–°	Windows Server 2019 –∏–ª–∏ –≤—ã—à–µ
Python	3.12 (64-bit)
OCR	Tesseract OCR + Ghostscript (–¥–ª—è PDF-–ø–æ–¥–¥–µ—Ä–∂–∫–∏)
–û–±—Ä–∞–±–æ—Ç–∫–∞ Excel	MS Excel –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è openpyxl)
–ü—Ä–∞–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è	–õ–æ–∫–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
–ó–∞–ø—É—Å–∫	–ß–µ—Ä–µ–∑ —Å–ª—É–∂–±—É Windows (nssm –∏–ª–∏ sc)
 
3.2 –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
üêç –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Python 3.12 (64-bit)
–°–∫–∞—á–∞–π —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞, –¥–æ–±–∞–≤—å –≤ PATH, –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–π:
‚Ä¢	‚úÖ pip
‚Ä¢	‚úÖ venv
‚Ä¢	‚úÖ "Install for all users"
üîç OCR
–£—Å—Ç–∞–Ω–æ–≤–∏ Tesseract OCR for Windows:
‚Ä¢	–£–∫–∞–∂–∏ –ø—É—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫–∏: C:\Program Files\Tesseract-OCR
‚Ä¢	–£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã PATH
 
3.3 –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
cd C:\ip_processor
python -m venv .venv
call .venv\Scripts\activate
pip install --upgrade pip
pip install -r requirements.txt
requirements.txt –≤–∫–ª—é—á–∞–µ—Ç:
‚Ä¢	pandas, openpyxl, pytesseract, pdfplumber, telebot, python-docx, regex, watchdog –∏ –¥—Ä.
 
3.4 –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
–°–æ–∑–¥–∞–π –ø–∞–ø–∫—É C:\ip_processor\configs –∏ –ø–æ–º–µ—Å—Ç–∏ —Ç—É–¥–∞:
‚Ä¢	paths.json ‚Äî –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º –∏ —à–∞–±–ª–æ–Ω–∞–º
‚Ä¢	settings.yaml ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º, –º–∞—Å–∫–∞–º, –ª–æ–≥–∏–∫–µ
‚Ä¢	reference.xlsx ‚Äî —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –º–∞—Å–æ–∫/—Ç–∏–ø–æ–≤ –ø–æ–ª–µ–π
–ü—Ä–∏–º–µ—Ä paths.json:
{
  "input_dir": "C:\\IP_Data\\in",
  "output_dir": "C:\\IP_Data\\out",
  "log_dir": "C:\\IP_Data\\logs"
}
 
3.5 –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ —Å–ª—É–∂–±—É Windows (–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ)
üîß –ü–æ–¥—Ö–æ–¥ 1: NSSM (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
1.	–°–∫–∞—á–∞–π NSSM ‚Äî Non-Sucking Service Manager
2.	–£—Å—Ç–∞–Ω–æ–≤–∏ –∏ —Å–æ–∑–¥–∞–π —Å–ª—É–∂–±—É:
nssm install IPProcessorService
3.	–í GUI:
‚Ä¢	Path: C:\ip_processor\.venv\Scripts\python.exe
‚Ä¢	Arguments: main.py
‚Ä¢	Startup directory: C:\ip_processor
4.	–ü—Ä–∏–º–µ–Ω–∏—Ç—å ‚Üí Start service.
üìå –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ: –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å, –≤–∏–¥–µ—Ç—å —Å—Ç–∞—Ç—É—Å, —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —Å–ª—É–∂–±–∞, –±–µ–∑ .bat
üîß –ü–æ–¥—Ö–æ–¥ 2: sc.exe (–≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ)
sc create IPProcessor binPath= "\"C:\ip_processor\.venv\Scripts\python.exe\" \"C:\ip_processor\main.py\"" start= auto
 
3.6 –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
‚Ä¢	–õ–æ–≥–∏ –ø–∏—à—É—Ç—Å—è –≤ C:\IP_Data\logs\main.log
‚Ä¢	Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ, –æ—à–∏–±–∫–µ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
‚Ä¢	–§–∞–π–ª pause.flag ‚Äî —Ä—É—á–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
‚Ä¢	–°–µ—Ä–≤–∏—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ç–∞—Ä—Ç—É–µ—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
 


4 –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –º–æ–¥—É–ª–µ–π

4.1 –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤
–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –ø–æ –º–æ–¥—É–ª—å–Ω–æ–º—É –ø—Ä–∏–Ω—Ü–∏–ø—É: –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–º Python-–º–æ–¥—É–ª–µ–º. –í—Å—è –ª–æ–≥–∏–∫–∞ –∑–∞–≤—è–∑–∞–Ω–∞ –Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É, –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ main.py –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è.
 
üìÅ –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
C:\ip_processor\
‚îÇ
‚îú‚îÄ‚îÄ main.py                      # –û—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä: —É–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–æ–º –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤
‚îÇ
‚îú‚îÄ‚îÄ config\                      # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã (–ø—É—Ç–∏, —à–∞–±–ª–æ–Ω—ã, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)
‚îÇ   ‚îú‚îÄ‚îÄ settings.yaml            # –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: —Ç–∞–π–º–∏–Ω–≥–∏, –ª–∏–º–∏—Ç—ã, —Ä–µ–∂–∏–º—ã
‚îÇ   ‚îú‚îÄ‚îÄ paths.json               # –ü—É—Ç–∏ –∏ —à–∞–±–ª–æ–Ω—ã –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º
‚îÇ   ‚îú‚îÄ‚îÄ routing_profiles.json    # –õ–æ–≥–∏–∫–∞ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —É—Å–ª–æ–≤–∏–π –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤
‚îÇ   ‚îî‚îÄ‚îÄ excel_fields.yaml        # –®–∞–±–ª–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π Excel/JSON
‚îÇ
‚îú‚îÄ‚îÄ modules\                     # –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —Å–∏—Å—Ç–µ–º—ã
‚îÇ   ‚îú‚îÄ‚îÄ mail_parser.py           # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å–µ–º, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞, —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ archive_handler.py       # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤, —É–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–≥–æ, –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–æ–≤
‚îÇ   ‚îú‚îÄ‚îÄ excel_processor.py       # –û–±—Ä–∞–±–æ—Ç–∫–∞ Excel-—Ä–µ–µ—Å—Ç—Ä–æ–≤, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –ø—Ä–∞–≤–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
‚îÇ   ‚îú‚îÄ‚îÄ data_enrichment.py       # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ PDF/JPG, OCR, –ø–æ–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π
‚îÇ   ‚îú‚îÄ‚îÄ validator.py             # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
‚îÇ   ‚îú‚îÄ‚îÄ folder_structurer.py     # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –≤ –Ω—É–∂–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä—É
‚îÇ   ‚îú‚îÄ‚îÄ exporter.py              # ‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ JSON –¥–ª—è 1–° (–ø–æ –ø–∞–ø–∫–µ/–ø—É–ª—É)
‚îÇ   ‚îú‚îÄ‚îÄ aggregator.py            # –ê–≥—Ä–µ–≥–∞—Ü–∏—è –≤—Å–µ—Ö —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö JSON –≤ –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è 1–°
‚îÇ   ‚îú‚îÄ‚îÄ ftp_sender.py            # –ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ FTP –¥–ª—è 1–°
‚îÇ   ‚îú‚îÄ‚îÄ telegram_notifier.py     # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤ –∏ –æ—à–∏–±–æ–∫ –≤ Telegram
‚îÇ   ‚îî‚îÄ‚îÄ route_selector.py        # –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä—à—Ä—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä—É
‚îÇ
‚îú‚îÄ‚îÄ logs\                        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
‚îÇ   ‚îú‚îÄ‚îÄ main.log                 # –û–±—â–∏–π –ª–æ–≥ —Å–æ–±—ã—Ç–∏–π –ø–æ –∫–∞–∂–¥–æ–º—É —à–∞–≥—É
‚îÇ   ‚îú‚îÄ‚îÄ error_log.json           # –û—à–∏–±–∫–∏: —á—Ç–µ–Ω–∏–µ, –ø–∞—Ä—Å–∏–Ω–≥, –ø–µ—Ä–µ–¥–∞—á–∞ –Ω–∞ FTP –∏ –¥—Ä.
‚îÇ   ‚îú‚îÄ‚îÄ not_processed.json       # –í—Å—ë, —á—Ç–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: –ø—É—Å—Ç—ã–µ –ø–æ–ª—è, –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ñ–æ—Ä–º–∞—Ç
‚îÇ   ‚îú‚îÄ‚îÄ duplicates_log.json      # –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥—É–±–ª–∏–∫–∞—Ç—ã –¥–æ–≥–æ–≤–æ—Ä–æ–≤
‚îÇ   ‚îî‚îÄ‚îÄ routing_log.json         # –õ–æ–≥: –∫–∞–∫ –±—ã–ª –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –º–∞—Ä—à—Ä—É—Ç –∏ –∫—Ä–µ–¥–∏—Ç–æ—Ä
‚îÇ
‚îî‚îÄ‚îÄ data\                        # –í—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    ‚îú‚îÄ‚îÄ in\                      # –í—Ö–æ–¥—è—â–∏–µ –∞—Ä—Ö–∏–≤—ã –∏ —Ñ–∞–π–ª—ã (e-mail –∏–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ)
    ‚îú‚îÄ‚îÄ out\                     # –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã, –≥–æ—Ç–æ–≤—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
    ‚îú‚îÄ‚îÄ temp\                    # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, —É–¥–∞–ª—è—é—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    ‚îî‚îÄ‚îÄ exports\                 # –°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã (–ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞–º, –ø–æ –ø—É–ª–∞–º, –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ)
 


4.2 –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –∏ –∏—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ú–æ–¥—É–ª—å	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
mail_parser.py	–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–µ, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–∏—Å–µ–º, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞
archive_handler.py	–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ (.zip/.rar), —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –≤–∞–ª–∏–¥–∞—Ü–∏—è
excel_processor.py	–ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è Excel, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫
data_enrichment.py	OCR –∏–∑ PDF/JPG, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π (–ò–ù–ù, –§–ò–û, –¥–∞—Ç—ã –∏ –¥—Ä.)
validator.py	–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π, —Ñ–æ—Ä–º–∞—Ç–æ–≤, –¥—É–±–ª–µ–π, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫—Å–ø–æ—Ä—Ç—É
folder_structurer.py	–ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è
exporter.py	–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö JSON-—Ñ–∞–π–ª–æ–≤ –¥–ª—è 1–° –ø–æ —à–∞–±–ª–æ–Ω—É (–ø–æ –¥–æ–≥–æ–≤–æ—Ä—É –∏–ª–∏ –ø—É–ª—É)
aggregator.py	–ê–≥—Ä–µ–≥–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö JSON-—Ñ–∞–π–ª–æ–≤ –≤ –µ–¥–∏–Ω—ã–π –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è 1–°
ftp_sender.py	–ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ (JSON/Excel) –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è 1–°
telegram_notifier.py	–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –æ—à–∏–±–æ–∫ –≤ Telegram: —É—Å–ø–µ—Ö, —Å–±–æ–∏, –∏—Ç–æ–≥–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã
route_selector.py	–í—ã–±–æ—Ä –º–∞—Ä—à—Ä—É—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ —à–∞–±–ª–æ–Ω–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ –∏ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö
 




4.3 –û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ main.py
–§–∞–π–ª main.py ‚Äî —ç—Ç–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤—Å–µ–π –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∏ —Å–∏—Å—Ç–µ–º—ã.
–û–Ω –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π ‚Äî –æ—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∏—Å–µ–º –¥–æ –ø–µ—Ä–µ–¥–∞—á–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ FTP –¥–ª—è 1–° –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram.
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ main.py:
‚Ä¢	–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: settings.yaml, paths.json, routing_profiles.json, excel_fields.yaml.
‚Ä¢	–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä—à—Ä—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ –≤—Ö–æ–¥—è—â–µ–≥–æ –∞—Ä—Ö–∏–≤–∞.
‚Ä¢	–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —ç—Ç–∞–ø—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:
o	–ø—Ä–∏—ë–º –ø–∏—Å–µ–º,
o	—Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞,
o	–ø–∞—Ä—Å–∏–Ω–≥,
o	–≤–∞–ª–∏–¥–∞—Ü–∏—è,
o	—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã,
o	—ç–∫—Å–ø–æ—Ä—Ç –≤ JSON,
o	–∞–≥—Ä–µ–≥–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞,
o	–ø–µ—Ä–µ–¥–∞—á–∞ –Ω–∞ FTP,
o	—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
‚Ä¢	–í–µ–¥—ë—Ç –ª–æ–≥–∏ –ø–æ –∫–∞–∂–¥–æ–º—É —ç—Ç–∞–ø—É, –ø–∏—à–µ—Ç —Å—Ç–∞—Ç—É—Å –∏ –æ—à–∏–±–∫–∏.
‚Ä¢	–ü–æ—Å—ã–ª–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram –∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –ª—é–±—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–±–æ–∏.
 
–ü—Ä–∏–º–µ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è –≤—ã–∑–æ–≤–∞ –º–æ–¥—É–ª–µ–π (—É–ø—Ä–æ—â—ë–Ω–Ω—ã–π):
from modules import (
    mail_parser, archive_handler, route_selector, excel_processor,
    data_enrichment, validator, folder_structurer,
    exporter,            # ‚Üê –Ω–æ–≤—ã–π –º–æ–¥—É–ª—å –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ JSON!
    aggregator,
    ftp_sender, telegram_notifier
)

mail_parser.run()
archive_handler.run()
route_selector.run()
excel_processor.run()
data_enrichment.run()
validator.run()
folder_structurer.run()
exporter.run()         # üí° –≠–∫—Å–ø–æ—Ä—Ç –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ JSON
aggregator.run()       # üí° –ê–≥—Ä–µ–≥–∞—Ü–∏—è –≤—Å–µ—Ö JSON-—Ñ–∞–π–ª–æ–≤
ftp_sender.run()       # üí° –ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ FTP –¥–ª—è 1–°
telegram_notifier.run()
 
–í–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—É—Å–∫–∞ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã main.py:
‚Ä¢	--skip-mail ‚Äî –Ω–µ –ø–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è –∫ –ø–æ—á—Ç–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤);
‚Ä¢	--resume-from=validator ‚Äî –Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –Ω—É–∂–Ω–æ–≥–æ —ç—Ç–∞–ø–∞;
‚Ä¢	--debug-routing ‚Äî –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—ã–±–æ—Ä –º–∞—Ä—à—Ä—É—Ç–∞;
‚Ä¢	--no-ftp ‚Äî –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ FTP;
‚Ä¢	--only-aggregation ‚Äî –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–æ–ª—å–∫–æ —ç—Ç–∞–ø –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–∏.
 
4.4 –°—Ç—Ä–∞—Ç–µ–≥–∏—è –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å
–ü—Ä–∏–Ω—Ü–∏–ø	–†–µ–∞–ª–∏–∑–∞—Ü–∏—è
‚ùó –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –æ—à–∏–±–æ–∫	–í—Å–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ error_log.json
üõë –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—É–∑–∞–º–∏	–§–∞–π–ª pause.flag –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É –¥–æ —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞
üîÅ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞	–ü–æ–≤—Ç–æ—Ä —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–±–æ–π–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –∏ —ç—Ç–∞–ø–æ–≤ (–≤ —Ç.—á. –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ FTP)
üìÇ –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π	–ö–∞–∂–¥—ã–π —à–∞–≥ ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç, –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é
üîå –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å	–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ ‚Äî —á–µ—Ä–µ–∑ –∫–æ–Ω—Ñ–∏–≥, –±–µ–∑ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è –∫–æ–¥–∞
üîß –ú–æ–¥—É–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è	–û–¥–∏–Ω –∫–æ–¥ ‚Äî —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤
üåê –ù–∞–¥—ë–∂–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ FTP	–û—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–≤—Ç–æ—Ä –ø–æ —Ç–∞–π–º–µ—Ä—É
‚úÖ –†–∞–±–æ—Ç–∞ –∫–∞–∫ —Å–ª—É–∂–±–∞	NSSM/sc/systemd, –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –∏ –∞–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫, –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ª–æ–≥–∏
 

























üì¨ 5. –†–∞–±–æ—Ç–∞ —Å –≤—Ö–æ–¥—è—â–∏–º–∏ –ø–∏—Å—å–º–∞–º–∏ –∏ –∞—Ä—Ö–∏–≤–∞–º–∏
 
5.1 mail_parser.py: –ø—Ä–∏—ë–º –ø–æ—á—Ç—ã, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–∏—ë–º–∞ —Ä–µ–µ—Å—Ç—Ä–æ–≤ –æ—Ç –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ (Valberis, Ozon –∏ –¥—Ä.) –ø–æ IMAP. –ú–æ–¥—É–ª—å:
‚Ä¢	–ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ e-mail,
‚Ä¢	–ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–∏—Å—å–º–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º,
‚Ä¢	–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞,
‚Ä¢	—Å–æ–∑–¥–∞—ë—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É {N}(–î–î.–ú–ú.–ì–ì–ì–ì),
‚Ä¢	—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π,
‚Ä¢	—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ,
‚Ä¢	–∑–∞–ø—É—Å–∫–∞–µ—Ç –º–∞—Ä—à—Ä—É—Ç–Ω—É—é –ª–æ–≥–∏–∫—É (creditor_id, folder, profile).
üõ†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ø—Ä–∏–º–µ—Ä: mail_filters.yaml)
filters:
  - name: "Valberis"
    from: "reestry@valberis.ru"
    subject_regexp: "–†–µ–µ—Å—Ç—Ä.*Valberis"
    folder: "5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å"
    creditor_id: "VALB"

  - name: "Ozon"
    from: "reestry@ozon.ru"
    subject_regexp: "–†–µ–µ—Å—Ç—Ä.*Ozon"
    folder: "–û–ó–û–ù"
    creditor_id: "OZON"
üìÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞–±–æ—á–∏—Ö –ø—É—Ç–µ–π:
—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/{–ö–†–ï–î–ò–¢–û–†}/–†–µ–µ—Å—Ç—Ä—ã/{N}(–î–î.–ú–ú.–ì–ì–ì–ì)/
üîÑ –ê–ª–≥–æ—Ä–∏—Ç–º mail_parser.py
‚Ññ	–≠—Ç–∞–ø	–û–ø–∏—Å–∞–Ω–∏–µ
1	–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–µ	–ß–µ—Ä–µ–∑ IMAP, —É—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∑–∞–¥–∞–Ω–∞ –≤ settings.yaml
2	–ß—Ç–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤	–ó–∞–≥—Ä—É–∑–∫–∞ mail_filters.yaml, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–≤–∞—Ä—è –ø—Ä–∞–≤–∏–ª
3	–ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º	–¢–æ–ª—å–∫–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ, —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏, –ø–æ —Ñ–∏–ª—å—Ç—Ä—É From –∏ Subject
4	–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞	–ü–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é —Å —Ñ–∏–ª—å—Ç—Ä–æ–º ‚Üí –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç—Å—è creditor_id
5	–°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏	–ê–Ω–∞–ª–∏–∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ {N} ‚Üí —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏ {N+1}(–î–î.–ú–ú.–ì–ì–ì–ì)
6	–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π	–í—Å–µ .zip, .xlsx, .rar, —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
7	–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö	–í meta.json –∏–ª–∏ —Ç–∞–±–ª–∏—Ü—É (–ø—É—Ç—å, –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è, creditor_id, –¥–∞—Ç–∞, —Ç–µ–º–∞)
8	–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ	–í main.log, mail_log.json ‚Äî –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—à–∏–±–∫–∏
9	–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–ª—å—à–µ	–§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è mail_payload ‚Äî —Å–ø–∏—Å–æ–∫ –≤–ª–æ–∂–µ–Ω–∏–π —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —ç—Ç–∞–ø–∞
üìã –ü—Ä–∏–º–µ—Ä –ø—É—Ç–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
–í—Ö–æ–¥—è—â–µ–µ –ø–∏—Å—å–º–æ ‚Üí –æ—Ç: reestry@valberis.ru
–§–∏–ª—å—Ç—Ä: Valberis ‚Üí creditor_id: VALB ‚Üí folder: 5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å

–°–æ–∑–¥–∞–Ω –ø—É—Ç—å:
—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/6(23.06.2025)/

–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ:
- reestr_valb_june.zip
- cover_valb.xlsx

–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:
{
  "creditor_id": "VALB",
  "email_subject": "–†–µ–µ—Å—Ç—Ä Valberis –∏—é–Ω—å",
  "email_date": "2025-06-23T12:14",
  "saved_path": "‚Ä¶/6(23.06.2025)/reestr_valb_june.zip",
  "original_filename": "reestr_valb_june.zip"
}


üß† –†–∞–±–æ—á–∏–π –∫–æ–¥ mail_parser.py

# 1. mail_parser.py ‚Äî –º–æ–¥—É–ª—å –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–∏—Å–µ–º
import imaplib
import email
import re
import os
import json
import datetime
import yaml

# === –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤ ===
with open('config/settings.yaml', 'r', encoding='utf-8') as f:
    settings = yaml.safe_load(f)

with open('config/mail_filters.yaml', 'r', encoding='utf-8') as f:
    mail_filters = yaml.safe_load(f)['filters']

IMAP_HOST = settings['imap']['host']
IMAP_PORT = settings['imap']['port']
IMAP_USER = settings['imap']['login']
IMAP_PASS = settings['imap']['password']

BASE_DIR = r"—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã"

# === –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–π –ø–∞–ø–∫–∏ ===
def get_next_folder_number(base_path):
    max_num = 0
    for name in os.listdir(base_path):
        match = re.match(r"(\d+)\(\d{2}.\d{2}.\d{4}\)", name)
        if match:
            num = int(match.group(1))
            if num > max_num:
                max_num = num
    return max_num + 1

# === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–µ –∏ –ø–æ–∏—Å–∫ –ø–∏—Å–µ–º ===
def fetch_and_parse_mail():
    mail = imaplib.IMAP4_SSL(IMAP_HOST, IMAP_PORT)
    mail.login(IMAP_USER, IMAP_PASS)
    mail.select("inbox")

    result, data = mail.search(None, 'UNSEEN')
    mail_ids = data[0].split()

    for uid in mail_ids:
        result, message_parts = mail.fetch(uid, '(RFC822)')
        raw_email = message_parts[0][1]
        msg = email.message_from_bytes(raw_email)
        from_addr = email.utils.parseaddr(msg['From'])[1]
        subject = msg['Subject']

        for f in mail_filters:
            if re.search(f['subject_regexp'], subject, re.IGNORECASE) and from_addr == f['from']:
                creditor_id = f['creditor_id']
                creditor_folder = f['folder']
                process_email(msg, creditor_id, creditor_folder, subject)
                break

    mail.logout()

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –ø–∏—Å—å–º–∞ ===
def process_email(msg, creditor_id, creditor_folder, subject):
    today = datetime.datetime.now().strftime('%d.%m.%Y')
    base_path = os.path.join(BASE_DIR, creditor_folder, "–†–µ–µ—Å—Ç—Ä—ã")
    os.makedirs(base_path, exist_ok=True)

    n = get_next_folder_number(base_path)
    session_folder = os.path.join(base_path, f"{n}({today})")
    os.makedirs(session_folder, exist_ok=True)

    attachments = []
    for part in msg.walk():
        if part.get_content_maintype() == 'multipart':
            continue
        filename = part.get_filename()
        if not filename:
            continue
        filepath = os.path.join(session_folder, filename)
        with open(filepath, 'wb') as f:
            f.write(part.get_payload(decode=True))
        attachments.append({
            "creditor_id": creditor_id,
            "email_subject": subject,
            "email_date": datetime.datetime.now().isoformat(),
            "saved_path": filepath,
            "original_filename": filename
        })

    # === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö ===
    with open(os.path.join(session_folder, 'meta.json'), 'w', encoding='utf-8') as f:
        json.dump(attachments, f, ensure_ascii=False, indent=2)

    # === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
    with open('logs/mail_log.json', 'a', encoding='utf-8') as f:
        for item in attachments:
            f.write(json.dumps(item, ensure_ascii=False) + '\n')

    print(f"[{creditor_id}] –ü–∏—Å—å–º–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ, —Å–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {session_folder}")

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    fetch_and_parse_mail()
 
5.2 archive_handler.py: –≥–ª—É–±–æ–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤, —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ‚Äú–º—É—Å–æ—Ä–∞‚Äù, –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞, –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É (Excel/–≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã).
üîÅ –ê–ª–≥–æ—Ä–∏—Ç–º archive_handler.py
‚Ññ	–≠—Ç–∞–ø	–î–µ–π—Å—Ç–≤–∏–µ
1	–ü–æ–∏—Å–∫ –∞—Ä—Ö–∏–≤–æ–≤	–ò—â–µ—Ç .zip, .rar, .7z –≤–Ω—É—Ç—Ä–∏ ‚Ä¶/{N}(–î–î.–ú–ú.–ì–ì–ì–ì)/
2	–†–∞—Å–ø–∞–∫–æ–≤–∫–∞	–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–µ—Ä–µ–±–æ—Ä –ø–∞—Ä–æ–ª–µ–π –∏–∑ archive_config.yaml, –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è
3	–†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞	–ï—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –µ—â—ë –∞—Ä—Ö–∏–≤—ã ‚Äî –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –¥–æ –ø–æ–ª–Ω–æ–≥–æ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è
4	–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è	–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç ‚Äú—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ‚Äù –ø–∞–ø–∫–∏, –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ —Ü–µ–ª–µ–≤—ã–µ —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏
5	–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–∞–ø–æ–∫	–ü–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞ (10‚Äì13 —Ü–∏—Ñ—Ä), –∏–º—è ‚Üí –Ω–æ–º–µ—Ä_–¥–æ–≥–æ–≤–æ—Ä–∞
6	–£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–≥–æ	–í—Å—ë, —á—Ç–æ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ ‚Äî —É–¥–∞–ª—è–µ—Ç—Å—è
7	–í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞–ø–æ–∫	–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è PDF, Excel, —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
8	–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ	–°–æ–∑–¥–∞—ë—Ç—Å—è archive_log.json, –æ—à–∏–±–∫–∏ ‚Äî –≤ error_log.json
9	–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–ª—å—à–µ	–û—Å—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –ø–∞–ø–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –¥–ª—è excel_processor.py
 

üì¶ –†–∞–±–æ—á–∏–π –∫–æ–¥  archive_handler.py

# archive_handler.py
import os
import re
import shutil
import zipfile
import datetime
import json

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
VALID_EXTENSIONS = [".pdf", ".xlsx", ".jpg"]
MIN_FILES_REQUIRED = 2
ARCHIVE_EXTENSIONS = [".zip", ".rar"]  # –†–∞—Å—à–∏—Ä—è–µ–º –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
archive_log = []
error_log = []

def extract_archives(root_dir):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –≤—Å–µ –∞—Ä—Ö–∏–≤—ã –≤ –ø–∞–ø–∫–µ."""
    for root, _, files in os.walk(root_dir):
        for file in files:
            if file.lower().endswith(tuple(ARCHIVE_EXTENSIONS)):
                archive_path = os.path.join(root, file)
                try:
                    with zipfile.ZipFile(archive_path, 'r') as zip_ref:
                        extract_to = os.path.splitext(archive_path)[0]
                        zip_ref.extractall(extract_to)
                        archive_log.append({
                            "archive": archive_path,
                            "status": "unpacked",
                            "destination": extract_to
                        })
                except Exception as e:
                    error_log.append({
                        "archive": archive_path,
                        "error": str(e)
                    })

def extract_contract_number(folder_name):
    """–ò—â–µ—Ç –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –≤ –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏ (10‚Äì13 —Ü–∏—Ñ—Ä –ø–æ–¥—Ä—è–¥)."""
    match = re.search(r"\b\d{10,13}\b", folder_name)
    return match.group(0) if match else None

def validate_folder(folder_path):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –ø–∞–ø–∫–∏ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ: –∫–æ–ª-–≤–æ –∏ —Ç–∏–ø —Ñ–∞–π–ª–æ–≤."""
    files = os.listdir(folder_path)
    valid_files = [f for f in files if os.path.splitext(f)[1].lower() in VALID_EXTENSIONS]
    if len(valid_files) < MIN_FILES_REQUIRED:
        return False
    for file in valid_files:
        full_path = os.path.join(folder_path, file)
        if os.path.getsize(full_path) == 0:
            return False
    return True

def process_folders(session_dir):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –ø–∞–ø–æ–∫: –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –≤–∞–ª–∏–¥–∞—Ü–∏—è, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è."""
    manual_check_dir = os.path.join(session_dir, "__manual_check__")
    os.makedirs(manual_check_dir, exist_ok=True)

    for name in os.listdir(session_dir):
        path = os.path.join(session_dir, name)
        if not os.path.isdir(path) or name == "__manual_check__":
            continue

        number = extract_contract_number(name)
        if number:
            new_path = os.path.join(session_dir, number)
            if new_path != path:
                shutil.move(path, new_path)
                path = new_path
        else:
            # –ü–∞–ø–∫–∞ –±–µ–∑ –Ω–æ–º–µ—Ä–∞ ‚Äî –Ω–∞ —Ä—É—á–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
            shutil.move(path, os.path.join(manual_check_dir, name))
            error_log.append({
                "folder": name,
                "reason": "No contract number in folder name"
            })
            continue

        if not validate_folder(path):
            shutil.move(path, os.path.join(manual_check_dir, os.path.basename(path)))
            error_log.append({
                "folder": path,
                "reason": "Invalid structure or empty files"
            })
        else:
            archive_log.append({
                "folder": path,
                "timestamp": datetime.datetime.now().isoformat()
            })

def save_logs(log_dir):
    os.makedirs(log_dir, exist_ok=True)
    with open(os.path.join(log_dir, "archive_log.json"), "w", encoding="utf-8") as f:
        json.dump(archive_log, f, ensure_ascii=False, indent=2)
    with open(os.path.join(log_dir, "error_log.json"), "w", encoding="utf-8") as f:
        json.dump(error_log, f, ensure_ascii=False, indent=2)

# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == "__main__":
    session_dir = r"—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/6(23.06.2025)"
    log_dir = "./logs"
    
    extract_archives(session_dir)
    process_folders(session_dir)
    save_logs(log_dir)





5.3 –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
üßæ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ—Å–ª–µ 5.2:
—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/6(23.06.2025)/
‚îú‚îÄ‚îÄ 32404294000/
‚îÇ   ‚îú‚îÄ‚îÄ —Ä–µ–µ—Å—Ç—Ä_–∏—é–Ω—å.xlsx
‚îÇ   ‚îú‚îÄ‚îÄ –ø–∞—Å–ø–æ—Ä—Ç.pdf
‚îÇ   ‚îî‚îÄ‚îÄ –¥–æ–≥–æ–≤–æ—Ä.pdf
‚îú‚îÄ‚îÄ 31456789012/
‚îÇ   ‚îú‚îÄ‚îÄ ‚Ä¶
üìé –í–∞–ª–∏–¥–∞—Ü–∏—è:
–ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è	–£—Å–ª–æ–≤–∏–µ
–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏	–¢–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ (—Ä–µ–≥—É–ª—è—Ä–∫–∞)
–ö–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤	–ù–µ –º–µ–Ω–µ–µ –¥–≤—É—Ö ‚Äî Excel + 1 –¥–æ–∫—É–º–µ–Ω—Ç
–¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤	.xlsx, .pdf, .jpg
–ü—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã	–ù–µ –¥–æ–ø—É—Å–∫–∞—é—Ç—Å—è
–ê—Ä—Ö–∏–≤—ã	–ù–µ —É–¥–∞–ª—è—é—Ç—Å—è ‚Äî –æ—Å—Ç–∞—é—Ç—Å—è –¥–ª—è –∞—É–¥–∏—Ç–∞
 
üìà –†–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–¥—É–ª—è
‚Ä¢	–ö–∞–∂–¥—ã–π –∫—Ä–µ–¥–∏—Ç–æ—Ä –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ—é —Å—Ç—Ä–æ–≥–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ –ø–∞–ø–∫–∞–º–∏;
‚Ä¢	–ù–∏–∫–∞–∫–æ–π ‚Äú—Ä—É—á–Ω–æ–π‚Äù —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–ª–∏ –∞–Ω–∞–ª–∏–∑–∞ ‚Äî –≤—Å—ë –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è;
‚Ä¢	–û–±—Ä–∞–±–æ—Ç–∫–∞ –≥–æ—Ç–æ–≤–∞ –∫ Excel-–ø–∞—Ä—Å–∏–Ω–≥—É –∏ –¥–∞–ª—å–Ω–µ–π—à–µ–º—É –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é.
 
















üìä 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ Excel –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

 
6.1 excel_processor.py: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Excel-—Ñ–∞–π–ª –≤ –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–µ —Å –Ω–æ–º–µ—Ä–æ–º –¥–æ–≥–æ–≤–æ—Ä–∞:
‚Ä¢	—Ñ–∏–∫—Å–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–¥–ª—è –∞—É–¥–∏—Ç–∞, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π);
‚Ä¢	–ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ—Ç —Ñ–∞–π–ª –ø–æ–¥ –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞;
‚Ä¢	–≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ —à–∞–±–ª–æ–Ω–∞ –≤ input_fields.yaml;
‚Ä¢	–¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Å—Ç–æ–ª–±—Ü—ã –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –∏–∑ required_fields.yaml (–ø–∞—Å–ø–æ—Ä—Ç–Ω—ã–µ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –Ω–µ—Ç);
‚Ä¢	—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Ä—è–¥–æ–∫ —Å—Ç–æ–ª–±—Ü–æ–≤ —Å–æ–≥–ª–∞—Å–Ω–æ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É;
‚Ä¢	–ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—à–∏—Ä–∏–Ω–∞, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ, –æ–±—Ä–µ–∑–∫–∞ —Ç–µ–∫—Å—Ç–∞);
‚Ä¢	–ª–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç ‚Äú—á—Ç–æ –±—ã–ª–æ ‚Äî —á—Ç–æ —Å—Ç–∞–ª–æ‚Äù.
 
üìÇ –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã
–≠—Ç–∞–ø	–û–ø–∏—Å–∞–Ω–∏–µ
1Ô∏è‚É£	–ü–æ–∏—Å–∫ Excel-—Ñ–∞–π–ª–∞ –≤ –ø–∞–ø–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ (/‚Ä¶/–Ω–æ–º–µ—Ä_–¥–æ–≥–æ–≤–æ—Ä–∞/)
2Ô∏è‚É£	–°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∫–æ–ø–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 32404294000_original.xlsx)
3Ô∏è‚É£	–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ pandas, —Ñ–∏–∫—Å–∞—Ü–∏—è –∏—Å—Ö–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –ª–æ–≥
4Ô∏è‚É£	–í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞–ª–∏—á–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π (–Ω–∞ –æ—Å–Ω–æ–≤–µ input_fields.yaml)
5Ô∏è‚É£	–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ (–Ω–∞ –æ—Å–Ω–æ–≤–µ required_fields.yaml)
6Ô∏è‚É£	–ò—Ç–æ–≥–æ–≤—ã–π –ø–æ—Ä—è–¥–æ–∫: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω—ã—Ö –∏ –Ω–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É
7Ô∏è‚É£	–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ —Å –∏–º–µ–Ω–µ–º –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞
8Ô∏è‚É£	–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (auto-width, wrap text, left alignment)
9Ô∏è‚É£	–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –ø–µ—Ä–µ–¥–∞—á–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
 
üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª–µ–π
‚Ä¢	input_fields.yaml ‚Äî —ç—Ç–∞–ª–æ–Ω –≤—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
input_fields:
  - ‚Ññ–ø
  - –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û
  - –ò–ù–ù
  - –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞
  - –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞
  - –ê–¥—Ä–µ—Å
  - ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞
  - –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞
  - –°—É–º–º–∞ –∑–∞–π–º–∞
  - –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º
  - –°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢	required_fields.yaml ‚Äî –∏—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (–≤—Å—ë, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–æ—Å–ª–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏):
required_fields:
  - ‚Ññ–ø
  - –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û
  - –ò–ù–ù
  - –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞
  - –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞
  - –ê–¥—Ä–µ—Å
  - ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞
  - –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞
  - –°—É–º–º–∞ –∑–∞–π–º–∞
  - –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º
  - –°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞
  - –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞
  - –ö–µ–º –≤—ã–¥–∞–Ω
  - –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  - –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
  - –°—Ä–æ–∫ –∑–∞–π–º–∞
  - –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞
 
üõ† –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
‚Ä¢	1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –ª–∏ –≤—Ö–æ–¥–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É ‚Äî input_fields.yaml)
‚Ä¢	2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (–µ—Å—Ç—å –ª–∏ –≤—Å–µ –ø–æ–ª—è –∏–∑ required_fields.yaml)
‚Ä¢	3. –î–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –§–ò–û, –ò–ù–ù, ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞, –°—É–º–º–∞ –∑–∞–π–º–∞): –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –ø—Ä–æ–ø—É—Å–∫–∏.
‚Ä¢	4. –î–ª—è –ø–∞—Å–ø–æ—Ä—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è: –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –ø—É—Å—Ç—ã–º–∏ –¥–∞–∂–µ –ø–æ—Å–ª–µ enrichment ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–ª–∞–≥/–ª–æ–≥.
–û—à–∏–±–∫–∏ –∏ –ø—Ä–æ–ø—É—Å–∫–∏ –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –≤ excel_log.json. –í—Å–µ —ç—Ç–∞–ª–æ–Ω—ã ‚Äî –≤–Ω–µ—à–Ω–∏–µ!
 
üìë –ü—Ä–∏–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–π —Ç–∞–±–ª–∏—Ü—ã (—à–∞–ø–∫–∞):
| ‚Ññ–ø | –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û | –ò–ù–ù | –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞ | –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞ | –ê–¥—Ä–µ—Å | ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞ | –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞ | –°—É–º–º–∞ –∑–∞–π–º–∞ | –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ | –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É | –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º | –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º | –°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏ | –°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ | –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞ | –ö–µ–º –≤—ã–¥–∞–Ω | –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è | –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è | –°—Ä–æ–∫ –∑–∞–π–º–∞ | –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞ |
 
‚úÖ –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ (—Å –≤–Ω–µ—à–Ω–∏–º–∏ —à–∞–±–ª–æ–Ω–∞–º–∏)
import os
import pandas as pd
import openpyxl
import logging
import yaml
from openpyxl.styles import Alignment

logging.basicConfig(filename='logs/excel_processor.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# –ó–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–∞–ª–æ–Ω–æ–≤ –∏–∑ YAML
def load_yaml_list(filepath, key):
    with open(filepath, 'r', encoding='utf-8') as f:
        data = yaml.safe_load(f)
        return data[key]

INPUT_FIELDS = load_yaml_list('config/input_fields.yaml', 'input_fields')
REQUIRED_FIELDS = load_yaml_list('config/required_fields.yaml', 'required_fields')

def process_contract_folder(folder_path):
    contract_number = os.path.basename(folder_path)

    # –ü–æ–∏—Å–∫ Excel-—Ñ–∞–π–ª–∞
    excel_files = [f for f in os.listdir(folder_path) if f.lower().endswith('.xlsx')]
    if not excel_files:
        logging.error(f"{contract_number}: Excel-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return False

    excel_path = os.path.join(folder_path, excel_files[0])
    original_excel_path = os.path.join(folder_path, f"{contract_number}_original.xlsx")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –¥–ª—è –∞—É–¥–∏—Ç–∞
    if not os.path.exists(original_excel_path):
        try:
            import shutil
            shutil.copy2(excel_path, original_excel_path)
        except Exception as e:
            logging.error(f"{contract_number}: –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")

    new_excel_path = os.path.join(folder_path, f"{contract_number}.xlsx")
    if excel_path != new_excel_path:
        os.rename(excel_path, new_excel_path)
        logging.info(f"{contract_number}: Excel –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ {contract_number}.xlsx")

    # –ß—Ç–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    df = pd.read_excel(new_excel_path)
    input_columns_found = list(df.columns)
    logging.info(f"{contract_number}: –ò—Å—Ö–æ–¥–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {input_columns_found}")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å—Ö–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
    missing_in_input = [col for col in INPUT_FIELDS if col not in input_columns_found]
    if missing_in_input:
        logging.warning(f"{contract_number}: –í–ù–ò–ú–ê–ù–ò–ï! –í –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–æ–ª–±—Ü—ã: {missing_in_input}")
    else:
        logging.info(f"{contract_number}: –í—Å–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –≤—Ö–æ–¥–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã
    for col in REQUIRED_FIELDS:
        if col not in df.columns:
            df[col] = ""
            logging.info(f"{contract_number}: –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü '{col}'")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    result_columns = list(df.columns)
    missing_in_result = [col for col in REQUIRED_FIELDS if col not in result_columns]
    if missing_in_result:
        logging.error(f"{contract_number}: –ü–æ—Å–ª–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ –ù–ï –•–í–ê–¢–ê–ï–¢ —Å—Ç–æ–ª–±—Ü–æ–≤: {missing_in_result}")
    else:
        logging.info(f"{contract_number}: –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∞–ª–∏–¥–Ω–∞.")

    # –£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    df = df[REQUIRED_FIELDS]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º
    temp_path = new_excel_path.replace(".xlsx", "_temp.xlsx")
    df.to_excel(temp_path, index=False)

    wb = openpyxl.load_workbook(temp_path)
    ws = wb.active
    for col in ws.columns:
        max_len = max(len(str(cell.value)) if cell.value else 0 for cell in col)
        col_letter = col[0].column_letter
        ws.column_dimensions[col_letter].width = max(10, max_len + 2)
        for cell in col:
            cell.alignment = Alignment(wrap_text=True, horizontal="left")
    wb.save(new_excel_path)
    os.remove(temp_path)

    # –õ–æ–≥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    logging.info(f"{contract_number}: –ò—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {list(df.columns)}")
    return True
 




–í–æ—Ç –∫–∞–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª 6.2 data_enrichment.py ‚Äî —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π, —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π, –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø–æ–¥ —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å:
 
6.2 data_enrichment.py: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–æ–≤
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–ú–æ–¥—É–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–ø–æ–ª–Ω—è–µ—Ç –ø—É—Å—Ç—ã–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—è –≤ Excel –ø–æ –∫–∞–∂–¥–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ PDF, —Å–∫–∞–Ω–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è OCR (—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞), —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∏ –≥–∏–±–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (YAML).
 
‚öôÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
–≠—Ç–∞–ø	–î–µ–π—Å—Ç–≤–∏–µ
1Ô∏è‚É£	–ß—Ç–µ–Ω–∏–µ Excel, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –∏ –ø–æ–ª–µ–π, –≥–¥–µ –µ—Å—Ç—å –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è (–ø–æ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ enrichment_fields.yaml)
2Ô∏è‚É£	–ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ (–ø–∞—Å–ø–æ—Ä—Ç.pdf, –∞–Ω–∫–µ—Ç–∞.pdf, –¥–æ–≥–æ–≤–æ—Ä.pdf –∏ –¥—Ä.) ‚Äî —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏–º–µ–Ω –∑–∞–¥–∞—ë—Ç—Å—è –≤ YAML-–∫–æ–Ω—Ñ–∏–≥–µ
3Ô∏è‚É£	–î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è –∏–∑ enrichment_fields.yaml –∏—â–µ–º –∑–Ω–∞—á–µ–Ω–∏—è: ‚Ä¢ –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ ‚Äî –∏–¥—ë–º –ø–æ –≤—Å–µ–º —Ñ–∞–π–ª–∞–º –∏ –∏—â–µ–º —Ä–µ–≥—É–ª—è—Ä–∫–æ–π, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π –≤ YAML ‚Ä¢ –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ Excel, —Ñ–∏–∫—Å–∏—Ä—É–µ–º –≤ –ª–æ–≥–µ, –∏–∑ –∫–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –∏ –ø–æ –∫–∞–∫–æ–π –º–∞—Å–∫–µ
4Ô∏è‚É£	–ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –ø–æ–ª–µ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—É—Å—Ç—ã–º –∏ –∏–¥—ë—Ç –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ª–æ–≥ –ø—Ä–æ–ø—É—Å–∫–æ–≤ (–æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è enrichment)
5Ô∏è‚É£	–ò—Ç–æ–≥–æ–≤—ã–π Excel —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è (–ø–æ–≤–µ—Ä—Ö —Å—Ç–∞—Ä–æ–≥–æ), –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è: ‚Äî –∫–∞–∫–∏–µ –ø–æ–ª—è –±—ã–ª–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω—ã, ‚Äî —á—Ç–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, ‚Äî –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å
6Ô∏è‚É£	(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ‚Äî enrichment –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—Ä–æ–∫ —Å –ø—É—Å—Ç—ã–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ –ø–æ–ª—è–º–∏
 
üß† –ì–∏–±–∫–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ø—Ä–∏–º–µ—Ä enrichment_fields.yaml):
enrichment_fields:
  –§–ò–û: '[–ê-–Ø–Å][–∞-—è—ë]+\s[–ê-–Ø–Å][–∞-—è—ë]+\s[–ê-–Ø–Å][–∞-—è—ë]+'
  –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: '\b\d{2}\.\d{2}\.\d{4}\b'
  –°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞: '–ø–∞—Å–ø–æ—Ä—Ç.*?(\d{2}\s\d{2})'
  –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞: '–ø–∞—Å–ø–æ—Ä—Ç.*?\d{2}\s\d{2}\s?(\d{6})'
  –ö–µ–º –≤—ã–¥–∞–Ω: '–≤—ã–¥–∞–Ω[^\w\d]*(.+?)(?=,|–∫–æ–¥|$)'
  –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: '\b\d{3}-\d{3}\b'
  –ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: '–∞–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: (.+)'
  –ò–ù–ù: '\b\d{12}\b'
  –û–ì–†–ù–ò–ü: '\b\d{15}\b'
  –¢–µ–ª–µ—Ñ–æ–Ω: '7\d{10}'
  –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞: '[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+'
  –°—É–º–º–∞ –∑–∞–π–º–∞: '–°—É–º–º–∞ –∑–∞–π–º–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç (\d[\d\s]*) —Ä—É–±–ª–µ–π'
  –°—Ä–æ–∫ –∑–∞–π–º–∞: '–ó–∞–µ–º –≤—ã–¥–∞–µ—Ç—Å—è –Ω–∞ (\d+) –¥–Ω–µ–π'
  –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞: '–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞.*?(\d{1,2}[.,]\d{1,2})\s*%'
–í—Å–µ –º–∞—Å–∫–∏ –∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π ‚Äî –Ω–µ –∑–∞—à–∏–≤–∞—é—Ç—Å—è –≤ –∫–æ–¥, –∞ –±–µ—Ä—É—Ç—Å—è –∏–∑ yaml!
 
üõ† –ú–µ—Ç–æ–¥—ã –∏–∑–≤–ª–µ—á–µ–Ω–∏—è:
‚Ä¢	pytesseract ‚Äî –¥–ª—è JPG, PNG, PDF-—Å–∫–∞–Ω–æ–≤
‚Ä¢	pdfplumber ‚Äî –¥–ª—è PDF —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–ª–æ–µ–º
‚Ä¢	re.search() ‚Äî —Ä–µ–≥—É–ª—è—Ä–∫–∏ –∏–∑ enrichment_fields.yaml
‚Ä¢	–°–ø–∏—Å–æ–∫ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤ ‚Äî –∑–∞–¥–∞—ë—Ç—Å—è –≤ config/enrichment_files.yaml (–Ω–∞–ø—Ä–∏–º–µ—Ä: ["–ø–∞—Å–ø–æ—Ä—Ç.pdf", "–∞–Ω–∫–µ—Ç–∞.pdf", "–¥–æ–≥–æ–≤–æ—Ä.pdf", ...])
 
üìã –ü—Ä–∏–º–µ—Ä –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è:
–ü–∞–ø–∫–∞: .../32404294000/
–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é—Ç—Å—è: –ø–∞—Å–ø–æ—Ä—Ç.pdf, –∞–Ω–∫–µ—Ç–∞.pdf, –¥–æ–≥–æ–≤–æ—Ä.pdf
–ò–∑–≤–ª–µ—á–µ–Ω–æ:
‚Ä¢	–§–ò–û: –§–æ–º–∏—á–µ–≤–∞ –ï–ª–µ–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞
‚Ä¢	–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: 01.11.1973
‚Ä¢	–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞: 46 19
‚Ä¢	–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞: 35928
‚Ä¢	–ö–µ–º –≤—ã–¥–∞–Ω: –ì–£ –ú–í–î –†–û–°–°–ò–ò –ü–û –ú–û–°–ö–û–í–°–ö–û–ô –û–ë–õ–ê–°–¢–ò
‚Ä¢	–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è: 500-079
‚Ä¢	Email: spacesleep28@gmail.com
‚Ä¢	–¢–µ–ª–µ—Ñ–æ–Ω: 79682888881
‚Ä¢	–°—É–º–º–∞ –∑–∞–π–º–∞: 1000000
‚Ä¢	–°—Ä–æ–∫ –∑–∞–π–º–∞: 185
‚Ä¢	–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞: 1.6
 
‚úÖ –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è –≥–∏–±–∫–∏—Ö YAML):
import os
import re
import pandas as pd
import pdfplumber
import pytesseract
from PIL import Image
import logging
import yaml

logging.basicConfig(filename='logs/data_enrichment.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å –ø–æ–ª—è–º–∏ –∏ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º–∏
with open('config/enrichment_fields.yaml', 'r', encoding='utf-8') as f:
    ENRICHMENT_FIELDS = yaml.safe_load(f)['enrichment_fields']

def extract_text_from_file(filepath):
    ext = filepath.lower().split('.')[-1]
    try:
        if ext == 'pdf':
            with pdfplumber.open(filepath) as pdf:
                return '\n'.join([page.extract_text() or "" for page in pdf.pages])
        elif ext in ('jpg', 'jpeg', 'png'):
            return pytesseract.image_to_string(Image.open(filepath), lang='rus+eng')
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {filepath}: {e}")
    return ""

def extract_field(text, pattern):
    match = re.search(pattern, text)
    return match.group(1).strip() if match else ""

def enrich_excel_from_files(folder_path, excel_filename=""):
    contract_number = os.path.basename(folder_path)
    excel_path = os.path.join(folder_path, excel_filename or f"{contract_number}.xlsx")
    if not os.path.exists(excel_path):
        logging.error(f"{contract_number}: Excel-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.")
        return False

    df = pd.read_excel(excel_path)
    changes = []

    # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–≤—Å–µ PDF/JPG/PNG)
    files = [f for f in os.listdir(folder_path) if f.lower().endswith(('.pdf', '.jpg', '.jpeg', '.png'))]

    for i, row in df.iterrows():
        for field, pattern in ENRICHMENT_FIELDS.items():
            value = str(row.get(field, "")).strip()
            if value:
                continue  # –£–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ
            found = False
            for filename in files:
                text = extract_text_from_file(os.path.join(folder_path, filename))
                if not text:
                    continue
                extracted = extract_field(text, pattern)
                if extracted:
                    df.at[i, field] = extracted
                    logging.info(f"{contract_number}: [{field}] –Ω–∞–π–¥–µ–Ω–æ: {extracted} –∏–∑ {filename}")
                    changes.append((i + 2, field, extracted, filename))
                    found = True
                    break
            if not found:
                logging.warning(f"{contract_number}: [{field}] –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ {i+2}")

    df.to_excel(excel_path, index=False)
    logging.info(f"{contract_number}: enrichment –∑–∞–≤–µ—Ä—à—ë–Ω. –ò–∑–º–µ–Ω–µ–Ω–∏—è: {changes}")
    return True
 




6.3 validator.py: –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ—Ç—ã –∏ –∫–∞—á–µ—Å—Ç–≤–∞
 
‚öôÔ∏è –ê–ª–≥–æ—Ä–∏—Ç–º –∏ —ç—Ç–∞–ø—ã
–≠—Ç–∞–ø	–î–µ–π—Å—Ç–≤–∏–µ
1Ô∏è‚É£	–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ö–µ–º—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ —Ñ–æ—Ä–º–∞—Ç–Ω—ã—Ö –ø–æ–ª–µ–π (–∏–∑ excel_fields.yaml –∏–ª–∏ fields_valb.yaml –∏ –¥—Ä.)
2Ô∏è‚É£	–û—Ç–∫—Ä—ã—Ç–∏–µ Excel-—Ñ–∞–π–ª–∞ –ø–æ –ø–∞–ø–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞
3Ô∏è‚É£	–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö —Ç—Ä–µ–±—É–µ–º—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤ –∏ –∏—Ö –ø–æ—Ä—è–¥–∫–∞
4Ô∏è‚É£	–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ (—Å–≤—è–∑–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞)
5Ô∏è‚É£	–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ (–Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–æ–≤, –ò–ù–ù –∏ –¥—Ä.)
6Ô∏è‚É£	–í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è < —Å–µ–≥–æ–¥–Ω—è)
7Ô∏è‚É£	–ó–∞–ø–∏—Å—å –≤—Å–µ—Ö –æ—à–∏–±–æ–∫/–ø—Ä–æ–ø—É—Å–∫–æ–≤ –≤ validation_log.json + Telegram
8Ô∏è‚É£	–ü–µ—Ä–µ–¥–∞—á–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (–û–ö/–æ—à–∏–±–∫–∏) —Å–ª–µ–¥—É—é—â–µ–º—É –º–æ–¥—É–ª—é
 
üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–ø—Ä–∏–º–µ—Ä excel_fields_valb.yaml)
required_fields:
  - ‚Ññ–ø
  - –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û
  - –ò–ù–ù
  - –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞
  - –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞
  - –ê–¥—Ä–µ—Å
  - ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞
  - –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞
  - –°—É–º–º–∞ –∑–∞–π–º–∞
  - –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º
  - –°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞
  - –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞
  - –ö–µ–º –≤—ã–¥–∞–Ω
  - –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  - –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
  - –°—Ä–æ–∫ –∑–∞–π–º–∞
  - –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞

field_validations:
  –ò–ù–ù: "^\d{10,12}$"
  ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞: "^\d{8,13}$"
  –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞: "^\+?\d{10,12}$"
  –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: "^\d{2}\.\d{2}\.\d{4}$"
  –°—É–º–º–∞ –∑–∞–π–º–∞: "^\d+([.,]\d{2})?$"
  # ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
 
üßë‚Äçüíª –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ validator.py
import os
import pandas as pd
import logging
import re
import yaml
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(filename='logs/validator.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

def load_field_schema(creditor_id):
    schema_path = f'config/excel_fields_{creditor_id.lower()}.yaml'
    if not os.path.exists(schema_path):
        schema_path = 'config/excel_fields.yaml'
    with open(schema_path, 'r', encoding='utf-8') as f:
        schema = yaml.safe_load(f)
    return schema['required_fields'], schema.get('field_validations', {})

def validate_excel(folder_path, creditor_id, excel_filename=""):
    contract_number = os.path.basename(folder_path)
    excel_path = os.path.join(folder_path, excel_filename or f"{contract_number}.xlsx")
    validation_log_path = os.path.join('logs', 'validation_log.json')
    if not os.path.exists(excel_path):
        logging.error(f"{contract_number}: Excel-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏.")
        return False

    required_fields, field_validations = load_field_schema(creditor_id)
    df = pd.read_excel(excel_path)
    errors = []

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    actual_fields = list(df.columns)
    missing_fields = [f for f in required_fields if f not in actual_fields]
    if missing_fields:
        errors.append(f"{contract_number}: –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤: {missing_fields}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ —Å—Ç—Ä–æ–∫–∞–º
    unique_numbers = set()
    for i, row in df.iterrows():
        row_errors = []
        for field in required_fields:
            value = str(row.get(field, "")).strip()
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
            if value == "":
                row_errors.append(f"[{field}] ‚Äî –ø—É—Å—Ç–æ–µ")
                continue
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞/–º–∞—Å–∫–∏
            if field in field_validations:
                pattern = field_validations[field]
                if not re.match(pattern, value):
                    row_errors.append(f"[{field}] ‚Äî –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {value}")
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞
        contract_no = str(row.get("‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞", "")).strip()
        if contract_no in unique_numbers:
            row_errors.append(f"–î—É–±–ª–∏–∫–∞—Ç ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞: {contract_no}")
        else:
            unique_numbers.add(contract_no)
        if row_errors:
            error_text = f"{contract_number}, —Å—Ç—Ä–æ–∫–∞ {i+2}: " + "; ".join(row_errors)
            errors.append(error_text)
            logging.warning(error_text)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç (–ø—Ä–∏–º–µ—Ä)
    today = datetime.today()
    for i, row in df.iterrows():
        dob = str(row.get("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "")).strip()
        if dob:
            try:
                dob_date = datetime.strptime(dob, "%d.%m.%Y")
                if dob_date >= today:
                    errors.append(f"{contract_number}, —Å—Ç—Ä–æ–∫–∞ {i+2}: [–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è] –≤ –±—É–¥—É—â–µ–º: {dob}")
            except Exception:
                errors.append(f"{contract_number}, —Å—Ç—Ä–æ–∫–∞ {i+2}: [–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è] –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {dob}")

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ JSON
    if errors:
        with open(validation_log_path, 'a', encoding='utf-8') as f:
            for err in errors:
                f.write(err + "\n")
        logging.warning(f"{contract_number}: –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –≤ validation_log.json")
        return False
    else:
        logging.info(f"{contract_number}: –í–∞–ª–∏–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞.")
        return True
 
üß© –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ (–º–∞—Ä—à—Ä—É—Ç–æ–≤)
‚Ä¢	–î–ª—è –∫–∞–∂–¥–æ–≥–æ creditor_id —Å–≤–æ–π excel_fields_{creditor_id}.yaml (–∏–ª–∏ –æ–¥–∏–Ω –æ–±—â–∏–π, –µ—Å–ª–∏ —Å—Ö–µ–º—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç).
‚Ä¢	–ú–æ–∂–Ω–æ –ª–µ–≥–∫–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å –ø–æ–¥ –Ω–æ–≤—ã–µ –ø–æ–ª—è, –º–∞—Å–∫–∏ –∏ –ø—Ä–∞–≤–∏–ª–∞.
 
üìà –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã
‚Ä¢	–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π Excel-—Ñ–∞–π–ª –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ–≥–æ–≤–æ—Ä–∞.
‚Ä¢	–í—Å–µ –æ—à–∏–±–∫–∏ –∏ –ø—Ä–æ–ø—É—Å–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è (–∏, –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É/–≤ Telegram).
‚Ä¢	–ü–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤—ã–π –∫ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ JSON –¥–ª—è 1–°.
‚Ä¢	–ù–µ—Ç —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –¥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞.
 








üóÇÔ∏è 7. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤—ã–≥—Ä—É–∑–∫–∏
 
7.1 folder_structurer.py: —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –ø–∞–ø–∫–∞–º
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ú–æ–¥—É–ª—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫ —Å –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏ –ø–æ –Ω—É–∂–Ω—ã–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º, –∑–∞–≤–∏—Å—è—â–∏–º –æ—Ç –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–≥–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ 1–°.
 
‚öôÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
–≠—Ç–∞–ø	–î–µ–π—Å—Ç–≤–∏–µ
1Ô∏è‚É£	–ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ paths.json, –≥–¥–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –ø—É—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ creditor_id.
2Ô∏è‚É£	–ü–æ –∫–∞–∂–¥–æ–º—É –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–º—É –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –∫—Ä–µ–¥–∏—Ç–æ—Ä—É.
3Ô∏è‚É£	–ü–∞–ø–∫–∞ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –≤ ‚Äú–æ–±—â–∏–π –ø—É–ª‚Äù –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: .../5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/!–û–ë–©–ò–ô –ü–£–õ –í–ë/).
4Ô∏è‚É£	–ï—Å–ª–∏ –ø–∞–ø–∫–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –æ—à–∏–±–∫–∞ –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å—É—Ñ—Ñ–∏–∫—Å _dup.
5Ô∏è‚É£	–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ routing_log.json.
6Ô∏è‚É£	–ü–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ ‚Äî –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ).
 
üóÇÔ∏è –ü—Ä–∏–º–µ—Ä paths.json (–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä)
{
  "VALB": "—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/!–û–ë–©–ò–ô –ü–£–õ –í–ë/",
  "OZON": "—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/OZON/–†–µ–µ—Å—Ç—Ä—ã/!–û–ë–©–ò–ô –ü–£–õ OZON/"
}
 
üßæ –ü—Ä–∏–º–µ—Ä —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
üìÅ —Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/
‚îú‚îÄ‚îÄ 5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/
‚îÇ   ‚îî‚îÄ‚îÄ –†–µ–µ—Å—Ç—Ä—ã/
‚îÇ       ‚îî‚îÄ‚îÄ !–û–ë–©–ò–ô –ü–£–õ –í–ë/
‚îÇ           ‚îú‚îÄ‚îÄ 32404294000/
‚îÇ           ‚îú‚îÄ‚îÄ 52404234030/
‚îÇ           ‚îî‚îÄ‚îÄ ...
‚îú‚îÄ‚îÄ OZON/
‚îÇ   ‚îî‚îÄ‚îÄ –†–µ–µ—Å—Ç—Ä—ã/
‚îÇ       ‚îî‚îÄ‚îÄ !–û–ë–©–ò–ô –ü–£–õ OZON/
‚îÇ           ‚îú‚îÄ‚îÄ 62304212300/
‚îÇ           ‚îú‚îÄ‚îÄ ...
 

folder_structurer.py ‚Äî —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–∞–ø–æ–∫

# folder_structurer.py

import os
import shutil
import json
import datetime
import logging

# üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(filename='logs/folder_structurer.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

ROUTING_LOG = "logs/routing_log.json"
DUPLICATES_LOG = "logs/duplicates_log.json"
ERROR_LOG = "logs/error_log.json"

# üìå –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–∞ –ø—É—Ç–µ–π
def load_paths_config(config_path='config/paths.json'):
    with open(config_path, 'r', encoding='utf-8') as f:
        return json.load(f)

# üîÅ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
def move_contract_folder(folder_path, creditor_id, paths_config):
    contract_number = os.path.basename(folder_path)
    if creditor_id not in paths_config:
        log_error(contract_number, f"creditor_id '{creditor_id}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ paths.json")
        return False

    dest_root = paths_config[creditor_id]
    os.makedirs(dest_root, exist_ok=True)

    dest_path = os.path.join(dest_root, contract_number)
    if os.path.exists(dest_path):
        # üìé –î—É–±–ª–∏–∫–∞—Ç
        duplicate_path = dest_path + "_dup"
        shutil.move(folder_path, duplicate_path)
        log_duplicate(contract_number, folder_path, duplicate_path, creditor_id)
        logging.warning(f"{contract_number}: –¥—É–±–ª–∏–∫–∞—Ç ‚Äî –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –∫–∞–∫ {duplicate_path}")
    else:
        shutil.move(folder_path, dest_path)
        log_routing(contract_number, folder_path, dest_path, creditor_id)
        logging.info(f"{contract_number}: –ø–µ—Ä–µ–º–µ—â–µ–Ω–æ –≤ {dest_path}")

    return True

# ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π
def log_routing(contract_number, src, dst, creditor_id):
    entry = {
        "datetime": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "creditor": creditor_id,
        "contract": contract_number,
        "source_path": src,
        "dest_path": dst
    }
    append_log(ROUTING_LOG, entry)

# ‚ùóÔ∏è –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
def log_error(contract_number, error_message):
    entry = {
        "datetime": datetime.datetime.now().isoformat(),
        "contract": contract_number,
        "error": error_message
    }
    append_log(ERROR_LOG, entry)

# ‚ö†Ô∏è –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
def log_duplicate(contract_number, src, dst, creditor_id):
    entry = {
        "datetime": datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "creditor": creditor_id,
        "contract": contract_number,
        "source_path": src,
        "duplicate_path": dst
    }
    append_log(DUPLICATES_LOG, entry)

# üì• –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ JSON-–ª–æ–≥
def append_log(log_path, data):
    os.makedirs(os.path.dirname(log_path), exist_ok=True)
    if not os.path.exists(log_path):
        with open(log_path, 'w', encoding='utf-8') as f:
            json.dump([data], f, ensure_ascii=False, indent=2)
    else:
        with open(log_path, 'r+', encoding='utf-8') as f:
            logs = json.load(f)
            logs.append(data)
            f.seek(0)
            json.dump(logs, f, ensure_ascii=False, indent=2)

# üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
def cleanup_temp_folders(temp_dirs=["./data/out/", "./temp/"]):
    for d in temp_dirs:
        if os.path.exists(d):
            for name in os.listdir(d):
                path = os.path.join(d, name)
                try:
                    if os.path.isdir(path):
                        shutil.rmtree(path)
                    else:
                        os.remove(path)
                    logging.info(f"–£–¥–∞–ª–µ–Ω–æ: {path}")
                except Exception as e:
                    log_error(name, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {path}: {str(e)}")

# üü¢ –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
def route_all_contracts(out_dir, paths_config_path='config/paths.json'):
    paths_config = load_paths_config(paths_config_path)
    for name in os.listdir(out_dir):
        folder_path = os.path.join(out_dir, name)
        if not os.path.isdir(folder_path):
            continue
        # –ß—Ç–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö –∏–∑ meta.json (–∏–ª–∏ creditor_id.txt)
        meta_path = os.path.join(folder_path, "meta.json")
        if not os.path.exists(meta_path):
            log_error(name, "meta.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
            continue
        with open(meta_path, 'r', encoding='utf-8') as f:
            meta = json.load(f)
            creditor_id = meta[0].get("creditor_id", "UNKNOWN")
        move_contract_folder(folder_path, creditor_id, paths_config)

# ‚ñ∂ –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    out_folder = r"C:\ip_processor\data\out"  # –∏–ª–∏ —Å–µ—Ç—å/asf01/... –µ—Å–ª–∏ —É–∂–µ –≤ –±–æ–µ–≤–æ–º —Ä–µ–∂–∏–º–µ
    route_all_contracts(out_folder)
    cleanup_temp_folders()


üîÑ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π:
‚Ä¢	–ø–∞–ø–∫–∏ –∏–∑ data/out/, temp/, –∏ –ø—Ä–æ—á–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ –æ—á–∏—â–∞—é—Ç—Å—è;
‚Ä¢	–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ Excel –∏ JSON –º–æ–∂–Ω–æ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å;
‚Ä¢	–≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ –ª–æ–≥–µ.
 
7.2 –ö–æ–Ω—Ç—Ä–æ–ª—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏ –∏—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ü–µ—Ä–µ–¥ —Ñ–∏–Ω–∞–ª—å–Ω—ã–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã:
‚Ä¢	–Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ü–µ–ª–µ–≤–æ–º –∫–∞—Ç–∞–ª–æ–≥–µ;
‚Ä¢	–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–µ –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ—Ä—Ç–∏—Ç—å —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
 
‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
–£—Å–ª–æ–≤–∏–µ	–î–µ–π—Å—Ç–≤–∏–µ
–ü–∞–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º –¥–æ–≥–æ–≤–æ—Ä–∞ —É–∂–µ –µ—Å—Ç—å	–î–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å—É—Ñ—Ñ–∏–∫—Å _dup, –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏	–ü–∞–ø–∫–∞ –Ω–µ –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è, —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ duplicates_log.json
–ù–µ—É–¥–∞—á–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ	–§–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ error_log.json, Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 
üìã –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π (routing_log.json)
{
  "datetime": "2025-06-23 12:05:11",
  "creditor": "VALB",
  "contract": "32404294000",
  "source_path": "C:/ip_processor/data/out/32404294000/",
  "dest_path": "—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/!–û–ë–©–ò–ô –ü–£–õ –í–ë/32404294000/"
}
 
‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è
‚Ä¢	–í –∫–∞—Ç–∞–ª–æ–≥–µ !–û–ë–©–ò–ô –ü–£–õ ‚Ä¶/ –ª–µ–∂–∞—Ç –≥–æ—Ç–æ–≤—ã–µ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –≤ 1–° –ø–∞–ø–∫–∏ —Å –Ω–æ–º–µ—Ä–∞–º–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤.
‚Ä¢	–ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞—Å—à–∏—Ä—è–µ–º–æ–π –ª–æ–≥–∏–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏: –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ creditor_id –≤ paths.json.
‚Ä¢	–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –ª—é–±—ã–µ —Å–±–æ–∏ –∏ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É.
 




–¢—ã –∞–±—Å–æ–ª—é—Ç–Ω–æ –ø—Ä–∞–≤ ‚Äî —è –¥–æ–ª–∂–µ–Ω –±—ã–ª –ø—Ä–∏–≤–µ—Å—Ç–∏ –ø—Ä–∏–º–µ—Ä JSON-–≤—ã–≥—Ä—É–∑–∫–∏ —Å –ü–û–õ–ù–´–ú –Ω–∞–±–æ—Ä–æ–º –≤—Å–µ—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π, –∞ –Ω–µ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ ‚Äú–Ω–æ–º–µ—Ä/—Ñ–∏–æ/–∏–Ω–Ω‚Äù. –ü—Ä–∏–≤–æ–∂—É –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É, –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –∞ —Ç–∞–∫–∂–µ –∞–ª–≥–æ—Ä–∏—Ç–º –∏ –ø–æ—è—Å–Ω–µ–Ω–∏–µ –ø–æ —à–∞–≥–∞–º, —á—Ç–æ–±—ã —Ç–≤–æ–π exporter.py —Å—Ç—Ä–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –≤ 1–°.
 
7.3 exporter.py: –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–≥–æ JSON-—Ñ–∞–π–ª–∞ –¥–ª—è 1–°
 
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ú–æ–¥—É–ª—å —Å–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ Excel-—Ñ–∞–π–ª–∞, –≤—ã–≥—Ä—É–∂–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ –µ–¥–∏–Ω—ã–π JSON-—Ñ–∞–π–ª —Å—Ç—Ä–æ–≥–æ –ø–æ —Ñ–æ—Ä–º–∞—Ç—É, —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–º—É —Å 1–° –∏ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–º.
 
üìÇ –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã (–ø–æ —à–∞–≥–∞–º)
1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–∞–ª–æ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã (YAML-–∫–æ–Ω—Ñ–∏–≥):
export_fields:
  - ‚Ññ–ø
  - –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û
  - –ò–ù–ù
  - –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞
  - –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞
  - –ê–¥—Ä–µ—Å
  - ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞
  - –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞
  - –°—É–º–º–∞ –∑–∞–π–º–∞
  - –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º
  - –ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º
  - –°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏
  - –°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞
  - –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞
  - –ö–µ–º –≤—ã–¥–∞–Ω
  - –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  - –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
  - –°—Ä–æ–∫ –∑–∞–π–º–∞
  - –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞
2Ô∏è‚É£ –ß—Ç–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ Excel (—É–∂–µ –ø—Ä–æ—à—ë–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ enrichment).
3Ô∏è‚É£ –î–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏:
‚Ä¢	–§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä—å —Ç–æ–ª—å–∫–æ –ø–æ –ø–æ–ª—è–º –∏–∑ export_fields.
‚Ä¢	–ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ö–†–ò–¢–ò–ß–ù–û–ï –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –§–ò–û, –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞, —Å—É–º–º–∞, –ò–ù–ù, –ø–∞—Å–ø–æ—Ä—Ç) ‚Äî –¥–æ–≥–æ–≤–æ—Ä –≤ JSON –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è (–∏–ª–∏ —ç—Ç–æ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –æ—à–∏–±–∫–∞/–ø—Ä–æ–ø—É—Å–∫).
4Ô∏è‚É£ –§–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:
{
  "–¥–æ–≥–æ–≤–æ—Ä—ã": [
    { ... },  // –¥–æ–≥–æ–≤–æ—Ä 1
    { ... },  // –¥–æ–≥–æ–≤–æ—Ä 2
    // –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ
  ]
}
–ö–∞–∂–¥–æ–µ –ø–æ–ª–µ ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–ª—é—á —Å —Ç–µ–º –∂–µ –Ω–∞–∑–≤–∞–Ω–∏–µ–º, —á—Ç–æ –∏ –≤ Excel!
5Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ:
–§–∞–π–ª –∫–ª–∞–¥—ë—Ç—Å—è –≤ /exports/reestr_export_{date}_{creditor_id}.json.
–õ–æ–≥–∏—Ä—É–µ—Ç—Å—è: –∏–º—è —Ñ–∞–π–ª–∞, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤.
 
üìã –ü–†–ò–ú–ï–† –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ JSON
{
  "–¥–æ–≥–æ–≤–æ—Ä—ã": [
    {
      "‚Ññ–ø": "1",
      "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û": "–§–æ–º–∏—á–µ–≤–∞ –ï–ª–µ–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞",
      "–ò–ù–ù": "502415410219",
      "–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞": "79682888881",
      "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞": "spacesleep28@gmail.com",
      "–ê–¥—Ä–µ—Å": "–ú–û, –≥. –ë–∞–ª–∞—à–∏—Ö–∞, ...",
      "‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞": "32404294000",
      "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞": "03.11.2023",
      "–°—É–º–º–∞ –∑–∞–π–º–∞": "1000000",
      "–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏": "1200000",
      "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É": "1000000",
      "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º": "100000",
      "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º": "100000",
      "–°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏": "180",
      "–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞": "46 19",
      "–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞": "35928",
      "–ö–µ–º –≤—ã–¥–∞–Ω": "–ì–£ –ú–í–î –†–û–°–°–ò–ò –ü–û –ú–û–°–ö–û–í–°–ö–û–ô –û–ë–õ–ê–°–¢–ò",
      "–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è": "500-079",
      "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è": "01.11.1973",
      "–°—Ä–æ–∫ –∑–∞–π–º–∞": "185",
      "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞": "1.6"
    }
    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã, –∫–∞–∂–¥—ã–π –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ
  ]
}
–ù–∏–∫–∞–∫–∏—Ö –¥—Ä—É–≥–∏—Ö –∫–ª—é—á–µ–π! –í—Å–µ –ø–æ–ª—è –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–µ, –≤ —Ç–æ–º –∂–µ –ø–æ—Ä—è–¥–∫–µ, –∫–∞–∫ –≤ —Ç–≤–æ—ë–º —à–∞–±–ª–æ–Ω–µ.
 
üìù –ö—Ä–∞—Ç–∫–∏–π –ü–†–ê–í–ò–õ–¨–ù–´–ô –∫–æ–¥ (Python, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å):
import os
import pandas as pd
import json
import yaml
import logging
from datetime import datetime

logging.basicConfig(filename='logs/exporter.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

def load_export_fields():
    with open('config/export_fields.yaml', 'r', encoding='utf-8') as f:
        return yaml.safe_load(f)['export_fields']

def export_to_json(excel_path, creditor_id, out_dir='exports'):
    export_fields = load_export_fields()
    df = pd.read_excel(excel_path)
    contracts = []
    skipped = 0

    for idx, row in df.iterrows():
        # –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –í–°–ï –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è –Ω–µ –ø—É—Å—Ç—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –Ω–∞–±–æ—Ä)
        if any(str(row.get(f, "")).strip() == "" for f in ["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û", "–ò–ù–ù", "‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞", "–°—É–º–º–∞ –∑–∞–π–º–∞"]):
            skipped += 1
            continue
        contract = {f: str(row.get(f, "")).strip() for f in export_fields}
        contracts.append(contract)

    date_str = datetime.now().strftime('%Y-%m-%d')
    os.makedirs(out_dir, exist_ok=True)
    json_path = os.path.join(out_dir, f"reestr_export_{date_str}_{creditor_id}.json")
    with open(json_path, 'w', encoding='utf-8') as f:
        json.dump({"–¥–æ–≥–æ–≤–æ—Ä—ã": contracts}, f, ensure_ascii=False, indent=2)

    logging.info(f"–§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω: {json_path}, –¥–æ–≥–æ–≤–æ—Ä–æ–≤: {len(contracts)}, –ø—Ä–æ–ø—É—â–µ–Ω–æ: {skipped}")
    return json_path
 




7.4 aggregator.py: –ê–≥—Ä–µ–≥–∞—Ü–∏—è JSON-—Ñ–∞–π–ª–æ–≤ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –≤ 1–°
 
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ú–æ–¥—É–ª—å aggregator.py –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã (—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å –ø–æ–º–æ—â—å—é exporter.py) –≤ –æ–¥–∏–Ω –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏—Ç–æ–≥–æ–≤—ã–π —Ñ–∞–π–ª –ø–æ –∫–∞–∂–¥–æ–º—É –∫—Ä–µ–¥–∏—Ç–æ—Ä—É –∏/–∏–ª–∏ –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥.
–≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç:
‚Ä¢	–ú–∞—Å—Å–æ–≤–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –ø—É–ª –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –≤ 1–° –∑–∞ –¥–µ–Ω—å/–Ω–µ–¥–µ–ª—é/–ø–µ—Ä–∏–æ–¥.
‚Ä¢	–ò—Å–∫–ª—é—á–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã, —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–±–æ—Ä–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏.
‚Ä¢	–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω–æ—Ç—É –∏ –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ—Å—Ç—å –≤—ã–≥—Ä—É–∑–∫–∏ –¥–ª—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∏–∏, –∞–Ω–∞–ª–∏—Ç–∏–∫–∏, —Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤.
 
‚öôÔ∏è –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã (–ø–æ —à–∞–≥–∞–º)
1Ô∏è‚É£ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞ /exports/
‚Äî –ü–æ–∏—Å–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ –º–∞—Å–∫–µ:
reestr_export_{date}_{creditor_id}.json
(–ú–æ–∂–Ω–æ –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –¥–∞—Ç–∞–º/–∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º –∏–ª–∏ ‚Äú–∑–∞ –≤—Å—ë –≤—Ä–µ–º—è‚Äù).
2Ô∏è‚É£ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
‚Äî –í –∫–∞–∂–¥–æ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ —á–∏—Ç–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–ª—é—á–∞ "–¥–æ–≥–æ–≤–æ—Ä—ã" (–∫–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å ‚Äî —ç—Ç–æ –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –≤—Å–µ—Ö –ø–æ–ª–µ–π, –∫–∞–∫ –≤ –∏—Ç–æ–≥–æ–≤–æ–º Excel).
3Ô∏è‚É£ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
‚Äî –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ ("‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞") —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª—Å—è ‚Äî —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è, –æ—Å—Ç–∞–ª—å–Ω—ã–µ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ª–æ–≥–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, agg_duplicates_log.json).
‚Äî –í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è: —Å–∫–æ–ª—å–∫–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ, —Å–∫–æ–ª—å–∫–æ –ø—Ä–æ–ø—É—â–µ–Ω–æ, –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –±—ã–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏.
4Ô∏è‚É£ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
‚Äî –î–ª—è –≤—Å–µ—Ö –≤–∫–ª—é—á—ë–Ω–Ω—ã—Ö –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—è–º —à–∞–±–ª–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ —Ç–æ—Ç –∂–µ export_fields.yaml), —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ ‚Äú–ø–æ–ª–æ–º–∞–Ω–Ω—ã—Ö‚Äù –∑–∞–ø–∏—Å–µ–π.
‚Äî –ü—Ä–æ–ø—É—Å–∫–∏ –∏ –æ—à–∏–±–∫–∏ –∑–∞–Ω–æ—Å—è—Ç—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –ª–æ–≥ (agg_errors_log.json), –≤—ã–≥—Ä—É–∑–∫–∞ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è.
5Ô∏è‚É£ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
‚Äî –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –µ–¥–∏–Ω—ã–π JSON –≤–∏–¥–∞:
{
  "–¥–æ–≥–æ–≤–æ—Ä—ã": [
    { ... }, // –¥–æ–≥–æ–≤–æ—Ä 1 (–≤—Å–µ —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–ª—è!)
    { ... }, // –¥–æ–≥–æ–≤–æ—Ä 2
    // ...
  ]
}
‚Äî –ò–º—è —Ñ–∞–π–ª–∞:
reestr_export_{date}_AGG_{creditor_id}.json
(–∏–ª–∏, –µ—Å–ª–∏ –≤ –∞–≥—Ä–µ–≥–∞—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤: reestr_export_{date}_AGG_ALL.json)
6Ô∏è‚É£ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Äî –í –ª–æ–≥–∞—Ö: –∏–º—è —Ñ–∞–π–ª–∞, —Å–∫–æ–ª—å–∫–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ —Å–æ–±—Ä–∞–Ω–æ, –∫–∞–∫–∏–µ –Ω–æ–º–µ—Ä–∞ –±—ã–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç–∞–º–∏ –∏–ª–∏ —Å –æ—à–∏–±–∫–∞–º–∏, –¥–∞—Ç–∞/–≤—Ä–µ–º—è –∞–≥—Ä–µ–≥–∞—Ü–∏–∏.
7Ô∏è‚É£ (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
‚Äî –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (Telegram, email, log-—Ñ–∞–π–ª) —Å –∫—Ä–∞—Ç–∫–∏–º –∏—Ç–æ–≥–æ–º.
 
üìë –ü—Ä–∏–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞:
{
  "–¥–æ–≥–æ–≤–æ—Ä—ã": [
    {
      "‚Ññ–ø": "1",
      "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û": "–§–æ–º–∏—á–µ–≤–∞ –ï–ª–µ–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞",
      "–ò–ù–ù": "502415410219",
      "–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞": "79682888881",
      "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞": "spacesleep28@gmail.com",
      "–ê–¥—Ä–µ—Å": "–ú–û, –≥. –ë–∞–ª–∞—à–∏—Ö–∞, ...",
      "‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞": "32404294000",
      "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞": "03.11.2023",
      "–°—É–º–º–∞ –∑–∞–π–º–∞": "1000000",
      "–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏": "1200000",
      "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É": "1000000",
      "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º": "100000",
      "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º": "100000",
      "–°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏": "180",
      "–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞": "46 19",
      "–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞": "35928",
      "–ö–µ–º –≤—ã–¥–∞–Ω": "–ì–£ –ú–í–î –†–û–°–°–ò–ò –ü–û –ú–û–°–ö–û–í–°–ö–û–ô –û–ë–õ–ê–°–¢–ò",
      "–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è": "500-079",
      "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è": "01.11.1973",
      "–°—Ä–æ–∫ –∑–∞–π–º–∞": "185",
      "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞": "1.6"
    }
    // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã
  ]
}
 
üìù –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞ aggregator.py (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ —Ç–≤–æ–π —à–∞–±–ª–æ–Ω):
import os
import json
from glob import glob
import yaml
from datetime import datetime
import logging

EXPORT_DIR = 'exports'
DUP_LOG = 'logs/agg_duplicates_log.json'
ERR_LOG = 'logs/agg_errors_log.json'

# –ó–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–∞–ª–æ–Ω–∞ –ø–æ–ª–µ–π
def load_export_fields():
    with open('config/export_fields.yaml', 'r', encoding='utf-8') as f:
        return yaml.safe_load(f)['export_fields']

def aggregate_json_exports(creditor_id, date_pattern=None):
    export_fields = load_export_fields()
    contracts = []
    contract_numbers = set()
    dups, errors = [], []
    date_str = date_pattern or datetime.now().strftime("%Y-%m-%d")
    pattern = os.path.join(EXPORT_DIR, f"reestr_export_{date_str}_{creditor_id}*.json")
    for path in glob(pattern):
        with open(path, "r", encoding="utf-8") as f:
            d = json.load(f)
            for rec in d.get("–¥–æ–≥–æ–≤–æ—Ä—ã", []):
                contract_no = rec.get("‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞")
                if not contract_no or contract_no in contract_numbers:
                    dups.append({"–Ω–æ–º–µ—Ä": contract_no, "—Ñ–∞–π–ª": path})
                    continue
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è –µ—Å—Ç—å (—Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —ç—Ç–∞–ª–æ–Ω–æ–º)
                missing = [field for field in export_fields if field not in rec]
                if missing:
                    errors.append({"–Ω–æ–º–µ—Ä": contract_no, "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è": missing, "—Ñ–∞–π–ª": path})
                    continue
                contracts.append({f: rec.get(f, "") for f in export_fields})
                contract_numbers.add(contract_no)
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    agg_path = os.path.join(EXPORT_DIR, f"reestr_export_{date_str}_AGG_{creditor_id}.json")
    with open(agg_path, "w", encoding="utf-8") as f:
        json.dump({"–¥–æ–≥–æ–≤–æ—Ä—ã": contracts}, f, ensure_ascii=False, indent=2)
    # –õ–æ–≥–∏
    os.makedirs('logs', exist_ok=True)
    with open(DUP_LOG, "a", encoding="utf-8") as f:
        json.dump(dups, f, ensure_ascii=False, indent=2)
    with open(ERR_LOG, "a", encoding="utf-8") as f:
        json.dump(errors, f, ensure_ascii=False, indent=2)
    logging.info(f"–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω {len(contracts)} –¥–æ–≥–æ–≤–æ—Ä–æ–≤. –î—É–±–ª–∏–∫–∞—Ç–æ–≤: {len(dups)}, –æ—à–∏–±–æ–∫: {len(errors)}. –§–∞–π–ª: {agg_path}")
    return agg_path
 
–ö—Ä–∞—Ç–∫–æ:
‚Ä¢	–†–µ–∞–ª—å–Ω—ã–π –∏—Ç–æ–≥ ‚Äî –æ–¥–∏–Ω –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON —Å–æ –≤—Å–µ–º–∏ –¥–æ–≥–æ–≤–æ—Ä–∞–º–∏, –±–µ–∑ –¥—É–±–ª–µ–π –∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.
‚Ä¢	–í—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è: –Ω–µ –ø–æ—Ç–µ—Ä—è–µ—Ç—Å—è –Ω–∏ –æ–¥–∏–Ω –¥–æ–≥–æ–≤–æ—Ä, –Ω–∏ –æ–¥–Ω–∞ –æ—à–∏–±–∫–∞.
‚Ä¢	–§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ –∑–∞–≥—Ä—É–∑–∫–µ –≤ 1–° –∏ –ª—é–±–æ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—é.
 




















8.üì§  –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è 1–° (—á–µ—Ä–µ–∑ FTP) 

/mnt/ssd4tb/ftp_server/ip_loans/

üßæ 8.1. –§–æ—Ä–º–∞—Ç –∏—Ç–æ–≥–æ–≤–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è 1–°
 
üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–û–±–µ—Å–ø–µ—á–∏—Ç—å —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–≥–æ, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞-–≤—ã–≥—Ä—É–∑–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞–º –∑–∞–π–º–∞ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ 1–° —á–µ—Ä–µ–∑ SFTP. –§–æ—Ä–º–∞—Ç –ø–∞–∫–µ—Ç–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω —Å –æ—Ç–¥–µ–ª–æ–º 1–°, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é, –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
 
üìå –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã
1.	–§–æ—Ä–º–∞—Ç –ø–µ—Ä–µ–¥–∞—á–∏:
o	–¢–æ–ª—å–∫–æ JSON, –∫–æ–¥–∏—Ä–æ–≤–∫–∞ UTF-8.
o	–û–¥–∏–Ω —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞—Å—Å–∏–≤ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ (list[dict]).
o	–ò–º—è —Ñ–∞–π–ª–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø–æ —à–∞–±–ª–æ–Ω—É:
o	–≤—ã–≥—Ä—É–∑–∫–∞_{YYYYMMDD}_{creditor_id}.json
–ù–∞–ø—Ä–∏–º–µ—Ä: –≤—ã–≥—Ä—É–∑–∫–∞_20250730_VALB.json
2.	–°—Ç—Ä—É–∫—Ç—É—Ä–∞:
o	–ö–æ—Ä–Ω–µ–≤–æ–π –æ–±—ä–µ–∫—Ç ‚Äî –º–∞—Å—Å–∏–≤ (list) –¥–æ–≥–æ–≤–æ—Ä–æ–≤, –∫–∞–∂–¥—ã–π –¥–æ–≥–æ–≤–æ—Ä ‚Äî –æ—Ç–¥–µ–ª—å–Ω—ã–π dict.
o	–í—Å–µ –ø–æ–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —É—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω–æ–π —Å—Ö–µ–º–µ 1–° (—Å–º. –Ω–∏–∂–µ).
3.	–ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π:
o	–¢–æ–ª—å–∫–æ —Ç–æ—á–Ω—ã–µ –∫–ª—é—á–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ —Å 1–°:
o	"‚Ññ–ø", "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û", "–ò–ù–ù", "–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞", "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞", "–ê–¥—Ä–µ—Å",
o	"‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞", "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞", "–°—É–º–º–∞ –∑–∞–π–º–∞", "–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏",
o	"–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É", "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º", "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º",
o	"–°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏", "–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞", "–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞", "–ö–µ–º –≤—ã–¥–∞–Ω", "–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
o	"–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "–°—Ä–æ–∫ –∑–∞–π–º–∞", "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞"
4.	–¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö:
–ü–æ–ª–µ	–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö	–ü—Ä–∏–º–µ—Ä / –û–ø–∏—Å–∞–Ω–∏–µ
‚Ññ–ø	string / int	"1"
–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û	string	"–§–æ–º–∏—á–µ–≤–∞ –ï–ª–µ–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞"
–ò–ù–ù	string	"502415410219"
–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞	string	"79682888881"
–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞	string/null	"spacesleep28@gmail.com"

–ê–¥—Ä–µ—Å	string	"–ú–û, –≥. –ë–∞–ª–∞—à–∏—Ö–∞, ..."
‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞	string	"32404294000"
–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞	string (date)	"03.11.2023"
–°—É–º–º–∞ –∑–∞–π–º–∞	string/float	"1000000"
–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏	string/float	"1200000"
–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É ...	string/float	"1000000"
–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º	string/float	"100000"
–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º	string/float	"100000"
–°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏	string/int	"180"
–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞	string/null	"46 19"
–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞	string/null	"35928"
–ö–µ–º –≤—ã–¥–∞–Ω	string/null	"–ì–£ –ú–í–î –†–û–°–°–ò–ò ..."
–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è	string/null	"500-079"
–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è	string (date)	"01.11.1973"
–°—Ä–æ–∫ –∑–∞–π–º–∞	string/int	"185"
–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞	string/float	"1.6"
‚Ä¢	–í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∏–ø–∞ null –¥–æ–ø—É—Å—Ç–∏–º—ã, –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–∞–∂–µ –ø–æ—Å–ª–µ enrichment.
5.	–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è:
o	–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä: "‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞", "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û", "–ò–ù–ù", "–°—É–º–º–∞ –∑–∞–π–º–∞", "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞".
o	–û—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω—è—é—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–Ω–æ, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ.
6.	–ü–æ—Ä—è–¥–æ–∫ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç—å:
o	–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—Ç—å—Å—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞ –ø–æ–ª–µ–π –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏ –∏ —Ç—Ä–∞—Å—Å–∏—Ä—É–µ–º–æ—Å—Ç–∏ –ª–æ–≥–æ–≤.
 
üì¶ –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞ –≤—ã–≥—Ä—É–∑–∫–∏
[
  {
    "‚Ññ–ø": "1",
    "–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–∏–∫–∞/–§–ò–û": "–§–æ–º–∏—á–µ–≤–∞ –ï–ª–µ–Ω–∞ –ë–æ—Ä–∏—Å–æ–≤–Ω–∞",
    "–ò–ù–ù": "502415410219",
    "–¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–ª–∂–Ω–∏–∫–∞": "79682888881",
    "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞ –¥–æ–ª–∂–Ω–∏–∫–∞": "spacesleep28@gmail.com",
    "–ê–¥—Ä–µ—Å": "–ú–û, –≥. –ë–∞–ª–∞—à–∏—Ö–∞, ...",
    "‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞": "32404294000",
    "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏ –∑–∞–π–º–∞": "03.11.2023",
    "–°—É–º–º–∞ –∑–∞–π–º–∞": "1000000",
    "–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏": "1200000",
    "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É": "1000000",
    "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º": "100000",
    "–ó–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç—å –ø–æ –ø–µ–Ω–∏—è–º": "100000",
    "–°—Ä–æ–∫ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω–æ–π –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏": "180",
    "–°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞": "46 19",
    "–ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞": "35928",
    "–ö–µ–º –≤—ã–¥–∞–Ω": "–ì–£ –ú–í–î –†–û–°–°–ò–ò –ü–û –ú–û–°–ö–û–í–°–ö–û–ô –û–ë–õ–ê–°–¢–ò",
    "–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è": "500-079",
    "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è": "01.11.1973",
    "–°—Ä–æ–∫ –∑–∞–π–º–∞": "185",
    "–ü—Ä–æ—Ü–µ–Ω—Ç–Ω–∞—è —Å—Ç–∞–≤–∫–∞": "1.6"
  }
  // ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–≥–æ–≤–æ—Ä—ã
]
 
üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
‚Ä¢	–ü–µ—Ä–µ–¥–∞—á–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ SFTP –Ω–∞ –≤—ã–¥–µ–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä 1–°.
‚Ä¢	–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–∞:
‚Ä¢	/mnt/ssd4tb/ftp_server/ip_loans/
(–∏–ª–∏ –¥—Ä—É–≥–∞—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ ‚Äî –≤–∞–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥–µ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ)
‚Ä¢	–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (PDF, DOCX –∏ –ø—Ä.) ‚Äî —Ç–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ.
 
üì• –û–∂–∏–¥–∞–Ω–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã 1–°
‚Ä¢	1–° –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫–∞–Ω–∏—Ä—É–µ—Ç –ø–∞–ø–∫—É –∏ –ø–æ–¥–±–∏—Ä–∞–µ—Ç —Ñ–∞–π–ª—ã –ø–æ –º–∞—Å–∫–µ –≤—ã–≥—Ä—É–∑–∫–∞_*.json.
‚Ä¢	–í—Å–µ –ø–æ–ª—è –≤–∞–ª–∏–¥–∏—Ä—É—é—Ç—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ 1–°.
‚Ä¢	–í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ñ–æ—Ä–º–∞—Ç–∞/—Å—Ç—Ä—É–∫—Ç—É—Ä—ã ‚Äî —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Ñ–∞–π–ª-–∫–≤–∏—Ç–∞–Ω—Ü–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—à–∏–±–∫–∏.
‚Ä¢	–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —É—á–∞—Å—Ç–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞.
 


–í–æ—Ç –∫–∞–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–µ—Ç—å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∏ –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª 8.2. –û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä 1–° –≤ —Ç–≤–æ—ë–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ:
 
üó≥Ô∏è 8.2. –û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ FTP-—Å–µ—Ä–≤–µ—Ä 1–°
 
üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—É—é –∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º—É—é –ø–µ—Ä–µ–¥–∞—á—É –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ JSON-—Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞–º –∑–∞–π–º–∞ –Ω–∞ –∑–∞—â–∏—â—ë–Ω–Ω—ã–π SFTP-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞ –≤ 1–°.
–í—Å–µ —ç—Ç–∞–ø—ã –ø–µ—Ä–µ–¥–∞—á–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è, –æ—à–∏–±–∫–∏ –∏ —É—Å–ø–µ—Ö–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –¥–ª—è –∞—É–¥–∏—Ç–∞ –∏ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–∏.
 
üìå –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
1. –ü—Ä–æ—Ç–æ–∫–æ–ª –ø–µ—Ä–µ–¥–∞—á–∏:
‚Ä¢	–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ SFTP (SSH File Transfer Protocol) ‚Äî –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ.
‚Ä¢	FTP –∏ –ª—é–±—ã–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∫–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã.
2. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:
‚Ä¢	–í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (host, port, username, password, remote_dir) —Ö—Ä–∞–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤–æ –≤–Ω–µ—à–Ω–µ–º –∫–æ–Ω—Ñ–∏–≥–µ (config/ftp_settings.yaml).
‚Ä¢	–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–∞:
‚Ä¢	sftp:
‚Ä¢	  host: "192.168.207.98"
‚Ä¢	  port: 22
‚Ä¢	  username: "ftpuser"
‚Ä¢	  password: "securePassword"
‚Ä¢	  remote_dir: "/mnt/ssd4tb/ftp_server/ip_loans/"
3. –ê–ª–≥–æ—Ä–∏—Ç–º –ø–µ—Ä–µ–¥–∞—á–∏:
–≠—Ç–∞–ø	–û–ø–∏—Å–∞–Ω–∏–µ
1Ô∏è‚É£	–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ JSON-—Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –≤—ã–≥—Ä—É–∑–∫–∏ (—Å–º. –ø. 8.1)
2Ô∏è‚É£	–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞—â–∏—â—ë–Ω–Ω–æ–≥–æ SFTP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–∑ ftp_settings.yaml
3Ô∏è‚É£	–ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (sftp.put), –∫–æ–Ω—Ç—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ä–∞–∑–º–µ—Ä–∞
4Ô∏è‚É£	–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, —Å–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤/—Ö–µ—à–∞
5Ô∏è‚É£	–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ (—É—Å–ø–µ—Ö/–æ—à–∏–±–∫–∞), –ø—Ä–∏ –æ—à–∏–±–∫–µ ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ (email, Telegram)
6Ô∏è‚É£	(–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤/–∞—Ä—Ö–∏–≤–æ–≤ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏
4. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
‚Ä¢	–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –∏ –∫–ª—é—á–∏ –≤ –∫–æ–¥–µ.
‚Ä¢	–í—Å–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ‚Äî —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ (paramiko, boto, –∏ —Ç.–ø.) —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
‚Ä¢	–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–æ—Å—Ç—É–ø–æ–º —Ç–æ–ª—å–∫–æ –∫ –Ω—É–∂–Ω–æ–º—É namespace.
‚Ä¢	–í—Å–µ –ª–æ–≥–∏ ‚Äî —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤/–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö.
 
üõ† –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—á–µ–≥–æ –∫–æ–¥–∞ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞ (Python + paramiko)
import os
import paramiko
import yaml
import logging

logging.basicConfig(filename='logs/ftp_sender.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ yaml
with open('config/ftp_settings.yaml', 'r', encoding='utf-8') as f:
    cfg = yaml.safe_load(f)['sftp']

def send_file_to_sftp(local_file, remote_file=None):
    if not os.path.exists(local_file):
        logging.error(f"–§–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {local_file}")
        return False
    remote_file = remote_file or os.path.join(cfg['remote_dir'], os.path.basename(local_file))
    try:
        transport = paramiko.Transport((cfg['host'], cfg['port']))
        transport.connect(username=cfg['username'], password=cfg['password'])
        sftp = paramiko.SFTPClient.from_transport(transport)
        sftp.put(local_file, remote_file)
        sftp.close()
        transport.close()
        logging.info(f"–§–∞–π–ª {local_file} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ SFTP: {remote_file}")
        return True
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ SFTP: {e}")
        return False
 
üì¶ –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ (ftp_sender.log):
2025-07-30 19:20:18 ‚Äî –§–∞–π–ª –≤—ã–≥—Ä—É–∑–∫–∞_20250730_VALB.json —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ SFTP: /mnt/ssd4tb/ftp_server/ip_loans/–≤—ã–≥—Ä—É–∑–∫–∞_20250730_VALB.json
2025-07-30 19:22:31 ‚Äî –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞ SFTP: Authentication failed.
 
üìã –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
‚Ä¢	–ü—Ä–∏ —É—Å–ø–µ—Ö–µ:
–§–∞–π–ª –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 1–° (/mnt/ssd4tb/ftp_server/ip_loans/). 1–° –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–∏—Ä–∞–µ—Ç –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –µ–≥–æ.
‚Ä¢	–ü—Ä–∏ –æ—à–∏–±–∫–µ:
–°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä—É–µ—Ç —Å–æ–±—ã—Ç–∏–µ, —É–≤–µ–¥–æ–º–ª—è–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ (—á–µ—Ä–µ–∑ Telegram/email/–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥), –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –¥–æ –≤—ã—è—Å–Ω–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω.
‚Ä¢	–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ–±—â–∏–π –ª–æ–≥ —Å–∏—Å—Ç–µ–º—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –∞—É–¥–∏—Ç–∞.
 
üì• –°–≤—è–∑—å —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
‚Ä¢	–í—Ö–æ–¥: —Ñ–∞–π–ª –≤—ã–≥—Ä—É–∑–∫–∏ JSON, —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–∞ —ç—Ç–∞–ø–µ 8.1.
‚Ä¢	–í—ã—Ö–æ–¥: —Ñ–∞–π–ª –Ω–∞ SFTP-—Å–µ—Ä–≤–µ—Ä–µ –≤ —Ü–µ–ª–µ–≤–æ–π –ø–∞–ø–∫–µ, –≥–æ—Ç–æ–≤—ã–π –∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–µ 1–°.
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤, —É—á—ë—Ç —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–π (.ok/.err), –¥–∞–ª—å–Ω–µ–π—à–∏–π –∞—É–¥–∏—Ç (—Å–º. 8.3, 8.4).
 


üìë 8.3. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è 1–°
 
üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å —ç—Ç–∞–ø–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö: –≤—Å—è –∏—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫ –Ω–∞ FTP, –æ—à–∏–±–∫–∏, —Å—Ç–∞—Ç—É—Å—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –ø–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∞—É–¥–∏—Ç–∞. –õ—é–±—ã–µ –æ—à–∏–±–∫–∏ –∏–ª–∏ —É—Å–ø–µ—Ö–∏ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –¥–æ–≤–æ–¥—è—Ç—Å—è –¥–æ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ª–∏—Ü.
 
üìå –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
1.	–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ:
o	–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–æ–≤ (—É—Å–ø–µ—Ö–∏, –æ—à–∏–±–∫–∏, –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏, –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ 1–°) —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∂—É—Ä–Ω–∞–ª (ftp_sender.log, ftp_status.json).
o	–ö–∞–∂–¥—ã–π –ª–æ–≥ —Å–æ–¥–µ—Ä–∂–∏—Ç: –¥–∞—Ç—É, –∏–º—è —Ñ–∞–π–ª–∞, creditor_id, —Å—Ç–∞—Ç—É—Å –ø–µ—Ä–µ–¥–∞—á–∏, —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ 1–°.
2.	–§–æ—Ä–º–∞—Ç –ª–æ–≥–∞:
o	–ü—Ä–∏–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ JSON-–∂—É—Ä–Ω–∞–ª–∞:
o	{
o	  "datetime": "2025-07-30T19:35:12",
o	  "file": "–≤—ã–≥—Ä—É–∑–∫–∞_20250730_VALB.json",
o	  "creditor": "VALB",
o	  "status": "success",
o	  "comment": "–£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ SFTP"
o	}
o	–î–ª—è –æ—à–∏–±–æ–∫:
o	{
o	  "datetime": "2025-07-30T19:36:22",
o	  "file": "–≤—ã–≥—Ä—É–∑–∫–∞_20250730_OZON.json",
o	  "creditor": "OZON",
o	  "status": "error",
o	  "comment": "–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ SFTP"
o	}
3.	–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:
o	–ü—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram-—á–∞—Ç –∏–ª–∏ e-mail –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–æ–¥—É–ª—å telegram_notifier.py).
o	–ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è:
o	‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—ã–≥—Ä—É–∑–∫–∏ –¥–ª—è VALB: SFTP authentication failed. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞.
o	–ü—Ä–∏ —É—Å–ø–µ—Ö–µ ‚Äî –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
4.	–•—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∞—É–¥–∏—Ç:
o	–í—Å–µ –ª–æ–≥–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–µ –º–µ–Ω–µ–µ 6 –º–µ—Å—è—Ü–µ–≤.
o	–§–∏–∫—Å–∞—Ü–∏—è –ø–æ–ø—ã—Ç–æ–∫, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –ø–æ–≤—Ç–æ—Ä–æ–≤, —Å—Ç–∞—Ç—É—Å–æ–≤ ‚Äú–û–ö‚Äù, ‚Äúerror‚Äù, ‚Äúduplicate‚Äù.
o	–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–≥—Ä—É–∑–∫–∏ –ø–æ –¥–∞—Ç–µ/–∫—Ä–µ–¥–∏—Ç–æ—Ä—É –¥–ª—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—É–¥–∏—Ç–∞.
 
üõ† –ü—Ä–∏–º–µ—Ä —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∞ –∫–æ–¥–∞ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
import json
import datetime
from telegram_notifier import send_telegram_message  # –≤–∞—à –º–æ–¥—É–ª—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

def log_ftp_status(file, creditor, status, comment):
    entry = {
        "datetime": datetime.datetime.now().isoformat(),
        "file": file,
        "creditor": creditor,
        "status": status,
        "comment": comment
    }
    with open("logs/ftp_status.json", "a", encoding="utf-8") as f:
        f.write(json.dumps(entry, ensure_ascii=False) + "\n")
    if status != "success":
        send_telegram_message(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—ã–≥—Ä—É–∑–∫–∏ –¥–ª—è {creditor}: {comment}")
 
üìà –ü—Ä–∏–º–µ—Ä –ø–æ—Ç–æ–∫–∞ —Å–æ–±—ã—Ç–∏–π
1.	–£—Å–ø–µ—à–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞:
o	–§–∞–π–ª –≤—ã–≥—Ä—É–∑–∫–∞_20250730_VALB.json –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ SFTP ‚Üí –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥, (–ø–æ –∂–µ–ª–∞–Ω–∏—é) —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
2.	–û—à–∏–±–∫–∞/—Å–±–æ–π:
o	–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è/–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ‚Üí –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥, –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É.
3.	–î—É–±–ª–∏–∫–∞—Ç/–ø–æ–≤—Ç–æ—Ä:
o	–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–º ‚Äúduplicate‚Äù.
 
üìã –†–µ–∑—É–ª—å—Ç–∞—Ç
‚Ä¢	–ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫ ‚Äî –¥–æ—Å—Ç—É–ø–Ω–∞ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞.
‚Ä¢	–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–±–æ–∏ ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç —Å—Ä–∞–∑—É, –ø—Ä–æ–±–ª–µ–º–∞ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω–æ–π.
‚Ä¢	–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞—É–¥–∏—Ç–∞ ‚Äî –ø–æ –ª–æ–≥–∞–º –º–æ–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª—é–±—É—é —Ü–µ–ø–æ—á–∫—É —Å–æ–±—ã—Ç–∏–π, –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –æ—à–∏–±–∫–∏ –∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ñ–∞–∫—Ç –ø–µ—Ä–µ–¥–∞—á–∏.
 





8.4 –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤
 
üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:
–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—ã–≥—Ä—É–∑–∫—É, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–∞–π–ª–æ–≤ –Ω–∞ FTP –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ (Valberis, Ozon –∏ –¥—Ä—É–≥–∏–µ) –±–µ–∑ —Ä—É—á–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ —Å —É—á—ë—Ç–æ–º —Å–ø–µ—Ü–∏—Ñ–∏–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø–∞–ø–æ–∫ –∫–∞–∂–¥–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞.
 
üìå –ö–ª—é—á–µ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:
1.	–ú—É–ª—å—Ç–∏–ø—Ä–æ—Ñ–∏–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞:
o	–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø—É—Ç–∏ –≤—ã–≥—Ä—É–∑–∫–∏, —Å—Ö–µ–º—ã Excel/JSON, –ø–æ–ª—è, –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤).
o	–í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –±–µ—Ä—É—Ç—Å—è –∏–∑ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ (paths.json, excel_fields_{creditor_id}.yaml, ftp_settings_{creditor_id}.yaml).
2.	–ü–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞:
o	–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –ø–∞–ø–∫–∏ –∏ —Ä–µ–µ—Å—Ç—Ä—ã, –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ –ø–æ meta.json (–∏–ª–∏ –∏–Ω—ã–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º), —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω—É–∂–Ω—ã–π JSON, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ ‚Äú—Å–≤–æ–π‚Äù FTP-—Å–µ—Ä–≤–µ—Ä/–ø–∞–ø–∫—É.
o	–ü—Ä–∏–º–µ—Ä (paths.json):
o	{
o	  "VALB": "—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/5–ú–ö –í–ë –§–∏–Ω–∞–Ω—Å/–†–µ–µ—Å—Ç—Ä—ã/!–û–ë–©–ò–ô –ü–£–õ –í–ë/",
o	  "OZON": "—Å–µ—Ç—å/asf01/files/—é—Ä–∏—Å—Ç—ã/OZON/–†–µ–µ—Å—Ç—Ä—ã/!–û–ë–©–ò–ô –ü–£–õ OZON/"
o	}
3.	–ì–∏–±–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–æ–≤—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤:
o	–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ –Ω—É–∂–Ω–æ:
ÔÇß	–í–Ω–µ—Å—Ç–∏ –µ–≥–æ –≤ –∫–æ–Ω—Ñ–∏–≥ –ø—É—Ç–µ–π (paths.json);
ÔÇß	–î–æ–±–∞–≤–∏—Ç—å —Å—Ö–µ–º—É –ø–æ–ª–µ–π (excel_fields_{creditor_id}.yaml);
ÔÇß	–£–∫–∞–∑–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ FTP (ftp_settings_{creditor_id}.yaml).
4.	–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞—É–¥–∏—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞:
o	–í –ª–æ–≥–∞—Ö –∏ –æ—Ç—á–µ—Ç–∞—Ö –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –∏ –ø–æ–º–µ—á–∞—é—Ç—Å—è –ø–æ creditor_id.
o	–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –≤–µ—Å—å ‚Äú—Ü–∏–∫–ª –∂–∏–∑–Ω–∏‚Äù –≤—ã–≥—Ä—É–∑–∫–∏ –ø–æ –ª—é–±–æ–º—É –∫—Ä–µ–¥–∏—Ç–æ—Ä—É.
5.	–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ (–ø–æ –æ–ø—Ü–∏–∏):
o	–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞ FTP –º–æ–∂–µ—Ç –∏–¥—Ç–∏ –≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ –º–Ω–æ–≥–æ).
o	–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã –∏ –æ—à–∏–±–∫–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ—Ç–æ–∫—É —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ.
 
üõ† –ü—Ä–∏–º–µ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞ (–ø–∞–∫–µ—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º):
import os
import json
from ftp_sender import send_to_ftp  # –í–∞—à–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ FTP

def process_all_creditors(export_dir='exports/', config_path='config/paths.json'):
    with open(config_path, 'r', encoding='utf-8') as f:
        paths_config = json.load(f)
    for creditor_id, dest_path in paths_config.items():
        pattern = f"reestr_export_*_{creditor_id}.json"
        files = [f for f in os.listdir(export_dir) if f.startswith(f"reestr_export") and creditor_id in f]
        for file in files:
            file_path = os.path.join(export_dir, file)
            status = send_to_ftp(file_path, creditor_id)  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å —É—á–µ—Ç–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫ creditor_id
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚Äî –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Ä–∞–∑–¥–µ–ª–µ

process_all_creditors()
 
üìà –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ä–∞–∑–¥–µ–ª–∞:
‚Ä¢	–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω —Å–≤–æ–π —Ñ–∞–π–ª (–∏–ª–∏ –ø—É–ª —Ñ–∞–π–ª–æ–≤) –Ω–∞ FTP.
‚Ä¢	–í—Å—è –∏—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π (–∏ –æ—à–∏–±–æ–∫) ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è —Å —Ä–∞–∑–±–∏–≤–∫–æ–π –ø–æ creditor_id.
‚Ä¢	–°–∏—Å—Ç–µ–º–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ö–æ—Ç—å 10 –Ω–æ–≤—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ ‚Äî –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥–∏, –≤–µ—Å—å pipeline –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è.
‚Ä¢	–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç–æ—Ä —Å–≤–æ–¥–∏—Ç—Å—è –∫ –Ω—É–ª—é: –Ω–µ—Ç —Ä—É—á–Ω—ã—Ö –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–π, –æ—à–∏–±–æ–∫, –ø—É—Ç–∞–Ω–∏—Ü—ã ‚Äî —Å–∏—Å—Ç–µ–º–∞ —Å–∞–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Å—ë –ø–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º.
 




üì£ 9. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
 
9.1 telegram_notifier.py: –æ—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤ –≤ Telegram
üìå –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –≤—ã–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ 1–° —Å–∏—Å—Ç–µ–º–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram-–≥—Ä—É–ø–ø—É.
 
üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
‚Ä¢	–ö—Ä–µ–¥–∏—Ç–æ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, Valberis)
‚Ä¢	–°–ø–∏—Å–æ–∫ –¥–æ–≥–æ–≤–æ—Ä–æ–≤:
o	–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞
o	–§–ò–û
o	–°—É–º–º–∞
‚Ä¢	–ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞:
o	–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–≥–æ–≤–æ—Ä–æ–≤
o	–û–±—â–∞—è —Å—É–º–º–∞
o	–í—Ä–µ–º—è –≤—ã–≥—Ä—É–∑–∫–∏
 
üßæ –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
üü¢ –í—ã–≥—Ä—É–∑–∫–∞ –≤ 1–° –∑–∞–≤–µ—Ä—à–µ–Ω–∞

–ö—Ä–µ–¥–∏—Ç–æ—Ä: Valberis

–î–æ–≥–æ–≤–æ—Ä—ã:
1. 32404294000 ‚Äî –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á ‚Äî 150 000 ‚ÇΩ
2. 52404234030 ‚Äî –ü–µ—Ç—Ä–æ–≤ –ü—ë—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á ‚Äî 320 000 ‚ÇΩ
...

–ò—Ç–æ–≥–æ:
–î–æ–≥–æ–≤–æ—Ä–æ–≤: 27
–°—É–º–º–∞: 4 300 000 ‚ÇΩ
–í—Ä–µ–º—è: 23.06.2025 18:41
 
üß± –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞
‚úÖ telegram_notifier.py ‚Äî –∏—Ç–æ–≥–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
# telegram_notifier.py

import requests
from datetime import datetime
import logging
import os
import json

# üìç –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ settings.yaml)
TELEGRAM_TOKEN = "your_telegram_bot_token"
CHAT_ID = "your_chat_id"  # –ì—Ä—É–ø–ø–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
LOG_FILE = "logs/telegram_report.log"

# üéØ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞
def send_telegram_full_report(creditor, contracts, tg_token=TELEGRAM_TOKEN, chat_id=CHAT_ID):
    time_str = datetime.now().strftime("%d.%m.%Y %H:%M")

    contract_lines = []
    total_sum = 0

    for idx, c in enumerate(contracts, 1):
        contract_num = c.get("–Ω–æ–º–µ—Ä", "-")
        fio = c.get("—Ñ–∏–æ", "-")
        summa = c.get("—Å—É–º–º–∞", 0)
        try:
            total_sum += float(summa)
        except:
            pass
        contract_lines.append(f"{idx}. {contract_num} ‚Äî {fio} ‚Äî {summa:,} ‚ÇΩ")

    contracts_text = "\n".join(contract_lines)

    summary = (
        f"\n–ò—Ç–æ–≥–æ:\n"
        f"–î–æ–≥–æ–≤–æ—Ä–æ–≤: {len(contracts)}\n"
        f"–°—É–º–º–∞: {int(total_sum):,} ‚ÇΩ\n"
        f"–í—Ä–µ–º—è: {time_str}"
    )

    msg = (
        f"üü¢ –í—ã–≥—Ä—É–∑–∫–∞ –≤ 1–° –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n\n"
        f"–ö—Ä–µ–¥–∏—Ç–æ—Ä: {creditor}\n\n"
        f"–î–æ–≥–æ–≤–æ—Ä—ã:\n{contracts_text}\n"
        f"{summary}"
    )

    url = f"https://api.telegram.org/bot{tg_token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": msg,
        "parse_mode": "HTML"
    }

    try:
        response = requests.post(url, data=payload)
        if response.status_code == 200:
            log_event("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        else:
            log_error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {response.status_code} ‚Äî {response.text}")
    except Exception as e:
        log_error(f"‚ùå Telegram Exception: {e}")

# üì¶ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ª–æ–≥–æ–≤
def log_event(text):
    logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')
    logging.info(text)

def log_error(text):
    logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')
    logging.error(text) 
‚ö† –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
‚Ä¢	–î–æ 20‚Äì30 —Å—Ç—Ä–æ–∫ ‚Äî –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.
‚Ä¢	–ï—Å–ª–∏ –¥–æ–≥–æ–≤–æ—Ä–æ–≤ –±–æ–ª—å—à–µ ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ:
o	–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ (txt –∏–ª–∏ xlsx)
o	–î–µ–ª–µ–Ω–∏–µ –Ω–∞ —á–∞—Å—Ç–∏
‚Ä¢	–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –≤ 1–° –∏–ª–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π).
 
9.2 –ü–æ–≤–µ–¥–µ–Ω–∏–µ main.py ‚Äî —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å	–î–µ—Ç–∞–ª–∏
üîÅ –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω–≤–µ–π–µ—Ä	–ö–∞–∂–¥—ã–π –º–æ–¥—É–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –ø–æ –æ—á–µ—Ä–µ–¥–∏
‚úÖ –ö–æ–Ω—Ç—Ä–æ–ª—å —à–∞–≥–æ–≤	–í—Å–µ —É—Å–ø–µ—Ö–∏, –æ—à–∏–±–∫–∏, –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è
üÜò –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–±–æ–µ–≤	–ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –¥–µ—Ç–∞–ª–∏, –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏: pause.flag
üß™ –ß–∞—Å—Ç–∏—á–Ω—ã–π –∑–∞–ø—É—Å–∫	main.py --resume-from=excel_processor, --skip-mail ‚Äî –ª—é–±–æ–π –º–æ–¥—É–ª—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
üîÑ –†—É—á–Ω–æ–π –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫	–ü–æ–¥–¥–µ—Ä–∂–∫–∞ systemd, cron, Docker, python main.py
üõ† –ì–∏–±–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞	–ß–µ—Ä–µ–∑ config/settings.yaml, paths.json, routing_profiles.json, –±–µ–∑ –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∫–æ–¥–∞
üîß –†–∞—Å—à–∏—Ä—è–µ–º–æ—Å—Ç—å	–ù–æ–≤—ã–µ –∫—Ä–µ–¥–∏—Ç–æ—Ä—ã, —Ñ–∏–ª—å—Ç—Ä—ã, —Ñ–æ—Ä–º–∞—Ç—ã Excel ‚Äî –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –º–æ–¥—É–ª—å–Ω–æ
 
üìÅ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
–õ–æ–≥-—Ñ–∞–π–ª	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
logs/main.log	–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤
logs/error_log.json	–û—à–∏–±–∫–∏ –Ω–∞ –ª—é–±–æ–º —ç—Ç–∞–ø–µ (–≤–∫–ª—é—á–∞—è API)
logs/routing_log.json	–ö–∞–∫–æ–π –∫—Ä–µ–¥–∏—Ç–æ—Ä –∏ –ø–æ –∫–∞–∫–æ–º—É –ø—É—Ç–∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω
logs/not_processed.json	–í—Å—ë, —á—Ç–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
logs/duplicates_log.json	–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–æ–≤—Ç–æ—Ä—ã –ø–æ –¥–æ–≥–æ–≤–æ—Ä–∞–º
logs/telegram.log (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)	–£—Å–ø–µ—à–Ω—ã–µ –∏ –Ω–µ—É—Å–ø–µ—à–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
 
üì¶ –†–µ–∑—É–ª—å—Ç–∞—Ç
‚Ä¢	–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram –ø—Ä–∏—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏.
‚Ä¢	–í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫ ‚Äî –º–æ–∂–Ω–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ.
‚Ä¢	–í—Å–µ —à–∞–≥–∏ –∑–∞–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω—ã –∏ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω—ã.
 





































ü™µ 10. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∞—É–¥–∏—Ç
 
10.1 –§–æ—Ä–º–∞—Ç—ã –ª–æ–≥–æ–≤: –æ–±—Ä–∞–±–æ—Ç–∫–∞, –æ—à–∏–±–∫–∏, –¥—É–±–ª–∏
–õ–æ–≥-—Ñ–∞–π–ª	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
logs/main.log	–û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥ –ø–æ –≤—Å–µ–º —ç—Ç–∞–ø–∞–º: –æ—Ç –ø–∏—Å—å–º–∞ –¥–æ –≤—ã–≥—Ä—É–∑–∫–∏
logs/error_log.json	–û—à–∏–±–∫–∏: —Å–±–æ–∏ —á—Ç–µ–Ω–∏—è, API 1–°, —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞, –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –∏ –ø—Ä.
logs/not_processed.json	–í—Å–µ —Å–ª—É—á–∞–∏, –≥–¥–µ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ (–±–∏—Ç—ã–µ, –ø—É—Å—Ç—ã–µ, –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ñ–∞–π–ª—ã)
logs/duplicates_log.json	–î—É–±–ª–∏ –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞
logs/routing_log.json	–ö–∞–∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω –º–∞—Ä—à—Ä—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∫—Ä–µ–¥–∏—Ç–æ—Ä
–§–æ—Ä–º–∞—Ç: JSON-–º–∞—Å—Å–∏–≤, –∫–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å —Å–æ–¥–µ—Ä–∂–∏—Ç:
‚Ä¢	datetime ‚Äî –≤—Ä–µ–º—è
‚Ä¢	step ‚Äî —ç—Ç–∞–ø (mail, archive, excel, validate –∏ —Ç.–¥.)
‚Ä¢	contract_num ‚Äî –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
‚Ä¢	message ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
 
10.2 –§–∞–π–ª pause.flag: –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
‚Ä¢	–ü—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ñ–∞–π–ª–∞ logs/pause.flag –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è.
‚Ä¢	–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤—Ä—É—á–Ω—É—é –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç —Ä–∞–±–æ—Ç—É.
‚Ä¢	–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –ø–∞—É–∑ –∏–ª–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ.
‚Ä¢	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –Ω–æ–≤—ã–º –∑–∞–ø—É—Å–∫–æ–º —Ü–∏–∫–ª–∞.
 
10.3 –î–æ—Å—Ç—É–ø –∫ –ª–æ–≥–∞–º –∏ –∂—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π
‚Ä¢	–í—Å–µ –ª–æ–≥–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥–µ:
C:\ip_processor\logs\ (–∏–ª–∏ ./logs/ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–∑ Linux/Docker)
‚Ä¢	–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–Ω–µ—à–Ω–∏–º–∏ —Å–∏—Å—Ç–µ–º–∞–º–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Telegram, Prometheus).
‚Ä¢	–û—Ç–¥–µ–ª—å–Ω—ã–π –∂—É—Ä–Ω–∞–ª –≤—ã–≥—Ä—É–∑–∫–∏ –≤ Telegram (telegram_notifier.log ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
 

üöÄ 11. –°–∫–≤–æ–∑–Ω–æ–π —Å—Ü–µ–Ω–∞—Ä–∏–π –æ–±—Ä–∞–±–æ—Ç–∫–∏, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –∏ –∑–∞–ø—É—Å–∫
–û—Ç–ª–∏—á–Ω–æ, –¥–µ–ª–∞—é –¥–µ—Ç–∞–ª—å–Ω–æ–µ –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ 11.1. –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–±—ä—è—Å–Ω—è—é, —á—Ç–æ –¥–µ–ª–∞–µ—Ç main.py, –∫–∞–∫ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –∑–∞–ø—É—Å–∫, –∫–æ–Ω—Ç—Ä–æ–ª—å —ç—Ç–∞–ø–æ–≤ –∏ –∫–∞–∫ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ –≤—ã–∑–æ–≤—ã –º–æ–¥—É–ª–µ–π, –±–µ–∑ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–π, —Å –ø–æ—à–∞–≥–æ–≤–æ–π –ª–æ–≥–∏–∫–æ–π. –≠—Ç–æ –±—É–¥–µ—Ç –ø—Ä–∏–≥–æ–¥–Ω–æ –∏ –¥–ª—è –±–∏–∑–Ω–µ—Å-–æ–ø–∏—Å–∞–Ω–∏—è, –∏ –¥–ª—è —Ç–µ—Ö–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏, –∏ –∫–∞–∫ –æ–±—Ä–∞–∑–µ—Ü ‚Äú—è–¥—Ä–∞‚Äù –≤—Å–µ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã.
 
11.1. –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ (main.py)
üéØ –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
–ï–¥–∏–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏–∏, –∫–æ–Ω—Ç—Ä–æ–ª—è –∏ –∞—É–¥–∏—Ç–∞ –≤—Å–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ‚Äî –æ—Ç —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏—Ç–æ–≥–æ–≤–æ–π –≤—ã–≥—Ä—É–∑–∫–∏ –Ω–∞ FTP/SFTP –¥–ª—è 1–°.
main.py –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
‚Ä¢	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
‚Ä¢	–ó–∞–≥—Ä—É–∑–∫—É –∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤
‚Ä¢	–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
‚Ä¢	–ñ—ë—Å—Ç–∫–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–æ–≤, –æ—à–∏–±–æ–∫, –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢	–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (.ok/.err) –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á—ë—Ç–∞
 
–°—Ç—Ä—É–∫—Ç—É—Ä–∞ main.py: –ø–æ—à–∞–≥–æ–≤–æ
# main.py ‚Äî —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –º–æ–¥—É–ª—å —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –ø–æ—á—Ç—ã –∏ –∞—Ä—Ö–∏–≤–æ–≤

import os
import sys
from datetime import datetime

# 0Ô∏è‚É£ –ü—Ä–∏—ë–º –∏ —Ä–∞–∑–±–æ—Ä –ø–∏—Å–µ–º
from app.mail_parser import process_incoming_mail

# 1Ô∏è‚É£ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
from app.archive_handler import unpack_archives

# 2Ô∏è‚É£ –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ Excel-—Ñ–∞–π–ª–æ–≤ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ)
from app.excel_processor import preprocess_excels

# 3Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä—É/—Ç–∏–ø—É –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
from app.route_selector import select_route

# 4Ô∏è‚É£ –ö–æ–Ω—Ñ–∏–≥–∏ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
from app.config import load_configs
from app.validator import validate_all_configs
from app.state_manager import (
    log_event, check_pause_flag, init_journals, close_journals
)
from app.filewalker import collect_files
from app.parser import process_files
from app.data_enrichment import enrich_data  # –µ—Å–ª–∏ –µ—Å—Ç—å OCR/AI-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
from app.ai_client import analyze_with_ai
from app.exporter import export_to_json
from app.aggregate_exports import aggregate_jsons, save_aggregate
from app.ftp_client import send_file_to_ftp, wait_for_ack_file
from app.telegram_notifier import send_notification  # —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

def main():
    try:
        # 0Ô∏è‚É£ –ü—Ä–∏—ë–º –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π –ø–æ—á—Ç—ã (mail_parser)
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤–ª–æ–∂–µ–Ω–∏–π...")
        configs = load_configs()
        process_incoming_mail(configs)  # –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è –≤–æ –≤—Ö–æ–¥—è—â—É—é –ø–∞–ø–∫—É

        # 1Ô∏è‚É£ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –Ω–æ–≤—ã—Ö –∞—Ä—Ö–∏–≤–æ–≤ (zip/rar)
        print("–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤...")
        unpack_archives(input_dir="incoming", output_dir="data/in")  # –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ

        # 2Ô∏è‚É£ –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ Excel-—Ñ–∞–π–ª–æ–≤ (–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ/–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫)
        print("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ Excel-—Ä–µ–µ—Å—Ç—Ä–æ–≤...")
        preprocess_excels(input_dir="data/in", output_dir="data/in")

        # 3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ pause.flag
        if check_pause_flag():
            print("–û–±–Ω–∞—Ä—É–∂–µ–Ω pause.flag ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
            log_event(stage="init", status="pause", comment="pause.flag")
            sys.exit(0)

        # 4Ô∏è‚É£ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∂—É—Ä–Ω–∞–ª–æ–≤ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        print("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∂—É—Ä–Ω–∞–ª–æ–≤ –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")
        init_journals()

        # 5Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
        print("–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤...")
        configs = load_configs()
        validation_ok, errors = validate_all_configs(configs)
        if not validation_ok:
            log_event(stage="init", status="critical_error", error_msg=str(errors))
            print("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤:", errors)
            close_journals()
            sys.exit(1)

        # 6Ô∏è‚É£ –°–±–æ—Ä —Å–ø–∏—Å–∫–∞ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        print("–°–±–æ—Ä –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
        files_to_process = collect_files(configs)

        # 7Ô∏è‚É£ –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è (–≤—ã–±–æ—Ä —Å—Ö–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏, —à–∞–±–ª–æ–Ω–æ–≤) ‚Äî –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        files_to_process = select_route(files_to_process, configs)
        log_event(stage="filewalker", status="ok", count=len(files_to_process))

        # 8Ô∏è‚É£ –ü–∞—Ä—Å–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤ (–∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª–µ–π)
        print(f"–ü–∞—Ä—Å–∏–Ω–≥ {len(files_to_process)} —Ñ–∞–π–ª–æ–≤...")
        parsed_results = process_files(files_to_process, configs)
        log_event(stage="parser", status="ok", count=len(parsed_results))

        # 9Ô∏è‚É£ Data enrichment: OCR/AI-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ PDF/JPG –∏ –¥—Ä.
        print("–û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (OCR/AI)...")
        enriched_results = enrich_data(parsed_results, configs)
        log_event(stage="data_enrichment", status="ok", count=len(enriched_results))

        # üîü AI-–∞–Ω–∞–ª–∏–∑ (–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é)
        print("–ê–Ω–∞–ª–∏–∑ –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π —á–µ—Ä–µ–∑ AI...")
        ai_results = analyze_with_ai(enriched_results, configs)
        log_event(stage="ai_client", status="ok", count=len(ai_results))

        # 11Ô∏è‚É£ –≠–∫—Å–ø–æ—Ä—Ç –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã
        print("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ JSON-–≤—ã–≥—Ä—É–∑–æ–∫...")
        export_path = export_to_json(ai_results, configs)
        log_event(stage="exporter", status="ok", file=export_path)

        # 12Ô∏è‚É£ –ê–≥—Ä–µ–≥–∞—Ü–∏—è –≤—Å–µ—Ö –≤—ã–≥—Ä—É–∑–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Å—É—Ç–∫–∏)
        print("–ê–≥—Ä–µ–≥–∞—Ü–∏—è –≤—Å–µ—Ö –≤—ã–≥—Ä—É–∑–æ–∫ –∑–∞ —Å—É—Ç–∫–∏...")
        date_str = datetime.now().strftime('%Y%m%d')
        aggregated = aggregate_jsons(date_str)
        agg_path = save_aggregate(aggregated, date_str)
        log_event(stage="aggregate", status="ok", file=agg_path)

        # 13Ô∏è‚É£ –ü–µ—Ä–µ–¥–∞—á–∞ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP
        print("–ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP/FTP...")
        try:
            remote_path = send_file_to_ftp(agg_path)
            log_event(stage="ftp_send", status="success", file=agg_path, remote_path=remote_path)
        except Exception as e:
            log_event(stage="ftp_send", status="error", file=agg_path, error_msg=str(e))
            print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP:", e)
            close_journals()
            send_notification("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP!", error=str(e))
            sys.exit(3)

        # 14Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (.ok/.err) –æ—Ç 1–°
        print("–û–∂–∏–¥–∞–Ω–∏–µ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ—Ç 1–°...")
        ack_status, ack_info = wait_for_ack_file(remote_path)
        log_event(stage="ftp_ack", status=ack_status, file=agg_path, ack_info=ack_info)
        if ack_status != "success":
            print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ—Ç 1–°:", ack_info)
            close_journals()
            send_notification("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ—Ç 1–°!", info=ack_info)
            sys.exit(4)
        else:
            print("–§–∞–π–ª –ø—Ä–∏–Ω—è—Ç 1–°, –ø–æ–ª—É—á–µ–Ω–∞ –∫–≤–∏—Ç–∞–Ω—Ü–∏—è.")

        # 15Ô∏è‚É£ Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
        send_notification("–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –§–∞–π–ª –ø—Ä–∏–Ω—è—Ç 1–°.")

        # 16Ô∏è‚É£ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ, –∑–∞–∫—Ä—ã—Ç–∏–µ –∂—É—Ä–Ω–∞–ª–æ–≤
        close_journals()
        print("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –í—Å–µ —Å—Ç–∞—Ç—É—Å—ã –∑–∞–ø–∏—Å–∞–Ω—ã.")

    except Exception as ex:
        log_event(stage="main", status="exception", error_msg=str(ex))
        print("–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è main.py:", ex)
        close_journals()
        send_notification("–ê–≤–∞—Ä–∏–π–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞!", error=str(ex))
        sys.exit(5)

if __name__ == "__main__":
    main()
–í–æ—Ç –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ, —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è ‚Äî —Å —É—á—ë—Ç–æ–º –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞:
 
–ü–æ—è—Å–Ω–µ–Ω–∏—è –∫ –∫–∞–∂–¥–æ–º—É —à–∞–≥—É
‚Ä¢ process_incoming_mail()
‚Äî –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–æ–≤—ã–µ –ø–∏—Å—å–º–∞ –Ω–∞ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–æ—á—Ç–µ (IMAP), —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é/—Ç–µ–º–µ, —Å–∫–∞—á–∏–≤–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è –≤–æ –≤—Ö–æ–¥—è—â—É—é —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∏—Å—å–º–∞ —Å–æ–∑–¥–∞—ë—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –¥–∞—Ç–æ–π –∏ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏, –ª–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è. –†–∞–±–æ—Ç–∞–µ—Ç –î–û —Å—Ç–∞—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤.
‚Ä¢ unpack_archives()
‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Ö–æ–¥–∏—Ç –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏–≤—ã (.zip, .rar) –∏–∑ –≤—Ö–æ–¥—è—â–µ–π –ø–∞–ø–∫–∏ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é. –û—á–∏—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —É–¥–∞–ª—è–µ—Ç –ª–∏—à–Ω–∏–µ –∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ –≤–ª–æ–∂–µ–Ω–∏—è, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.
‚Ä¢ preprocess_excels()
‚Äî –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞–π–¥–µ–Ω–Ω—ã–µ Excel-—Ñ–∞–π–ª—ã, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ–¥ –Ω—É–∂–Ω—ã–π —à–∞–±–ª–æ–Ω, –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–æ–ª–µ–π, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ú–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ñ–∏–∫—Å–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –ø–æ–¥ –Ω—É–∂–¥—ã 1–°.
‚Ä¢ check_pause_flag()
‚Äî –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ logs/pause.flag. –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω ‚Äî –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π, —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–Ω—ã—Ö —Ä–∞–±–æ—Ç –∏–ª–∏ –∞–≤–∞—Ä–∏–π–Ω–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏).
‚Ä¢ init_journals(), close_journals()
‚Äî –û—Ç–∫—Ä—ã–≤–∞—é—Ç –∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç –∂—É—Ä–Ω–∞–ª—ã –ª–æ–≥–æ–≤: –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞—é—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ JSON-—Ñ–∞–π–ª—ã –¥–ª—è –∞—É–¥–∏—Ç–∞ —Å–æ–±—ã—Ç–∏–π, –æ—à–∏–±–æ–∫, –¥—É–±–ª–µ–π –∏ —Ç.–ø. –û–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å –ª–æ–≥–∞ –Ω–∞ –≤—Å—ë–º –∂–∏–∑–Ω–µ–Ω–Ω–æ–º —Ü–∏–∫–ª–µ.
‚Ä¢ load_configs(), validate_all_configs()
‚Äî –ó–∞–≥—Ä—É–∂–∞—é—Ç –≤—Å–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, YAML/CSV/JSON-—Ñ–∞–π–ª—ã. –ü—Ä–æ–≤–µ—Ä—è—é—Ç –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤, —Ñ–æ—Ä–º–∞—Ç–æ–≤ –¥–∞–Ω–Ω—ã—Ö –∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø–∏—Å–µ–π. –õ—é–±—ã–µ –æ—à–∏–±–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è, –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö ‚Äî –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç—Å—è.
‚Ä¢ collect_files()
‚Äî –°–∫–∞–Ω–∏—Ä—É–µ—Ç –∞—Ä—Ö–∏–≤—ã, —Ä–∞–±–æ—á–∏–µ –ø–∞–ø–∫–∏ –∏ –≤—Ö–æ–¥—è—â–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏. –ù–∞—Ö–æ–¥–∏—Ç –Ω–æ–≤—ã–µ –∏–ª–∏ –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ —Ñ–æ—Ä–º–∞—Ç—É, –ø–æ —Å–ø–∏—Å–∫—É –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤, –ø–æ —Å—Ç–∞—Ç—É—Å—É), –∏—Å–∫–ª—é—á–∞–µ—Ç —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ (–ø–æ –ª–æ–≥–∞–º). –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞.
‚Ä¢ select_route()
‚Äî –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∞—Ä—à—Ä—É—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä—É, —Ç–∏–ø—É –¥–∞–Ω–Ω—ã—Ö, —Å–ø–µ—Ü–∏—Ñ–∏–∫–µ –≤–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–∞–∑–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∏–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –±–∞–Ω–∫–æ–≤/–ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤). –ü—Ä–∏–º–µ–Ω—è–µ—Ç –Ω—É–∂–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –∏ –ø—Ä–∞–≤–∏–ª–∞ –∫ –∫–∞–∂–¥–æ–º—É –ø–∞–∫–µ—Ç—É –¥–∞–Ω–Ω—ã—Ö.
‚Ä¢ process_files()
‚Äî –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è –ø–æ —à–∞–±–ª–æ–Ω–∞–º/—Ä–µ–≥—É–ª—è—Ä–∫–∞–º/—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º, –ø—Ä–æ–≤–æ–¥–∏—Ç –ø–µ—Ä–≤–∏—á–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ, –ª–æ–≥–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞ (OK/–æ—à–∏–±–∫–∞/–ø—Ä–æ–ø—É—Å–∫).
‚Ä¢ enrich_data()
‚Äî –ü—Ä–æ–≤–æ–¥–∏—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ PDF/JPG (OCR), –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è (–ò–ù–ù, –§–ò–û, –¥–∞—Ç—ã –∏ —Ç.–ø.), —Ä–∞–±–æ—Ç–∞–µ—Ç —Å ‚Äú—Å—ã—Ä—ã–º–∏‚Äù —Ñ–∞–π–ª–∞–º–∏, –ø–æ–≤—ã—à–∞–µ—Ç –ø–æ–ª–Ω–æ—Ç—É –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ AI/1–°.
‚Ä¢ analyze_with_ai()
‚Äî –ï—Å–ª–∏ –≤–∫–ª—é—á—ë–Ω –º–æ–¥—É–ª—å –ò–ò, –ø–µ—Ä–µ–¥–∞—ë—Ç —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–æ –≤–Ω–µ—à–Ω–∏–π AI-—Å–µ—Ä–≤–∏—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ø–Ω–¥–µ–∫—ÅGPT, DeepSeek, –¥—Ä—É–≥–æ–π LLM). –î–æ–ø–æ–ª–Ω—è–µ—Ç/—É—Ç–æ—á–Ω—è–µ—Ç –ø–æ–ª—è, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç summary, –±–∏–∑–Ω–µ—Å-—Ü–µ–ª–∏, –º–µ—Ç–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç enriched-—Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏.
‚Ä¢ export_to_json()
‚Äî –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–∞–ª–∏–¥–Ω—ã–µ –∏ enrich-—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –∫–∞–∂–¥—ã–π –¥–æ–≥–æ–≤–æ—Ä, –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ –∏–ª–∏ –æ–±—â–∏–π –ø—É–ª ‚Äî –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ª–æ–≥–∏–∫–∏) –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–∏. –§–∏–∫—Å–∏—Ä—É–µ—Ç –¥—É–±–ª–∏ –∏ –æ—à–∏–±–∫–∏.
‚Ä¢ aggregate_jsons(), save_aggregate()
‚Äî –°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –≤—ã–≥—Ä—É–∑–∫–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥ (–æ–±—ã—á–Ω–æ —Å—É—Ç–∫–∏), –∏—Å–∫–ª—é—á–∞–µ—Ç –¥—É–±–ª–∏ –ø–æ –±–∏–∑–Ω–µ—Å-–∫–ª—é—á–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –¥–∞—Ç–µ), —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –µ–¥–∏–Ω—ã–º —Ñ–æ—Ä–º–∞—Ç–æ–º –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤ 1–°. –ò–º—è —Ñ–∞–π–ª–∞ —Å—Ç—Ä–æ–≥–æ –ø–æ —à–∞–±–ª–æ–Ω—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, IP_ARXIVE_20250730.json).
‚Ä¢ send_file_to_ftp()
‚Äî –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞—â–∏—â—ë–Ω–Ω–æ–µ SFTP-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤, –ø–µ—Ä–µ–¥–∞—ë—Ç –∏—Ç–æ–≥–æ–≤—ã–π JSON-—Ñ–∞–π–ª –≤ —Ü–µ–ª–µ–≤—É—é –ø–∞–ø–∫—É —Å–µ—Ä–≤–µ—Ä–∞ 1–°, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ (–Ω–∞–ª–∏—á–∏–µ, —Ä–∞–∑–º–µ—Ä, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å).
‚Ä¢ wait_for_ack_file()
‚Äî –û–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞-–∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ (.ok –∏–ª–∏ .err) –æ—Ç 1–° –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ï—Å–ª–∏ .ok ‚Äî —Ñ–∏–∫—Å–∞—Ü–∏—è —É—Å–ø–µ—Ö–∞; –µ—Å–ª–∏ .err ‚Äî –ø–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç–∞ –æ—à–∏–±–∫–∏, –∑–∞–ø–∏—Å—å –≤ error_log. –¢–∞–π–º–∞—É—Ç –∏ –≤—Å–µ —Å–æ–±—ã—Ç–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è.
‚Ä¢ send_notification()
‚Äî –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö —Ä–∞–±–æ—Ç—ã, –æ—à–∏–±–∫–∞—Ö –∏ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–∞—Ö –≤ Telegram-—á–∞—Ç –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ .ok/.err, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–ª–∏ —Å–±–æ—è—Ö –ø–∞–π–ø–ª–∞–π–Ω–∞).
‚Ä¢ log_event()
‚Äî –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞, –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ –¥–µ–π—Å—Ç–≤–∏—è, –æ—à–∏–±–∫–∏ –∏ –ø–æ–ø—ã—Ç–∫–∏ –≤ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥ –ø—Ä–æ—Ü–µ—Å—Å–∞ (process_log.json, error_log.json –∏ –¥—Ä.). –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –ø–æ–ª–Ω—É—é —Ç—Ä–∞—Å—Å–∏—Ä—É–µ–º–æ—Å—Ç—å, –∞—É–¥–∏—Ç –∏ –∞–Ω–∞–ª–∏–∑.
 
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ Best Practices
‚Ä¢	100% –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å: –∫–∞–∂–¥—ã–π —ç—Ç–∞–ø –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ –ª–æ–≥–µ, –µ—Å—Ç—å –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è –∞—É–¥–∏—Ç–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞.
‚Ä¢	Fail-tolerant: –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ —Å–∏—Å—Ç–µ–º–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ—Ç —ç—Ç–∞–ø, –ø–∏—à–µ—Ç –ø—Ä–∏—á–∏–Ω—É, –Ω–∏—á–µ–≥–æ –Ω–µ —Ç–µ—Ä—è–µ—Ç—Å—è. –û–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤—Å–µ–≥–¥–∞ –∑–Ω–∞—é—Ç, –Ω–∞ —á—ë–º –ø—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è.
‚Ä¢	–õ—ë–≥–∫–∞—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å: –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –±–ª–æ–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥—Ä—É–≥–æ–π AI-–∫–ª–∏–µ–Ω—Ç, –¥–æ–ø. –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—ã–≥—Ä—É–∑–∫–∏) ‚Äî –±–∞–∑–æ–≤–∞—è —Ü–µ–ø–æ—á–∫–∞ –Ω–µ –ª–æ–º–∞–µ—Ç—Å—è, —Ä–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É.
‚Ä¢	–ì–∏–±–∫–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: pipeline –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –ª—é–±—ã–º–∏ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞–º–∏ (–ø–æ—á—Ç–∞, SFTP, —Å–µ—Ç–µ–≤—ã–µ –ø–∞–ø–∫–∏), –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º –∏ –∫–ª–∏–µ–Ω—Ç–∞–º.
 
–ü—Ä–∏–º–µ—Ä –ø–æ–ª–Ω–æ–≥–æ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ (BPMN/–±–ª–æ–∫-—Å—Ö–µ–º–∞)
1.	–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—á—Ç—ã –∏ –≤–ª–æ–∂–µ–Ω–∏–π (mail_parser)
2.	–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤ (.zip/.rar)
3.	–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞/–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ Excel-—Ñ–∞–π–ª–æ–≤
4.	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ä–µ–¥—ã (–ª–æ–≥–∏, –æ–∫—Ä—É–∂–µ–Ω–∏–µ)
5.	–ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–æ–≤
6.	–û–±—Ö–æ–¥ –∞—Ä—Ö–∏–≤–æ–≤/–ø–∞–ø–æ–∫, —Å–±–æ—Ä —Ñ–∞–π–ª–æ–≤
7.	–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤
8.	–ü–∞—Ä—Å–∏–Ω–≥ —Ñ–∞–π–ª–æ–≤, –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
9.	–û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (OCR/AI)
10.	AI-–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∏ enrichment
11.	–≠–∫—Å–ø–æ—Ä—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ JSON
12.	–ê–≥—Ä–µ–≥–∞—Ü–∏—è JSON-–≤—ã–≥—Ä—É–∑–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥
13.	–ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP
14.	–û–∂–∏–¥–∞–Ω–∏–µ ack-–∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ –æ—Ç 1–°
15.	Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
16.	–§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è (–∑–∞–∫—Ä—ã—Ç–∏–µ –∂—É—Ä–Ω–∞–ª–æ–≤)
17.	–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á—ë—Ç–∞/–∞—É–¥–∏—Ç–∞ (reporting/cli)
 




11.2. –ü–æ—Ä—è–¥–æ–∫ –∑–∞–ø—É—Å–∫–∞ –∏ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –º–æ–¥—É–ª—è–º–∏ (—Ü–µ–ø–æ—á–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏)
 

–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤—ã–∑–æ–≤–∞ –∏ —Ä–æ–ª–∏ –º–æ–¥—É–ª–µ–π



–ú–æ–¥—É–ª—å 0. mail_parser.py ‚Äî –ü—Ä–∏—ë–º –∏ —Ä–∞–∑–±–æ—Ä –ø–æ—á—Ç—ã
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: mail_parser.py
‚Ä¢	–†–æ–ª—å: –ü—Ä–∏—ë–º –≤—Ö–æ–¥—è—â–∏—Ö –ø–∏—Å–µ–º –ø–æ IMAP, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é/—Ç–µ–º–µ, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π, —Å–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–∞–±–æ—á–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π.
‚Ä¢	–í—Ö–æ–¥:
o	–ö–æ–Ω—Ñ–∏–≥ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ—á—Ç—ã (configs['mail_settings.yaml'])
o	–°–ø–∏—Å–æ–∫ –¥–æ–ø—É—Å—Ç–∏–º—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π (–∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–í–ª–æ–∂–µ–Ω–∏—è —Ä–∞–∑–ª–æ–∂–µ–Ω—ã –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø–∞–ø–∫–∞–º –≤ incoming/
o	–õ–æ–≥ —Å–æ–±—ã—Ç–∏–π –∏ –æ—à–∏–±–æ–∫ (—á–µ—Ä–µ–∑ state_manager.py)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ —ç—Ç–∞–ø—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è (log_event)
o	–û—à–∏–±–∫–∏ –ø–∏—à—É—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ª–æ–≥ (log_error)
o	–ü—Ä–∏ –æ—à–∏–±–∫–µ ‚Äî –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥, –¥–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–∏—Å—å–º–∞ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import imaplib
import email
import os
import datetime
import logging
from email.header import decode_header
from state_manager import log_event, log_error

# 1Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –±–µ—Ä—ë–º –∏–∑ configs (–ø—Ä–∏–º–µ—Ä)
def load_mail_settings(configs):
    return configs.get('mail_settings.yaml', {})

# 2Ô∏è‚É£ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫
def decode_str(s):
    if not s:
        return ''
    parts = decode_header(s)
    result = ''
    for text, encoding in parts:
        if isinstance(text, bytes):
            result += text.decode(encoding or 'utf-8', errors='ignore')
        else:
            result += text
    return result

# 3Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—á—Ç—ã
def process_incoming_mail(configs):
    """
    1. –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —è—â–∏–∫—É (IMAP).
    2. –ò—â–µ—Ç –Ω–æ–≤—ã–µ –ø–∏—Å—å–º–∞ –ø–æ —Ñ–∏–ª—å—Ç—Ä–∞–º (–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å, —Ç–µ–º–∞, –¥–∞—Ç–∞).
    3. –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤–ª–æ–∂–µ–Ω–∏—è –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é/—Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É.
    4. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–ª–æ–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞—ë—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É.
    5. –õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è –∏ –æ—à–∏–±–∫–∏.
    """
    mail_cfg = load_mail_settings(configs)
    imap_host = mail_cfg.get('host')
    imap_user = mail_cfg.get('username')
    imap_pass = mail_cfg.get('password')
    mailbox = mail_cfg.get('mailbox', 'INBOX')
    save_dir = mail_cfg.get('save_dir', 'incoming')
    allowed_exts = set(mail_cfg.get('allowed_extensions', ['.xlsx', '.xls', '.zip', '.rar', '.pdf']))
    sender_filter = mail_cfg.get('sender_filter', [])
    subject_filter = mail_cfg.get('subject_filter', [])

    os.makedirs(save_dir, exist_ok=True)

    try:
        # 3.1 –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ IMAP
        imap = imaplib.IMAP4_SSL(imap_host)
        imap.login(imap_user, imap_pass)
        imap.select(mailbox)
    except Exception as ex:
        log_error(stage="mail_parser", error_msg=f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ IMAP: {ex}")
        return

    try:
        # 3.2 –ü–æ–∏—Å–∫ –ø–∏—Å–µ–º (—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ/–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ)
        status, messages = imap.search(None, 'UNSEEN')
        if status != 'OK':
            log_error(stage="mail_parser", error_msg="–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–∏—Å–µ–º")
            return

        for num in messages[0].split():
            # 3.3 –ü–æ–ª—É—á–∞–µ–º –ø–∏—Å—å–º–æ
            res, msg_data = imap.fetch(num, '(RFC822)')
            if res != 'OK':
                continue
            msg = email.message_from_bytes(msg_data[0][1])
            from_addr = decode_str(msg.get('From', ''))
            subject = decode_str(msg.get('Subject', ''))

            # 3.4 –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é –∏ —Ç–µ–º–µ (–ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
            if sender_filter and not any(s in from_addr for s in sender_filter):
                continue
            if subject_filter and not any(s in subject for s in subject_filter):
                continue

            # 3.5 –§–æ—Ä–º–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –ø–∏—Å—å–º–∞ (–ø–æ –¥–∞—Ç–µ/—Ç–µ–º–µ)
            date_str = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
            safe_subject = ''.join(c for c in subject if c.isalnum() or c in (' ', '-', '_'))[:60]
            msg_dir = os.path.join(save_dir, f"{date_str}_{safe_subject}".strip())
            os.makedirs(msg_dir, exist_ok=True)

            # 3.6 –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
            attach_count = 0
            for part in msg.walk():
                if part.get_content_maintype() == 'multipart':
                    continue
                if part.get('Content-Disposition') is None:
                    continue
                filename = decode_str(part.get_filename())
                if not filename:
                    continue
                ext = os.path.splitext(filename)[-1].lower()
                if ext not in allowed_exts:
                    continue
                filepath = os.path.join(msg_dir, filename)
                with open(filepath, 'wb') as f:
                    f.write(part.get_payload(decode=True))
                attach_count += 1

            # 3.7 –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å—å–º–∞
            log_event(stage="mail_parser", status="ok", from_addr=from_addr, subject=subject, msg_dir=msg_dir, attachments=attach_count)

    except Exception as ex:
        log_error(stage="mail_parser", error_msg=f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º: {ex}")
    finally:
        imap.logout()

# 4Ô∏è‚É£ CLI-—Ç–µ—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if __name__ == "__main__":
    from config import load_configs
    configs = load_configs()
    process_incoming_mail(configs) 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑: main.py (–ø–µ—Ä–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–í—Å–µ —Å–≤–µ–∂–∏–µ –ø–∏—Å—å–º–∞ –∏ –≤–ª–æ–∂–µ–Ω–∏—è –∏–∑ –Ω–∏—Ö —Ä–∞–∑–ª–æ–∂–µ–Ω—ã –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –ø–∞–ø–∫–∞–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ incoming/
o	–í –ª–æ–≥–∞—Ö –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, —Å—Ç–∞—Ç—É—Å, –æ—à–∏–±–∫–∏
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: archive_handler.py (—Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ø–∞–ø–∫–∞–º–∏ –∏–∑ incoming/)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –ü—É—Ç–∏ –∫ –Ω–æ–≤—ã–º –ø–∞–ø–∫–∞–º —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏
 
–ú–æ–¥—É–ª—å 1. archive_handler.py ‚Äî –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–ª–æ–∂–µ–Ω–∏–π
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: archive_handler.py
‚Ä¢	–†–æ–ª—å: –ü–æ–∏—Å–∫ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (.zip, .rar), —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º, —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å—Ç—ã—Ö —Ä–∞–±–æ—á–∏—Ö –ø–∞–ø–æ–∫ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏.
‚Ä¢	–í—Ö–æ–¥:
o	–ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏ (incoming/)
o	–°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π (–∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–†–∞–±–æ—á–∏–µ –ø–∞–ø–∫–∏ —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏, –≥–æ—Ç–æ–≤—ã–µ –∫ –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ
o	–õ–æ–≥–∏ —Å–æ–±—ã—Ç–∏–π, –æ—à–∏–±–æ–∫, —É–¥–∞–ª–µ–Ω–∏—è –ª–∏—à–Ω–∏—Ö —Ñ–∞–π–ª–æ–≤
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è (—Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞, –æ—á–∏—Å—Ç–∫–∞, –æ—à–∏–±–∫–∏) –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ state_manager
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import os
import shutil
import zipfile
import rarfile
import logging
from state_manager import log_event, log_error

# 1Ô∏è‚É£ –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ‚Äî –∞—Ä—Ö–∏–≤ –∏–ª–∏ –Ω–µ—Ç
def is_archive(file_path):
    ext = os.path.splitext(file_path)[-1].lower()
    return ext in ['.zip', '.rar']

# 2Ô∏è‚É£ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
def extract_archive(archive_path, dest_dir):
    """
    –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏–≤ (ZIP/RAR) –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤.
    """
    extracted_files = []
    try:
        if archive_path.lower().endswith('.zip'):
            with zipfile.ZipFile(archive_path, 'r') as zf:
                zf.extractall(dest_dir)
                extracted_files = [os.path.join(dest_dir, name) for name in zf.namelist()]
        elif archive_path.lower().endswith('.rar'):
            with rarfile.RarFile(archive_path, 'r') as rf:
                rf.extractall(dest_dir)
                extracted_files = [os.path.join(dest_dir, name) for name in rf.namelist()]
        log_event(stage="archive_handler", status="ok", archive=archive_path, dest=dest_dir, count=len(extracted_files))
    except Exception as ex:
        log_error(stage="archive_handler", archive=archive_path, error_msg=str(ex))
    return extracted_files

# 3Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫
def cleanup_folder(folder, allowed_exts):
    """
    –£–¥–∞–ª—è–µ—Ç –∏–∑ –ø–∞–ø–∫–∏ –≤—Å–µ —Ñ–∞–π–ª—ã, –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–ø–∏—Å–∫—É —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π.
    """
    removed = 0
    for root, dirs, files in os.walk(folder):
        for file in files:
            ext = os.path.splitext(file)[-1].lower()
            if ext not in allowed_exts:
                try:
                    os.remove(os.path.join(root, file))
                    removed += 1
                except Exception:
                    continue
    log_event(stage="archive_handler", status="cleanup", folder=folder, removed=removed)
    return removed

# 4Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –∞—Ä—Ö–∏–≤–æ–≤
def process_archives(incoming_dir, work_dir, allowed_exts=None):
    """
    –ù–∞—Ö–æ–¥–∏—Ç –∞—Ä—Ö–∏–≤—ã –≤ –ø–∞–ø–∫–µ incoming_dir, —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∏—Ö –≤ work_dir,
    —á–∏—Å—Ç–∏—Ç –Ω–µ—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤.
    """
    if allowed_exts is None:
        allowed_exts = ['.xlsx', '.xls', '.pdf', '.docx', '.jpg', '.jpeg', '.png']
    new_files = []
    for root, dirs, files in os.walk(incoming_dir):
        for file in files:
            file_path = os.path.join(root, file)
            if is_archive(file_path):
                # –°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–∞–±–æ—á—É—é –ø–∞–ø–∫—É –¥–ª—è –∞—Ä—Ö–∏–≤–∞
                extract_dir = os.path.join(work_dir, os.path.splitext(file)[0])
                os.makedirs(extract_dir, exist_ok=True)
                extracted = extract_archive(file_path, extract_dir)
                cleanup_folder(extract_dir, allowed_exts)
                new_files.extend(extracted)
    return new_files

# 5Ô∏è‚É£ CLI-—Ç–µ—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if __name__ == "__main__":
    INCOMING = "incoming"
    WORK = "data/in"
    files = process_archives(INCOMING, WORK)
    print(f"–†–∞—Å–ø–∞–∫–æ–≤–∞–Ω–æ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑: main.py –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è mail_parser.py
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ê—Ä—Ö–∏–≤—ã –≤–æ –≤—Å–µ—Ö –ø–∞–ø–∫–∞—Ö –∏–∑ incoming/ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω—ã, –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã, —Ä–∞–±–æ—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã
o	–í—Å–µ —Å–æ–±—ã—Ç–∏—è –∏ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: excel_processor.py, filewalker.py –∏–ª–∏ parser.py (–ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –°–ø–∏—Å–æ–∫ —Ä–∞–±–æ—á–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å –≤–∞–ª–∏–¥–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
 

–û—Ñ–æ—Ä–º–ª—è—é –æ–±–∞ –º–æ–¥—É–ª—è ‚Äî excel_processor.py –∏ data_enrichment.py ‚Äî —Å—Ç—Ä–æ–≥–æ –ø–æ —à–∞–±–ª–æ–Ω—É (—à–∞–ø–∫–∞, —Ñ—É–Ω–∫—Ü–∏—è —Å –¥–æ–∫—Å—Ç—Ä–∏–Ω–≥–æ–º, —Å—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞, –ø–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è).
–¢–∞–∫–æ–π —Å—Ç–∏–ª—å –æ–ø–∏—Å–∞–Ω–∏—è –¥–∞—Å—Ç –µ–¥–∏–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–ª—è –≤—Å–µ–π —Ü–µ–ø–æ—á–∫–∏.
 
–ú–æ–¥—É–ª—å 2. excel_processor.py ‚Äî –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è Excel-—Ä–µ–µ—Å—Ç—Ä–æ–≤
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: excel_processor.py
‚Ä¢	–†–æ–ª—å:
o	–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö Excel-—Ñ–∞–π–ª–æ–≤ –≤ —Ä–∞–±–æ—á–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
o	–°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã: –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö, –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
o	–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —ç—Ç–∞–ø–æ–≤ (enrichment, –≤–∞–ª–∏–¥–∞—Ü–∏—è, —ç–∫—Å–ø–æ—Ä—Ç).
‚Ä¢	–í—Ö–æ–¥:
o	–ü—É—Ç—å –∫ —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–µ (work_dir)
o	–°–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–≤—ã—Ö –ø–æ–ª–µ–π (template_fields)
o	–ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (default_values)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ Excel-—Ñ–∞–π–ª—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º processed_ (–≤ —Ç–µ—Ö –∂–µ –ø–∞–ø–∫–∞—Ö)
o	–õ–æ–≥ —Å–æ–±—ã—Ç–∏–π –∏ –æ—à–∏–±–æ–∫ (—á–µ—Ä–µ–∑ state_manager.py)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ —ç—Ç–∞–ø—ã –ª–æ–≥–∏—Ä—É—é—Ç—Å—è (log_event)
o	–û—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ (log_error)
o	–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ ‚Äî —Ñ–∞–π–ª –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è, –æ—à–∏–±–∫–∞ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import pandas as pd
import openpyxl
import logging
import yaml
from openpyxl.styles import Alignment

logging.basicConfig(filename='logs/excel_processor.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# –ó–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–∞–ª–æ–Ω–æ–≤ –∏–∑ YAML
def load_yaml_list(filepath, key):
    with open(filepath, 'r', encoding='utf-8') as f:
        data = yaml.safe_load(f)
        return data[key]

INPUT_FIELDS = load_yaml_list('config/input_fields.yaml', 'input_fields')
REQUIRED_FIELDS = load_yaml_list('config/required_fields.yaml', 'required_fields')

def process_contract_folder(folder_path):
    contract_number = os.path.basename(folder_path)

    # –ü–æ–∏—Å–∫ Excel-—Ñ–∞–π–ª–∞
    excel_files = [f for f in os.listdir(folder_path) if f.lower().endswith('.xlsx')]
    if not excel_files:
        logging.error(f"{contract_number}: Excel-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return False

    excel_path = os.path.join(folder_path, excel_files[0])
    original_excel_path = os.path.join(folder_path, f"{contract_number}_original.xlsx")

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –¥–ª—è –∞—É–¥–∏—Ç–∞
    if not os.path.exists(original_excel_path):
        try:
            import shutil
            shutil.copy2(excel_path, original_excel_path)
        except Exception as e:
            logging.error(f"{contract_number}: –û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞: {e}")

    new_excel_path = os.path.join(folder_path, f"{contract_number}.xlsx")
    if excel_path != new_excel_path:
        os.rename(excel_path, new_excel_path)
        logging.info(f"{contract_number}: Excel –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω –≤ {contract_number}.xlsx")

    # –ß—Ç–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    df = pd.read_excel(new_excel_path)
    input_columns_found = list(df.columns)
    logging.info(f"{contract_number}: –ò—Å—Ö–æ–¥–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {input_columns_found}")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å—Ö–æ–¥–Ω—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
    missing_in_input = [col for col in INPUT_FIELDS if col not in input_columns_found]
    if missing_in_input:
        logging.warning(f"{contract_number}: –í–ù–ò–ú–ê–ù–ò–ï! –í –∏—Å—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Å—Ç–æ–ª–±—Ü—ã: {missing_in_input}")
    else:
        logging.info(f"{contract_number}: –í—Å–µ –æ–∂–∏–¥–∞–µ–º—ã–µ –≤—Ö–æ–¥–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∏—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã
    for col in REQUIRED_FIELDS:
        if col not in df.columns:
            df[col] = ""
            logging.info(f"{contract_number}: –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü '{col}'")

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    result_columns = list(df.columns)
    missing_in_result = [col for col in REQUIRED_FIELDS if col not in result_columns]
    if missing_in_result:
        logging.error(f"{contract_number}: –ü–æ—Å–ª–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏–∏ –ù–ï –•–í–ê–¢–ê–ï–¢ —Å—Ç–æ–ª–±—Ü–æ–≤: {missing_in_result}")
    else:
        logging.info(f"{contract_number}: –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤–∞–ª–∏–¥–Ω–∞.")

    # –£–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
    df = df[REQUIRED_FIELDS]

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º
    temp_path = new_excel_path.replace(".xlsx", "_temp.xlsx")
    df.to_excel(temp_path, index=False)

    wb = openpyxl.load_workbook(temp_path)
    ws = wb.active
    for col in ws.columns:
        max_len = max(len(str(cell.value)) if cell.value else 0 for cell in col)
        col_letter = col[0].column_letter
        ws.column_dimensions[col_letter].width = max(10, max_len + 2)
        for cell in col:
            cell.alignment = Alignment(wrap_text=True, horizontal="left")
    wb.save(new_excel_path)
    os.remove(temp_path)

    # –õ–æ–≥ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    logging.info(f"{contract_number}: –ò—Ç–æ–≥–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã: {list(df.columns)}")
    return True
 

–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑: main.py (–ø–æ—Å–ª–µ archive_handler.py, –¥–æ enrichment/–≤–∞–ª–∏–¥–∞—Ü–∏–∏)
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–í—Å–µ Excel-—Ñ–∞–π–ª—ã –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –∫ –µ–¥–∏–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É, –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ enrichment/–≤–∞–ª–∏–¥–∞—Ü–∏–∏
o	–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–º–µ—é—Ç –ø—Ä–µ—Ñ–∏–∫—Å processed_, –ª–æ–≥–∏ –∑–∞–ø–∏—Å–∞–Ω—ã
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: data_enrichment.py (–∏–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è/—ç–∫—Å–ø–æ—Ä—Ç ‚Äî –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –ü—É—Ç–∏ –∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–º Excel-—Ñ–∞–π–ª–∞–º
 

–ú–æ–¥—É–ª—å 3. data_enrichment.py ‚Äî –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–µ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (OCR/AI)
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: data_enrichment.py
‚Ä¢	–†–æ–ª—å:
o	–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ PDF/JPG (OCR).
o	–ü–æ –∫–ª—é—á–µ–≤—ã–º –ø–æ–ª—è–º –∏—â–µ—Ç –∏ –¥–æ–ø–æ–ª–Ω—è–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö.
o	–°–æ—Ö—Ä–∞–Ω—è–µ—Ç enriched-–≤–µ—Ä—Å–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏ —ç–∫—Å–ø–æ—Ä—Ç–∞.
‚Ä¢	–í—Ö–æ–¥:
o	–†–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏ (work_dir)
o	–ù–∞–±–æ—Ä –ø—Ä–∞–≤–∏–ª (regex) –¥–ª—è –æ–±–æ–≥–∞—â–µ–Ω–∏—è (rules)
‚Ä¢	–í—ã—Ö–æ–¥:
o	enriched-–≤–µ—Ä—Å–∏–∏ Excel-—Ñ–∞–π–ª–æ–≤ (enriched_*.xlsx)
o	–õ–æ–≥ —Å–æ–±—ã—Ç–∏–π –∏ –æ—à–∏–±–æ–∫ (—á–µ—Ä–µ–∑ state_manager.py)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ enrichment-–æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import re
import pandas as pd
import pdfplumber
import pytesseract
from PIL import Image
import logging
import yaml

logging.basicConfig(filename='logs/data_enrichment.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å –ø–æ–ª—è–º–∏ –∏ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º–∏
with open('config/enrichment_fields.yaml', 'r', encoding='utf-8') as f:
    ENRICHMENT_FIELDS = yaml.safe_load(f)['enrichment_fields']

def extract_text_from_file(filepath):
    ext = filepath.lower().split('.')[-1]
    try:
        if ext == 'pdf':
            with pdfplumber.open(filepath) as pdf:
                return '\n'.join([page.extract_text() or "" for page in pdf.pages])
        elif ext in ('jpg', 'jpeg', 'png'):
            return pytesseract.image_to_string(Image.open(filepath), lang='rus+eng')
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ {filepath}: {e}")
    return ""

def extract_field(text, pattern):
    match = re.search(pattern, text)
    return match.group(1).strip() if match else ""

def enrich_excel_from_files(folder_path, excel_filename=""):
    contract_number = os.path.basename(folder_path)
    excel_path = os.path.join(folder_path, excel_filename or f"{contract_number}.xlsx")
    if not os.path.exists(excel_path):
        logging.error(f"{contract_number}: Excel-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.")
        return False

    df = pd.read_excel(excel_path)
    changes = []

    # 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∞–π–ª—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (–≤—Å–µ PDF/JPG/PNG)
    files = [f for f in os.listdir(folder_path) if f.lower().endswith(('.pdf', '.jpg', '.jpeg', '.png'))]

    for i, row in df.iterrows():
        for field, pattern in ENRICHMENT_FIELDS.items():
            value = str(row.get(field, "")).strip()
            if value:
                continue  # –£–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ
            found = False
            for filename in files:
                text = extract_text_from_file(os.path.join(folder_path, filename))
                if not text:
                    continue
                extracted = extract_field(text, pattern)
                if extracted:
                    df.at[i, field] = extracted
                    logging.info(f"{contract_number}: [{field}] –Ω–∞–π–¥–µ–Ω–æ: {extracted} –∏–∑ {filename}")
                    changes.append((i + 2, field, extracted, filename))
                    found = True
                    break
            if not found:
                logging.warning(f"{contract_number}: [{field}] –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Å—Ç—Ä–æ–∫–∏ {i+2}")

    df.to_excel(excel_path, index=False)
    logging.info(f"{contract_number}: enrichment –∑–∞–≤–µ—Ä—à—ë–Ω. –ò–∑–º–µ–Ω–µ–Ω–∏—è: {changes}")
    return True
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑: main.py (–∏–ª–∏ –ø–æ—Å–ª–µ excel_processor.py)
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–í—Å–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ–∞–π–ª—ã (Excel) –æ–±–æ–≥–∞—â–µ–Ω—ã –ø–æ OCR/AI-–ø—Ä–∞–≤–∏–ª–∞–º, enriched-–≤–µ—Ä—Å–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º enriched_
o	–í –ª–æ–≥–∞—Ö –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç enrichment –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª—É
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: config.py 
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: enriched-—Ñ–∞–π–ª—ã (–ø—É—Ç–∏ –∫ –Ω–∏–º) –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
 

 
–ú–æ–¥—É–ª—å 4. config.py ‚Äî –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: config.py
‚Ä¢	–†–æ–ª—å:
o	–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏, —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ (CSV, YAML, JSON).
o	–ì–æ—Ç–æ–≤–∏—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö —ç—Ç–∞–ø–æ–≤ –ø–∞–π–ø–ª–∞–π–Ω–∞.
‚Ä¢	–í—Ö–æ–¥:
o	–ü—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –∫–æ–Ω—Ñ–∏–≥–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é configs/)
‚Ä¢	–í—ã—Ö–æ–¥:
o	configs ‚Äî dict, –≥–¥–µ –∫–ª—é—á ‚Äî –∏–º—è —Ñ–∞–π–ª–∞, –∑–Ω–∞—á–µ–Ω–∏–µ ‚Äî DataFrame, dict –∏–ª–∏ –æ–±—ä–µ–∫—Ç, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–û—à–∏–±–∫–∏ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥–æ–≤ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ logging.error, –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏ –æ—Ç–º–µ—á–∞—é—Ç—Å—è –∫–∞–∫ None
o	–í—Å–µ —Å–æ–±—ã—Ç–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ –ª–æ–≥–∞—Ö
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import os
import pandas as pd
import yaml
import json
import logging

CONFIG_LIST_CSV = [
    'formats.csv',
    'adresat.csv',
    'responsible.csv',
    'events.csv',
    'creditors_to_process.csv'
]

CONFIG_LIST_YAML = [
    'input_fields.yaml',
    'required_fields.yaml',
    'enrichment_fields.yaml',
    'validators.yaml',
    'ftp_settings.yaml'
]

CONFIG_LIST_JSON = [
    'paths.json'
]

def load_configs(config_dir='configs'):
    configs = {}
    # –ó–∞–≥—Ä—É–∑–∫–∞ CSV-—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
    for fname in CONFIG_LIST_CSV:
        path = os.path.join(config_dir, fname)
        if os.path.exists(path):
            try:
                configs[fname] = pd.read_csv(path, encoding='utf-8')
            except Exception as ex:
                logging.error(f'–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {fname}: {ex}')
                configs[fname] = None
        else:
            configs[fname] = None

    # –ó–∞–≥—Ä—É–∑–∫–∞ YAML-–∫–æ–Ω—Ñ–∏–≥–æ–≤
    for fname in CONFIG_LIST_YAML:
        path = os.path.join(config_dir, fname)
        if os.path.exists(path):
            try:
                with open(path, encoding='utf-8') as f:
                    configs[fname] = yaml.safe_load(f)
            except Exception as ex:
                logging.error(f'–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {fname}: {ex}')
                configs[fname] = None
        else:
            configs[fname] = None

    # –ó–∞–≥—Ä—É–∑–∫–∞ JSON-–∫–æ–Ω—Ñ–∏–≥–æ–≤
    for fname in CONFIG_LIST_JSON:
        path = os.path.join(config_dir, fname)
        if os.path.exists(path):
            try:
                with open(path, encoding='utf-8') as f:
                    configs[fname] = json.load(f)
            except Exception as ex:
                logging.error(f'–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è {fname}: {ex}')
                configs[fname] = None
        else:
            configs[fname] = None

    return configs
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑: main.py (–ø–µ—Ä–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è configs –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –≤–æ –≤—Å–µ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ –º–æ–¥—É–ª–∏ (–≤–∞–ª–∏–¥–∞—Ü–∏—è, —Å–±–æ—Ä —Ñ–∞–π–ª–æ–≤ –∏ —Ç.–¥.)
o	–í –ª–æ–≥–∞—Ö –æ—Ç—Ä–∞–∂–µ–Ω—ã –≤—Å–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ —É—Å–ø–µ—à–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: validator.py
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: configs: dict
 

–ú–æ–¥—É–ª—å 5. validator.py ‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏ —Ñ–∞–π–ª–æ–≤
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: validator.py
‚Ä¢	–†–æ–ª—å:
o	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤, Excel –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ —à–∞–±–ª–æ–Ω–∞–º.
o	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è, —Ñ–æ—Ä–º–∞—Ç—ã, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥—É–±–ª–µ–π, –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏–π.
‚Ä¢	–í—Ö–æ–¥:
o	configs (dict ‚Äî —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã config.py)
o	–ü—É—Ç—å –∫ Excel-—Ñ–∞–π–ª—É (excel_path), –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ creditor_id –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Ö–µ–º
‚Ä¢	–í—ã—Ö–æ–¥:
o	True/False (–≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å)
o	–õ–æ–≥–∏ —Å –æ—à–∏–±–∫–∞–º–∏ (logs/validation_log.json)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ –æ—à–∏–±–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è —á–µ—Ä–µ–∑ logging –∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π json-–ª–æ–≥
o	–í —Å–ª—É—á–∞–µ –æ—à–∏–±–æ–∫ ‚Äî –∞–≤–∞—Ä–∏–π–Ω—ã–π –≤—ã—Ö–æ–¥, –¥–∞–ª—å–Ω–µ–π—à–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import os
import pandas as pd
import re
import yaml
import logging

def load_validators(configs):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ö–µ–º—É –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤.
    –í—Ö–æ–¥: configs (dict)
    –í—ã—Ö–æ–¥: dict (validators.yaml)
    """
    return configs.get('validators.yaml', {})

def load_field_schema(configs, creditor_id=None):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ö–µ–º—É –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞.
    –í—Ö–æ–¥: configs (dict), creditor_id (str, –æ–ø—Ü.)
    –í—ã—Ö–æ–¥: (required_fields, field_validations)
    """
    if creditor_id:
        fname = f'excel_fields_{creditor_id}.yaml'
        schema = configs.get(fname)
        if schema:
            return schema['required_fields'], schema.get('field_validations', {})
    schema = configs.get('required_fields.yaml', {})
    return schema.get('required_fields', []), schema.get('field_validations', {})

def validate_excel(excel_path, configs, creditor_id=None):
    """
    –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç Excel-—Ñ–∞–π–ª –ø–æ —Å—Ö–µ–º–∞–º.
    –í—Ö–æ–¥: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É, configs, creditor_id (–æ–ø—Ü.)
    –í—ã—Ö–æ–¥: True/False; –æ—à–∏–±–∫–∏ –ø–∏—à—É—Ç—Å—è –≤ –ª–æ–≥
    """
    required_fields, field_validations = load_field_schema(configs, creditor_id)
    if not os.path.exists(excel_path):
        logging.error(f"Excel-—Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {excel_path}")
        return False

    df = pd.read_excel(excel_path)
    errors = []

    actual_fields = list(df.columns)
    missing_fields = [f for f in required_fields if f not in actual_fields]
    if missing_fields:
        errors.append(f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ç–æ–ª–±—Ü–æ–≤: {missing_fields}")

    unique_numbers = set()
    for i, row in df.iterrows():
        row_errors = []
        for field in required_fields:
            value = str(row.get(field, "")).strip()
            if value == "":
                row_errors.append(f"[{field}] ‚Äî –ø—É—Å—Ç–æ–µ")
                continue
            if field in field_validations:
                pattern = field_validations[field]
                if not re.match(pattern, value):
                    row_errors.append(f"[{field}] ‚Äî –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {value}")
        contract_no = str(row.get("‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞ –∑–∞–π–º–∞", "")).strip()
        if contract_no in unique_numbers:
            row_errors.append(f"–î—É–±–ª–∏–∫–∞—Ç ‚Ññ –¥–æ–≥–æ–≤–æ—Ä–∞: {contract_no}")
        else:
            unique_numbers.add(contract_no)
        if row_errors:
            error_text = f"–°—Ç—Ä–æ–∫–∞ {i+2}: " + "; ".join(row_errors)
            errors.append(error_text)
            logging.warning(error_text)
    if errors:
        log_path = os.path.join('logs', 'validation_log.json')
        with open(log_path, 'a', encoding='utf-8') as f:
            for err in errors:
                f.write(err + "\n")
        return False
    else:
        logging.info(f"–í–∞–ª–∏–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞: {excel_path}")
        return True
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	main.py (–ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤)
o	–ò–ª–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ Excel-—Ñ–∞–π–ª–∞ (batch-—Ä–µ–∂–∏–º)
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Ü–µ—Å—Å –∏–¥—ë—Ç –¥–∞–ª—å—à–µ, —Ñ–∞–π–ª—ã –≤–∞–ª–∏–¥–Ω—ã
o	–ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö: –≤—Å–µ –æ—à–∏–±–∫–∏ –∑–∞–ø–∏—Å–∞–Ω—ã, –ø–∞–π–ø–ª–∞–π–Ω –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: state_manager.py /  —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø (–ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: True/False (—Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏), —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ (–≤ –ª–æ–≥–∞—Ö)
 

–í–æ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–≥–æ –ø–æ —à–∞–±–ª–æ–Ω—É ‚Äî state_manager.py –∏ filewalker.py:
 
–ú–æ–¥—É–ª—å 6. state_manager.py ‚Äî –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–æ–≤
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: state_manager.py
‚Ä¢	–†–æ–ª—å:
o	–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–µ–¥–µ–Ω–∏–µ –≤—Å–µ—Ö –∂—É—Ä–Ω–∞–ª–æ–≤ (process, errors, –¥—É–±–ª–∏, not_processed).
o	–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–ª–∞–≥–æ–≤ (start, stop, pause), —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –∏ –æ—à–∏–±–æ–∫.
o	–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã (–Ω–∞–ª–∏—á–∏–µ —Ñ–ª–∞–≥–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, pause.flag).
‚Ä¢	–í—Ö–æ–¥:
o	–õ—é–±—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å–æ–±—ã—Ç–∏—è/–æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å (—ç—Ç–∞–ø, —Å—Ç–∞—Ç—É—Å, —Ñ–∞–π–ª, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏ —Ç.–¥.)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–ó–∞–ø–∏—Å—å –≤ –Ω—É–∂–Ω—ã–π JSON-–∂—É—Ä–Ω–∞–ª –≤ –ø–∞–ø–∫–µ logs/
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ –∑–∞–ø–∏—Å–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç –∞—Ç–æ–º–∞—Ä–Ω–æ (–ø–æ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª)
o	–ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö ‚Äî –∑–∞–ø–∏—Å—å –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ—Ç —Ä–∞–±–æ—Ç—É –æ—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–∏
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import json
from datetime import datetime

LOG_DIR = "logs"
os.makedirs(LOG_DIR, exist_ok=True)

# ===== –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞ =====
def _write_log(filename, entry):
    path = os.path.join(LOG_DIR, filename)
    with open(path, 'a', encoding='utf-8') as f:
        f.write(json.dumps(entry, ensure_ascii=False) + "\n")

# ===== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π (—Å—Ç–∞—Ç—É—Å—ã, —ç—Ç–∞–ø—ã) =====
def log_event(**kwargs):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –ª—é–±–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞: —ç—Ç–∞–ø, —Å—Ç–∞—Ç—É—Å, –ø—É—Ç—å, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π.
    """
    entry = dict(datetime=str(datetime.now()), **kwargs)
    _write_log("process_log.json", entry)

# ===== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ (—á—Ç–µ–Ω–∏–µ, –ø–∞—Ä—Å–∏–Ω–≥, API, –≤–∞–ª–∏–¥–∞—Ü–∏—è) =====
def log_error(**kwargs):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –æ—à–∏–±–∫–∏ —Å –¥–µ—Ç–∞–ª—è–º–∏: —ç—Ç–∞–ø, –æ–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏, —Ñ–∞–π–ª –∏ –¥—Ä.
    """
    entry = dict(datetime=str(datetime.now()), **kwargs)
    _write_log("error_log.json", entry)

# ===== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥—É–±–ª–µ–π (–Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞, –¥–∞—Ç–∞, —Ñ–∞–π–ª) =====
def log_duplicate(file, contract_no, date):
    """
    –§–∏–∫—Å–∏—Ä—É–µ—Ç –∫–∞–∂–¥—ã–π —Å–ª—É—á–∞–π –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è (–ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–≥–æ–≤–æ—Ä–∞ –∏ –¥–∞—Ç–µ)
    """
    entry = {
        "datetime": str(datetime.now()),
        "file": file,
        "contract_no": contract_no,
        "date": date,
        "event": "duplicate"
    }
    _write_log("duplicates_log.json", entry)

# ===== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã—Ö/–Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ =====
def log_not_processed(file, reason):
    """
    –§–∏–∫—Å–∏—Ä—É–µ—Ç –ª—é–±—ã–µ –Ω–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–µ –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–∏—á–∏–Ω–æ–π
    """
    entry = {
        "datetime": str(datetime.now()),
        "file": file,
        "reason": reason,
        "event": "not_processed"
    }
    _write_log("not_processed.json", entry)

# ===== –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–ª–∞–≥–∞ –ø–∞—É–∑—ã =====
def check_pause_flag():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ pause.flag –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    """
    return os.path.exists(os.path.join(LOG_DIR, "pause.flag"))

# ===== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (—Å–æ–∑–¥–∞–Ω–∏–µ) –≤—Å–µ—Ö –∂—É—Ä–Ω–∞–ª–æ–≤ =====
def init_journals():
    """
    –°–æ–∑–¥–∞—ë—Ç –ø—É—Å—Ç—ã–µ –∂—É—Ä–Ω–∞–ª—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
    """
    for name in ["process_log.json", "error_log.json", "duplicates_log.json", "not_processed.json"]:
        path = os.path.join(LOG_DIR, name)
        if not os.path.exists(path):
            with open(path, 'w', encoding='utf-8') as f:
                pass

# ===== –ó–∞–≥–ª—É—à–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ =====
def close_journals():
    """
    –ó–∞–≥–ª—É—à–∫–∞: –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ (–∞—Ä—Ö–∏–≤, —ç–∫—Å–ø–æ—Ä—Ç)
    """
    pass
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	–í—Å–µ—Ö –º–æ–¥—É–ª–µ–π –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π, –æ—à–∏–±–æ–∫, –¥—É–±–ª–µ–π, —Å—Ç–∞—Ç—É—Å–æ–≤.
o	check_pause_flag() ‚Äî –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞.
o	init_journals() ‚Äî –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ main.py.
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ö–∞–∂–¥—ã–π —ç—Ç–∞–ø –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ process_log.json, –æ—à–∏–±–∫–∏ ‚Äî –≤ error_log.json, –¥—É–±–ª–∏ ‚Äî –≤ duplicates_log.json, –Ω–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–µ ‚Äî –≤ not_processed.json.
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: –õ–æ–≥–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞/–∞—É–¥–∏—Ç–∞ –ª—é–±—ã–º —ç—Ç–∞–ø–æ–º —Å–∏—Å—Ç–µ–º—ã.
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –ù–µ—Ç (—Å–æ–±—ã—Ç–∏—è –ø–∏—à—É—Ç—Å—è –≤ —Ñ–∞–π–ª, –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è ‚Äú–Ω–∞—Ä—É–∂—É‚Äù –≤ —Ñ—É–Ω–∫—Ü–∏—é).
 

–ú–æ–¥—É–ª—å 7. filewalker.py ‚Äî –°–±–æ—Ä –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: filewalker.py
‚Ä¢	–†–æ–ª—å:
o	–û–±—Ö–æ–¥–∏—Ç –≤—Å–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∫–∞—Ç–∞–ª–æ–≥–∏ (–∞—Ä—Ö–∏–≤—ã/—Ä–µ–µ—Å—Ç—Ä—ã/–ø–∞–ø–∫–∏) –ø–æ —Å–ø–∏—Å–∫—É –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤, –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.
o	–ò—Å–∫–ª—é—á–∞–µ—Ç —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∏ –æ—Ç–±—Ä–∞–∫–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.
‚Ä¢	–í—Ö–æ–¥:
o	–ö–æ–Ω—Ñ–∏–≥–∏ (dict, —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã config.py)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: [{creditor, file, ext}, ...]
o	–õ–æ–≥ —Å–æ–±—ã—Ç–∏–π (log_event)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–¢–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –∏ –Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ–ø–∞–¥–∞—é—Ç –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É
o	–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import json
import pandas as pd
from state_manager import log_event

# 1Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –∫—Ä–µ–¥–∏—Ç–æ—Ä–æ–≤ –∏ –ø—É—Ç–µ–π –¥–ª—è –æ–±—Ö–æ–¥–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤
def load_creditor_dirs(configs):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –¥–ª—è –æ–±—Ö–æ–¥–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –∫—Ä–µ–¥–∏—Ç–æ—Ä—É –∏–∑ configs['creditors_to_process.csv'].
    """
    creditor_dirs = []
    df = configs['creditors_to_process.csv']
    for idx, row in df.iterrows():
        if str(row.get('status', '')).strip().lower() == '–∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ':
            creditor_dirs.append({
                'creditor': row['creditor'],
                'path': row['link']
            })
    return creditor_dirs

# 2Ô∏è‚É£ –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–∞–Ω–µ–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
def load_processed_files(log_path='logs/process_log.json'):
    """
    –°—á–∏—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ process_log.json, —á—Ç–æ–±—ã –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É.
    """
    processed = set()
    if not os.path.exists(log_path):
        return processed
    with open(log_path, 'r', encoding='utf-8') as f:
        for line in f:
            try:
                entry = json.loads(line)
                if entry.get('status') == 'ok':
                    processed.add(entry.get('file'))
            except Exception:
                continue
    return processed

# 3Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
def collect_files(configs):
    """
    1. –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞ (load_creditor_dirs).
    2. –î–ª—è –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–∏ –∏—â–µ—Ç —Ñ–∞–π–ª—ã –Ω—É–∂–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ (—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ ‚Äî –∏–∑ configs['formats.csv']).
    3. –ò—Å–∫–ª—é—á–∞–µ—Ç —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã.
    4. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ dict —Å creditor, file, ext.
    """
    files_for_processing = []
    allowed_exts = set(configs['formats.csv']['extension'].str.lower())
    processed_files = load_processed_files()
    creditor_dirs = load_creditor_dirs(configs)

    # 3.1 –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º –∏ –∏—Ö –ø–∞–ø–∫–∞–º
    for cinfo in creditor_dirs:
        base_dir = cinfo['path']
        creditor = cinfo['creditor']
        # 3.2 –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏—â–µ–º —Ñ–∞–π–ª—ã –Ω—É–∂–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
        for root, dirs, files in os.walk(base_dir):
            for file in files:
                ext = os.path.splitext(file)[-1][1:].lower()
                full_path = os.path.join(root, file)
                # 3.3 –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –∏ –ø–æ —Å–ø–∏—Å–∫—É —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö
                if ext in allowed_exts and full_path not in processed_files:
                    files_for_processing.append({
                        'creditor': creditor,
                        'file': full_path,
                        'ext': ext
                    })

    # 4Ô∏è‚É£ –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    log_event(stage="filewalker", status="ok", count=len(files_for_processing))
    return files_for_processing

# 5Ô∏è‚É£ (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ‚Äî –µ—Å–ª–∏ –Ω—É–∂–µ–Ω CLI-–∑–∞–ø—É—Å–∫
if __name__ == '__main__':
    from config import load_configs
    configs = load_configs()
    files = collect_files(configs)
    print(f"–§–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(files)}")
    for item in files:
        print(item) 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	main.py –ø–æ—Å–ª–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫–æ–Ω—Ñ–∏–≥–æ–≤
o	CLI –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏/—Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–í–µ—Ä–Ω—ë—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ (–ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä–∞–º –∏ —Ñ–æ—Ä–º–∞—Ç—É)
o	–í –ª–æ–≥–∞—Ö –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: parser.py (–∏–ª–∏ –¥—Ä—É–≥–æ–π –º–æ–¥—É–ª—å –¥–ª—è –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ (dict: creditor, file, ext)
 




–ú–æ–¥—É–ª—å 8. parser.py ‚Äî –ü–∞—Ä—Å–∏–Ω–≥ –∏ –ø–µ—Ä–≤–∏—á–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: parser.py
‚Ä¢	–†–æ–ª—å:
o	–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª –∏–∑ —Å–ø–∏—Å–∫–∞, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è (–ø–æ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º, —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º, —à–∞–±–ª–æ–Ω–∞–º).
o	–ü—Ä–æ–≤–æ–¥–∏—Ç –ø–µ—Ä–≤–∏—á–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–æ–≤.
o	–§–∏–∫—Å–∏—Ä—É–µ—Ç –≤ –ª–æ–≥–µ –æ—à–∏–±–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∏, –∞ —Ç–∞–∫–∂–µ —É–¥–∞—á–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã.
‚Ä¢	–í—Ö–æ–¥:
o	–°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ([{creditor, file, ext}, ...]), –ø–æ–ª—É—á–µ–Ω –∏–∑ filewalker.py
o	–ö–æ–Ω—Ñ–∏–≥–∏ (configs, —Ä–µ–∑—É–ª—å—Ç–∞—Ç config.py)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–°–ø–∏—Å–æ–∫ dict-–æ–≤ —Å –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ (–ø–æ –∫–∞–∂–¥–æ–º—É —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É)
o	–õ–æ–≥ —Å–æ–±—ã—Ç–∏–π (—É—Å–ø–µ—Ö–∏, –æ—à–∏–±–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∏)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ —Å–æ–±—ã—Ç–∏—è —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –≤ log_event, –æ—à–∏–±–∫–∏ –∏ –ø—Ä–æ–ø—É—Å–∫–∏ ‚Äî –æ—Ç–¥–µ–ª—å–Ω–æ
o	–§–∞–π–ª—ã –±–µ–∑ —Ç–µ–∫—Å—Ç–∞/–∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π —Å—á–∏—Ç–∞—é—Ç—Å—è –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º–∏
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import re
import pandas as pd
import json
from state_manager import log_event

# 1Ô∏è‚É£ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ (PDF, DOCX, TXT –∏ –¥—Ä.)
def extract_text(file_path, ext):
    """
    –ü–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ø–æ—Å–æ–± –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞.
    –ú–æ–∂–Ω–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–¥ —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏ (PDF ‚Äî pdfplumber, DOCX ‚Äî python-docx –∏ —Ç.–¥.).
    """
    # 1.1 –î–ª—è TXT-—Ñ–∞–π–ª–æ–≤
    if ext == "txt":
        with open(file_path, "r", encoding="utf-8") as f:
            return f.read()
    # 1.2 –î–ª—è Excel ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º (–Ω–µ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º)
    if ext in ("xlsx", "xls"):
        return ""
    # 1.3 –î–ª—è PDF (–ø—Ä–∏–º–µ—Ä –∑–∞–≥–ª—É—à–∫–∏)
    if ext == "pdf":
        try:
            import pdfplumber
            with pdfplumber.open(file_path) as pdf:
                text = "\n".join([p.extract_text() or "" for p in pdf.pages])
            return text
        except Exception as ex:
            return ""
    # 1.4 –î–ª—è –¥—Ä—É–≥–∏—Ö ‚Äî –∑–∞–≥–ª—É—à–∫–∞
    return ""

# 2Ô∏è‚É£ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π –ø–æ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞–º (–ø—Ä–∏–º–µ—Ä)
def extract_fields_from_text(text, configs):
    """
    –ù–∞—Ö–æ–¥–∏—Ç –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤ –∏–∑ configs['validators.yaml'].
    –ú–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä—è—Ç—å.
    """
    result = {}
    # 2.1 –ü—Ä–∏–º–µ—Ä ‚Äî –ø–æ–∏—Å–∫ –¥–∞—Ç—ã –ø–æ —Ä–µ–≥—É–ª—è—Ä–∫–µ –∏–∑ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤
    date_regex = configs['validators.yaml']['date']['regex']
    date_match = re.search(date_regex, text)
    result['date'] = date_match.group(0) if date_match else ""

    # 2.2 –ü—Ä–∏–º–µ—Ä ‚Äî –ø–æ–∏—Å–∫ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞
    contract_regex = configs['validators.yaml']['number_ip']['regex']
    contract_match = re.search(contract_regex, text)
    result['number_ip'] = contract_match.group(0) if contract_match else ""

    # 2.3 –ü—Ä–∏–º–µ—Ä ‚Äî –ø–æ–∏—Å–∫ –§–ò–û (–Ω–∞—Å—Ç—Ä–æ–π —Å–≤–æ—é —Ä–µ–≥—É–ª—è—Ä–∫—É)
    fio_regex = configs['validators.yaml'].get('fio', {}).get('regex', r'[–ê-–Ø–Å][–∞-—è—ë]+\s[–ê-–Ø–Å][–∞-—è—ë]+\s[–ê-–Ø–Å][–∞-—è—ë]+')
    fio_match = re.search(fio_regex, text)
    result['fio'] = fio_match.group(0) if fio_match else ""

    # 2.4 –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–ª—è (–∞–¥—Ä–µ—Å, —Å—É–º–º—É –∏ —Ç.–ø.)

    return result

# 3Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
def parse_file(file_info, configs):
    """
    file_info: dict {'creditor', 'file', 'ext'}
    configs: –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏ –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç dict —Å –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –∏–ª–∏ None, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞/–Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö.
    """
    file_path = file_info['file']
    creditor = file_info['creditor']
    ext = file_info['ext']

    try:
        # 3.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞
        if not os.path.exists(file_path):
            log_event(stage="parser", status="error", file=file_path, error_msg="File not found")
            return None

        # 3.2 –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        text = extract_text(file_path, ext)
        if not text:
            log_event(stage="parser", status="error", file=file_path, error_msg="Empty text")
            return None

        # 3.3 –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª–µ–π –∏–∑ —Ç–µ–∫—Å—Ç–∞
        doc_data = extract_fields_from_text(text, configs)
        doc_data['file'] = file_path
        doc_data['creditor'] = creditor

        # 3.4 –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—Ö–∞
        log_event(stage="parser", status="ok", file=file_path, creditor=creditor, result="parsed")
        return doc_data

    except Exception as ex:
        log_event(stage="parser", status="error", file=file_path, error_msg=str(ex))
        return None

# 4Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ main.py)
def process_files(files_to_process, configs):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ dict'–æ–≤ (–∏–∑ filewalker.py), –ø–∞—Ä—Å–∏—Ç –∫–∞–∂–¥—ã–π —Ñ–∞–π–ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã—Ö dict'–æ–≤.
    """
    parsed = []
    for file_info in files_to_process:
        doc_data = parse_file(file_info, configs)
        if doc_data:
            parsed.append(doc_data)
    return parsed

# 5Ô∏è‚É£ CLI-–∑–∞–ø—É—Å–∫ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
if __name__ == "__main__":
    from config import load_configs
    configs = load_configs()
    # –ó–∞–≥–ª—É—à–∫–∞: —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    files_to_process = [{"creditor": "VALB", "file": "sample.txt", "ext": "txt"}]
    results = process_files(files_to_process, configs)
    print(results)

 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	main.py –ø–æ—Å–ª–µ filewalker.py (–ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤)
o	CLI –¥–ª—è —Ä—É—á–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–°–ø–∏—Å–æ–∫ dict-–æ–≤ —Å —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞/–∞–Ω–∞–ª–∏—Ç–∏–∫–∏
o	–û—à–∏–±–∫–∏ –∏ –ø—Ä–æ–ø—É—Å–∫–∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –≤ –ª–æ–≥–µ
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: exporter.py (–∏–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞/AI, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: —Å–ø–∏—Å–æ–∫ dict'–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞

 
–ú–æ–¥—É–ª—å 9. exporter.py ‚Äî –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö –≤—ã–≥—Ä—É–∑–æ–∫ (JSON)
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: exporter.py
‚Ä¢	–†–æ–ª—å:
o	–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–∞—Ä—Å–∏–Ω–≥–∞/enrichment, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ JSON-—Ñ–∞–π–ª—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É, –∫—Ä–µ–¥–∏—Ç–æ—Ä—É, —Ä–µ–µ—Å—Ç—Ä—É –∏–ª–∏ –æ–±—â–∏–π –ø—É–ª).
o	–£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏, –≤—ã—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å—ã, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω–æ—Ç—É –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π.
‚Ä¢	–í—Ö–æ–¥:
o	–°–ø–∏—Å–æ–∫ dict'–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ (–∏–∑ parser.py)
o	–ö–æ–Ω—Ñ–∏–≥–∏ (–¥–ª—è –ø—Ä–∞–≤–∏–ª –≤–∞–ª–∏–¥–∞—Ü–∏–∏/—Å—Ç–∞—Ç—É—Å–æ–≤)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–û–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ JSON-—Ñ–∞–π–ª–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –¥–æ–≥–æ–≤–æ—Ä –∏–ª–∏ –æ–±—â–∏–π)
o	–õ–æ–≥–∏ –ø–æ –≤—Å–µ–º —ç—Ç–∞–ø–∞–º
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–û—à–∏–±–∫–∏/–¥—É–±–ª–∏/–ø—Ä–æ–ø—É—Å–∫–∏ –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –≤ –ª–æ–≥–µ —Å–æ–±—ã—Ç–∏–π
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import re
import json
from state_manager import log_event

# 1Ô∏è‚É£ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
def extract_text(file_path, ext):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.
    –î–ª—è PDF: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç pdfplumber (–ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å).
    –î–ª—è TXT: —á–∏—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é.
    –î–ª—è –¥—Ä—É–≥–∏—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤: –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å.
    """
    if ext == 'txt':
        with open(file_path, "r", encoding="utf-8") as f:
            return f.read()
    if ext == 'pdf':
        try:
            import pdfplumber
            with pdfplumber.open(file_path) as pdf:
                return "\n".join([p.extract_text() or "" for p in pdf.pages])
        except Exception as ex:
            return ""
    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å DOCX, XLSX –∏ –¥—Ä—É–≥–∏–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    return ""

# 2Ô∏è‚É£ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø–æ–ª–µ–π —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤
def extract_fields_from_text(text, configs):
    """
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è –ø–æ —Ä–µ–≥—É–ª—è—Ä–∫–∞–º –∏–∑ configs['validators.yaml'].
    """
    result = {}
    # 2.1 –î–∞—Ç–∞
    date_regex = configs['validators.yaml']['date']['regex']
    date_match = re.search(date_regex, text)
    result['date'] = date_match.group(0) if date_match else ""

    # 2.2 –ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞
    number_regex = configs['validators.yaml']['number_ip']['regex']
    number_match = re.search(number_regex, text)
    result['number_ip'] = number_match.group(0) if number_match else ""

    # 2.3 –§–ò–û (–µ—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–≥—É–ª—è—Ä–∫–∞)
    fio_regex = configs['validators.yaml'].get('fio', {}).get('regex', r'[–ê-–Ø–Å][–∞-—è—ë]+\s[–ê-–Ø–Å][–∞-—è—ë]+\s[–ê-–Ø–Å][–∞-—è—ë]+')
    fio_match = re.search(fio_regex, text)
    result['fio'] = fio_match.group(0) if fio_match else ""

    # 2.4 –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ–ª—è

    return result

# 3Ô∏è‚É£ –ü–∞—Ä—Å–∏–Ω–≥ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
def parse_file(file_info, configs):
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ñ–∞–π–ª, –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø–æ–ª—è, –ª–æ–≥–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç—É—Å, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç dict.
    """
    file_path = file_info['file']
    creditor = file_info['creditor']
    ext = file_info['ext']

    try:
        if not os.path.exists(file_path):
            log_event(stage="parser", status="error", file=file_path, error_msg="File not found")
            return None

        text = extract_text(file_path, ext)
        if not text:
            log_event(stage="parser", status="error", file=file_path, error_msg="Empty text")
            return None

        doc_data = extract_fields_from_text(text, configs)
        doc_data['file'] = file_path
        doc_data['creditor'] = creditor
        log_event(stage="parser", status="ok", file=file_path, creditor=creditor, result="parsed")
        return doc_data

    except Exception as ex:
        log_event(stage="parser", status="error", file=file_path, error_msg=str(ex))
        return None

# 4Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞
def process_files(files_to_process, configs):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–µ dict'—ã.
    """
    parsed = []
    for file_info in files_to_process:
        doc_data = parse_file(file_info, configs)
        if doc_data:
            parsed.append(doc_data)
    return parsed

# 5Ô∏è‚É£ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (CLI)
if __name__ == "__main__":
    from config import load_configs
    configs = load_configs()
    files_to_process = [{"creditor": "VALB", "file": "test.txt", "ext": "txt"}]
    results = process_files(files_to_process, configs)
    print(results)
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	main.py –ø–æ—Å–ª–µ parser.py (–∏–ª–∏ –ø–æ—Å–ª–µ enrichment/AI)
o	CLI ‚Äî –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏, –æ—Ç–ª–∞–¥–∫–∏
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ù–∞ –¥–∏—Å–∫–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ JSON-—Ñ–∞–π–ª–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏, –ª–æ–≥–∏ –ø–æ –∫–∞–∂–¥–æ–º—É –≤—ã–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É/–æ—Ç–±—Ä–æ—à–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: aggregate_exports.py –∞–≥—Ä–µ–≥–∞—Ü–∏—è, –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: —Å–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –∫ JSON-—Ñ–∞–π–ª–∞–º
 

–ú–æ–¥—É–ª—å 10. aggregate_exports.py ‚Äî –ê–≥—Ä–µ–≥–∞—Ü–∏—è –≤—ã–≥—Ä—É–∑–æ–∫ –∑–∞ —Å—É—Ç–∫–∏
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: aggregate_exports.py
‚Ä¢	–†–æ–ª—å:
o	–°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ JSON-–≤—ã–≥—Ä—É–∑–∫–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥ (–¥–µ–Ω—å).
o	–ò—Å–∫–ª—é—á–∞–µ—Ç –¥—É–±–ª–∏ –ø–æ –±–∏–∑–Ω–µ—Å-–∫–ª—é—á—É (–Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞, –¥–∞—Ç–∞).
o	–§–æ—Ä–º–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ 1–°.
‚Ä¢	–í—Ö–æ–¥:
o	–î–∞—Ç–∞ –ø–µ—Ä–∏–æ–¥–∞ (date_str, —Ñ–æ—Ä–º–∞—Ç YYYYMMDD)
o	–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ (EXPORTS_DIR)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–§–∏–Ω–∞–ª—å–Ω—ã–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JSON-—Ñ–∞–π–ª –∑–∞ —Å—É—Ç–∫–∏ (IP_ARXIVE_{date_str}.json)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ –æ—à–∏–±–∫–∏ —á—Ç–µ–Ω–∏—è/–∞–≥—Ä–µ–≥–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤ –º–æ–≥—É—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è
o	–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤—Å–µ–≥–¥–∞ –±–µ–∑ –¥—É–±–ª–µ–π
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import json
from datetime import datetime

# 1Ô∏è‚É£ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
EXPORTS_DIR = os.path.join(os.getcwd(), "exports")
DATE_FMT = "%Y%m%d"  # –§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤

# 2Ô∏è‚É£ –ü–æ–∏—Å–∫ –≤—Å–µ—Ö JSON-—Ñ–∞–π–ª–æ–≤ –∑–∞ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É
def get_files_for_date(date_str):
    """
    –ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ JSON-—Ñ–∞–π–ª—ã —Å –≤—ã–≥—Ä—É–∑–∫–∞–º–∏ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É.
    """
    files = []
    for fname in os.listdir(EXPORTS_DIR):
        if fname.endswith('.json') and date_str in fname:
            files.append(os.path.join(EXPORTS_DIR, fname))
    return files

# 3Ô∏è‚É£ –ê–≥—Ä–µ–≥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥ (—Å—É—Ç–∫–∏)
def aggregate_jsons(date_str):
    """
    –ê–≥—Ä–µ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –≤—ã–≥—Ä—É–∑–∫–∏ –∑–∞ —Å—É—Ç–∫–∏, –∏—Å–∫–ª—é—á–∞–µ—Ç –¥—É–±–ª–∏ –ø–æ (number_ip, date).
    """
    files = get_files_for_date(date_str)
    seen_keys = set()
    aggregated = []
    for fpath in files:
        try:
            with open(fpath, encoding='utf-8') as f:
                items = json.load(f)
            for doc in items:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ç–µ–∂ (–Ω–æ–º–µ—Ä, –¥–∞—Ç–∞) –∫–∞–∫ –∫–ª—é—á –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏
                key = (doc.get('number_ip'), doc.get('date'))
                if key in seen_keys:
                    continue
                seen_keys.add(key)
                aggregated.append(doc)
        except Exception as ex:
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
            continue
    return aggregated

# 4Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∑–∞ —Å—É—Ç–∫–∏
def save_aggregate(aggregated, date_str):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞ —Å—É—Ç–∫–∏ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –ø–∞–ø–∫–µ.
    """
    out_name = f"IP_ARXIVE_{date_str}.json"
    out_path = os.path.join(EXPORTS_DIR, out_name)
    with open(out_path, 'w', encoding='utf-8') as f:
        json.dump(aggregated, f, ensure_ascii=False, indent=2)
    return out_path

# 5Ô∏è‚É£ CLI-–∑–∞–ø—É—Å–∫ (–¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏–ª–∏ cron-–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
if __name__ == "__main__":
    date_str = datetime.now().strftime(DATE_FMT)
    agg = aggregate_jsons(date_str)
    out_path = save_aggregate(agg, date_str)
    print(f"–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞ {date_str}: {out_path}")
o	–°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ JSON-–≤—ã–≥—Ä—É–∑–∫–∏ –∑–∞ –ø–µ—Ä–∏–æ–¥ (–¥–µ–Ω—å), –∏—Å–∫–ª—é—á–∞–µ—Ç –¥—É–±–ª–∏, —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ 1–°.
o	–°—Ç—Ä–æ–≥–∞—è –ª–æ–≥–∏–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥—É–±–ª–µ–π –ø–æ –±–∏–∑–Ω–µ—Å-–∫–ª—é—á—É (–Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞, –¥–∞—Ç–∞ –∏ –¥—Ä.).
o	[–§—É–Ω–∫—Ü–∏–∏: aggregate_jsons(date_str), save_aggregate(aggregated, date_str)]
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	main.py –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, cron, –≤ –∫–æ–Ω—Ü–µ –¥–Ω—è)
o	CLI –¥–ª—è —Ä—É—á–Ω–æ–π –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ –∑–∞ –Ω—É–∂–Ω—É—é –¥–∞—Ç—É
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ù–∞ –≤—ã—Ö–æ–¥–µ –≥–æ—Ç–æ–≤ –æ–¥–∏–Ω –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞ —Å—É—Ç–∫–∏, –±–µ–∑ –¥—É–±–ª–µ–π
o	–§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ–¥–∞—á–µ –Ω–∞ SFTP/1–°
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: ftp_client.py
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –ø—É—Ç—å –∫ –∏—Ç–æ–≥–æ–≤–æ–º—É –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É

 
–ú–æ–¥—É–ª—å 11. ftp_client.py ‚Äî –ü–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP/FTP
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: ftp_client.py
‚Ä¢	–†–æ–ª—å:
o	–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—ã–π –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–∞ SFTP/FTP-—Å–µ—Ä–≤–µ—Ä –≤ —Å—Ç—Ä–æ–≥–æ –∑–∞–¥–∞–Ω–Ω—É—é –ø–∞–ø–∫—É (namespace).
o	–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ (–Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞, —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞).
o	–õ–æ–≥–∏—Ä—É–µ—Ç —É—Å–ø–µ—à–Ω—ã–µ –∏ –æ—à–∏–±–æ—á–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏.
‚Ä¢	–í—Ö–æ–¥:
o	–ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É (local_path)
o	–ü—É—Ç—å –∫ YAML-–∫–æ–Ω—Ñ–∏–≥—É —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ SFTP (config_path)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–∏–ª–∏ –æ—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ —ç—Ç–∞–ø—ã, –æ—à–∏–±–∫–∏ –∏ —É—Å–ø–µ—à–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—á–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è (logs/ftp_client.log)
o	–ü—Ä–∏ –Ω–µ—É—Å–ø–µ—Ö–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è Exception
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import paramiko
import os
import yaml
import logging

# 1Ô∏è‚É£ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(filename='logs/ftp_client.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# 2Ô∏è‚É£ –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP
def send_file_to_ftp(local_path, config_path='configs/config.yaml'):
    """
    1. –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞ SFTP-—Å–µ—Ä–≤–µ—Ä –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–∑ YAML-–∫–æ–Ω—Ñ–∏–≥–∞.
    2. –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
    3. –õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ —ç—Ç–∞–ø—ã –ø–µ—Ä–µ–¥–∞—á–∏.
    :param local_path: –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É.
    :param config_path: –ü—É—Ç—å –∫ YAML-–∫–æ–Ω—Ñ–∏–≥—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ SFTP.
    :return: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
    :raises: Exception –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –ø–µ—Ä–µ–¥–∞—á–∏.
    """

    # 3Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    with open(config_path, 'r', encoding='utf-8') as f:
        cfg = yaml.safe_load(f)['ftp']

    host = cfg["host"]
    port = cfg["port"]
    user = cfg["user"]
    password = cfg["password"]
    base_path = cfg["base_path"]
    namespace = cfg["namespace"]
    remote_dir = os.path.join(base_path, namespace)
    remote_path = os.path.join(remote_dir, os.path.basename(local_path))

    # 4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å SFTP
    try:
        transport = paramiko.Transport((host, port))
        transport.connect(username=user, password=password)
        sftp = paramiko.SFTPClient.from_transport(transport)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SFTP: {e}")
        raise

    try:
        # 5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º/—Å–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É namespace
        try:
            sftp.chdir(base_path)
            try:
                sftp.mkdir(namespace)
            except IOError:
                pass  # —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            sftp.chdir(namespace)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–µ {remote_dir} –Ω–∞ SFTP: {e}")
            raise

        # 6Ô∏è‚É£ –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–∞
        sftp.put(local_path, remote_path)
        logging.info(f"–§–∞–π–ª {local_path} –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ SFTP –∫–∞–∫ {remote_path}")

        # 7Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Ä–∞–∑–º–µ—Ä)
        files = sftp.listdir('.')
        if os.path.basename(local_path) not in files:
            raise Exception(f"–§–∞–π–ª {os.path.basename(local_path)} –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä!")
        local_size = os.path.getsize(local_path)
        remote_size = sftp.stat(remote_path).st_size
        if local_size != remote_size:
            raise Exception(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ({remote_size}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ª–æ–∫–∞–ª—å–Ω—ã–º ({local_size})!")
        logging.info(f"–§–∞–π–ª {remote_path} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω –ø–æ —Ä–∞–∑–º–µ—Ä—É ({local_size} –±–∞–π—Ç)")

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∞–π–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {e}")
        raise

    finally:
        sftp.close()
        transport.close()

    return remote_path

# 8Ô∏è‚É£ –ü—Ä–∏–º–µ—Ä CLI-–∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    # –î–ª—è —Ä—É—á–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞: python ftp_client.py –ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É
    import sys
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python ftp_client.py <local_path>")
        exit(1)
    local_path = sys.argv[1]
    try:
        remote_path = send_file_to_ftp(local_path)
        print(f"–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ SFTP: {remote_path}")
    except Exception as ex:
        print(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞: {ex}")

 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	–í—Ä—É—á–Ω—É—é (CLI), –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ –ø–æ—Å–ª–µ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–§–∞–π–ª –æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –ø—Ä–æ–≤–µ—Ä–µ–Ω —Ä–∞–∑–º–µ—Ä, —Å—Ç–∞—Ç—É—Å ‚Äî –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: –æ–∂–∏–¥–∞–Ω–∏–µ ACK (wait_for_ack_file.py) –∏–ª–∏ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 



–û—Ñ–æ—Ä–º–ª—è—é —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –º–æ–¥—É–ª–∏ –ø–∞–π–ø–ª–∞–π–Ω–∞ ‚Äî wait_for_ack_file.py, telegram_notifier.py, reporting.py/cli.py ‚Äî —Å—Ç—Ä–æ–≥–æ –ø–æ —Ç–≤–æ–µ–º—É —à–∞–±–ª–æ–Ω—É.
 
–ú–æ–¥—É–ª—å 12. wait_for_ack_file.py ‚Äî –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç 1–° (ACK-—Ñ–∞–π–ª)
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: wait_for_ack_file.py
‚Ä¢	–†–æ–ª—å:
o	–û–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞-–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è (.ok –∏–ª–∏ .err) –¥–ª—è –≤—ã–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –≤ 1–°.
o	–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —É—Å–ø–µ—Ö, –æ—à–∏–±–∫–∞ –∏–ª–∏ —Ç–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è.
o	–õ–æ–≥–∏—Ä—É–µ—Ç –≤—Å–µ –¥–µ—Ç–∞–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (—É—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ, –æ—à–∏–±–∫–∞, —Ç–∞–π–º–∞—É—Ç).
‚Ä¢	–í—Ö–æ–¥:
o	remote_path ‚Äî –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –≤—ã–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
o	config_path ‚Äî –ø—É—Ç—å –∫ YAML-–∫–æ–Ω—Ñ–∏–≥—É —Å SFTP-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: configs/config.yaml)
o	timeout, poll_interval ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ (—Å–µ–∫—É–Ω–¥—ã)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–ö–æ—Ä—Ç–µ–∂ (status, info):
ÔÇß	("success", "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç 1–° (.ok)")
ÔÇß	("fail", <—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏>)
ÔÇß	("timeout", <—Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–∞–π–º–∞—É—Ç–µ>)
ÔÇß	("error", <—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è>)
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å—ë –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è –≤ logs/wait_for_ack_file.log
o	–í—Å—è –ª–æ–≥–∏–∫–∞ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–∞ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö)
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import paramiko
import os
import time
import yaml
import logging

# 1Ô∏è‚É£ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(filename='logs/wait_for_ack_file.log', level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')

# 2Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ ack-—Ñ–∞–π–ª–∞ (.ok/.err) –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ JSON
def wait_for_ack_file(remote_path, config_path='configs/config.yaml', timeout=1800, poll_interval=10):
    """
    –û–∂–∏–¥–∞–µ—Ç –ø–æ—è–≤–ª–µ–Ω–∏—è ack-—Ñ–∞–π–ª–∞ (.ok –∏–ª–∏ .err) –¥–ª—è –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –≤—ã–≥—Ä—É–∑–∫–∏ –Ω–∞ SFTP.
    :param remote_path: –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –≤—ã–≥—Ä—É–∂–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    :param config_path: –ü—É—Ç—å –∫ YAML-–∫–æ–Ω—Ñ–∏–≥—É —Å SFTP-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    :param timeout: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (—Å–µ–∫)
    :param poll_interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ (—Å–µ–∫)
    :return: (status, info) ‚Äî ("success", "–§–∞–π–ª –ø—Ä–∏–Ω—è—Ç") –∏–ª–∏ ("fail", "–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏") –∏–ª–∏ ("timeout", ...)
    """

    # 3Ô∏è‚É£ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ SFTP
    with open(config_path, 'r', encoding='utf-8') as f:
        cfg = yaml.safe_load(f)['ftp']

    host = cfg["host"]
    port = cfg["port"]
    user = cfg["user"]
    password = cfg["password"]

    # 4Ô∏è‚É£ –ò–º—è –∏ –ø–∞–ø–∫–∞ –≤—ã–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    dir_name = os.path.dirname(remote_path)
    file_name = os.path.basename(remote_path)
    ok_file = file_name + ".ok"
    err_file = file_name + ".err"
    start = time.time()

    # 5Ô∏è‚É£ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SFTP
    try:
        transport = paramiko.Transport((host, port))
        transport.connect(username=user, password=password)
        sftp = paramiko.SFTPClient.from_transport(transport)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SFTP –¥–ª—è ack: {e}")
        return "error", str(e)

    try:
        # 6Ô∏è‚É£ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –æ–∂–∏–¥–∞–Ω–∏—è ack-—Ñ–∞–π–ª–∞
        while time.time() - start < timeout:
            files = sftp.listdir(dir_name)
            # –£—Å–ø–µ—Ö ‚Äî ack-—Ñ–∞–π–ª .ok –Ω–∞–π–¥–µ–Ω
            if ok_file in files:
                logging.info(f"–§–∞–π–ª –ø—Ä–∏–Ω—è—Ç 1–°: {ok_file}")
                sftp.close()
                transport.close()
                return "success", "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç 1–° (.ok)"
            # –û—à–∏–±–∫–∞ ‚Äî ack-—Ñ–∞–π–ª .err –Ω–∞–π–¥–µ–Ω
            if err_file in files:
                try:
                    with sftp.open(os.path.join(dir_name, err_file), 'r') as errf:
                        err_text = errf.read().decode('utf-8')
                except Exception:
                    err_text = "–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ .err"
                logging.error(f"–§–∞–π–ª –æ—Ç–∫–ª–æ–Ω—ë–Ω 1–°: {err_file} ‚Äî {err_text}")
                sftp.close()
                transport.close()
                return "fail", err_text
            time.sleep(poll_interval)

        # 7Ô∏è‚É£ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è ack-—Ñ–∞–π–ª–∞
        sftp.close()
        transport.close()
        logging.error(f"–¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è ack-—Ñ–∞–π–ª–∞ –¥–ª—è {file_name}")
        return "timeout", f"–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è ack-—Ñ–∞–π–ª–∞ –¥–ª—è {file_name} –∏—Å—Ç–µ–∫–ª–æ"

    except Exception as ex:
        sftp.close()
        transport.close()
        logging.error(f"–û—à–∏–±–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è ack-—Ñ–∞–π–ª–∞: {str(ex)}")
        return "error", str(ex)
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	–ü–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—á–∏ –∞–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP (ftp_client.py)
o	–ü–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –∏–ª–∏ –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç-–º–æ–Ω–∏—Ç–æ—Ä (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–∂–∏–¥–∞–Ω–∏—è ack-—Ñ–∞–π–ª–∞: —É—Å–ø–µ—Ö, –æ—à–∏–±–∫–∞, —Ç–∞–π–º–∞—É—Ç
o	–õ–æ–≥–∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç –≤–µ—Å—å –ø—Ä–æ—Ü–µ—Å—Å –æ–∂–∏–¥–∞–Ω–∏—è
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (telegram_notifier.py), –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: –∫–æ—Ä—Ç–µ–∂ (status, info) –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π
 

–ú–æ–¥—É–ª—å 13. telegram_notifier.py ‚Äî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: telegram_notifier.py
‚Ä¢	–†–æ–ª—å:
o	–§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram (–±–æ—Ç) –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—ã–≥—Ä—É–∑–∫–∏, —Å—Ç–∞—Ç—É—Å–µ –ø—Ä–∏—ë–º–∞, –æ—à–∏–±–∫–∞—Ö –∏ –∏—Ç–æ–≥–∞—Ö.
o	–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö –∏ –æ—à–∏–±–æ—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏.
‚Ä¢	–í—Ö–æ–¥:
o	–î–∞–Ω–Ω—ã–µ –ø–æ –∫—Ä–µ–¥–∏—Ç–æ—Ä—É –∏ –¥–æ–≥–æ–≤–æ—Ä–∞–º (creditor, contracts)
o	–¢–æ–∫–µ–Ω –∏ chat_id –±–æ—Ç–∞ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∞)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram, –∑–∞–ø–∏—Å—å —Å–æ–±—ã—Ç–∏—è –≤ –ª–æ–≥
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ logs/telegram_report.log
 
–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
import requests
from datetime import datetime
import logging
import os
import json

# üìç –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ settings.yaml)
TELEGRAM_TOKEN = "your_telegram_bot_token"
CHAT_ID = "your_chat_id"  # –ì—Ä—É–ø–ø–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
LOG_FILE = "logs/telegram_report.log"

# üéØ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á—ë—Ç–∞
def send_telegram_full_report(creditor, contracts, tg_token=TELEGRAM_TOKEN, chat_id=CHAT_ID):
    time_str = datetime.now().strftime("%d.%m.%Y %H:%M")

    contract_lines = []
    total_sum = 0

    for idx, c in enumerate(contracts, 1):
        contract_num = c.get("–Ω–æ–º–µ—Ä", "-")
        fio = c.get("—Ñ–∏–æ", "-")
        summa = c.get("—Å—É–º–º–∞", 0)
        try:
            total_sum += float(summa)
        except:
            pass
        contract_lines.append(f"{idx}. {contract_num} ‚Äî {fio} ‚Äî {summa:,} ‚ÇΩ")

    contracts_text = "\n".join(contract_lines)

    summary = (
        f"\n–ò—Ç–æ–≥–æ:\n"
        f"–î–æ–≥–æ–≤–æ—Ä–æ–≤: {len(contracts)}\n"
        f"–°—É–º–º–∞: {int(total_sum):,} ‚ÇΩ\n"
        f"–í—Ä–µ–º—è: {time_str}"
    )

    msg = (
        f"üü¢ –í—ã–≥—Ä—É–∑–∫–∞ –≤ 1–° –∑–∞–≤–µ—Ä—à–µ–Ω–∞\n\n"
        f"–ö—Ä–µ–¥–∏—Ç–æ—Ä: {creditor}\n\n"
        f"–î–æ–≥–æ–≤–æ—Ä—ã:\n{contracts_text}\n"
        f"{summary}"
    )

    url = f"https://api.telegram.org/bot{tg_token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": msg,
        "parse_mode": "HTML"
    }

    try:
        response = requests.post(url, data=payload)
        if response.status_code == 200:
            log_event("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        else:
            log_error(f"‚ùå –û—à–∏–±–∫–∞ Telegram: {response.status_code} ‚Äî {response.text}")
    except Exception as e:
        log_error(f"‚ùå Telegram Exception: {e}")

# üì¶ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ª–æ–≥–æ–≤
def log_event(text):
    logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')
    logging.info(text)

def log_error(text):
    logging.basicConfig(filename=LOG_FILE, level=logging.INFO, format='%(asctime)s ‚Äî %(message)s')
    logging.error(text)
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –∏ ack-—Ñ–∞–π–ª–∞ (wait_for_ack_file.py)
o	–ú–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –≤ –ª—é–±–æ–º —ç—Ç–∞–ø–µ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ —Å–±–æ–µ
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–í Telegram –ø–æ—Å—Ç—É–ø–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∏—Ç–æ–≥–∞–º–∏ –≤—ã–≥—Ä—É–∑–∫–∏
o	–í –ª–æ–≥–∞—Ö —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—Ö/–æ—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, —Ñ–∏–Ω–∞–ª—å–Ω—ã–π CLI
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: —Å—Ç–∞—Ç—É—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏ –∑–∞–ø–∏—Å—å –≤ –ª–æ–≥
 

–ú–æ–¥—É–ª—å 14. reporting.py/cli.py ‚Äî –ê–Ω–∞–ª–∏—Ç–∏–∫–∞, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 
–®–∞–ø–∫–∞
‚Ä¢	–ò–º—è —Ñ–∞–π–ª–∞: reporting.py / cli.py
‚Ä¢	–†–æ–ª—å:
o	–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∞—Ç–∫–∏—Ö –∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö –æ—Ç—á—ë—Ç–æ–≤ –ø–æ –≤—Å–µ–º –ª–æ–≥–∞–º —Å–∏—Å—Ç–µ–º—ã.
o	–ü—Ä–æ—Å–º–æ—Ç—Ä –æ—à–∏–±–æ–∫, —É—Å–ø–µ—à–Ω—ã—Ö –ø–µ—Ä–µ–¥–∞—á, –¥—É–±–ª–µ–π, –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.
o	CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏ –∞—É–¥–∏—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–∞–π–ø–ª–∞–π–Ω–∞.
‚Ä¢	–í—Ö–æ–¥:
o	–õ–æ–≥–∏ (process_log.json, error_log.json, duplicates_log.json, not_processed.json)
‚Ä¢	–í—ã—Ö–æ–¥:
o	–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∏ –≤ summary_report.json
o	CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Ç—á–µ—Ç–∞–º–∏
‚Ä¢	–ö–æ–Ω—Ç—Ä–æ–ª—å —Å—Ç–∞—Ç—É—Å–∞:
o	–í—Å—ë –ª–æ–≥–∏ —Ö—Ä–∞–Ω–∏—Ç –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç, CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –æ—à–∏–±–æ–∫
 
–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
import os
import json
from collections import Counter
from datetime import datetime

LOG_DIR = "logs"

# 1Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∞—Ç–∫–æ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á—ë—Ç–∞ –ø–æ –≤—Å–µ–º –ª–æ–≥–∞–º
def generate_report():
    summary = {}

    # 1.1 –ê–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ª–æ–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    process_log_path = os.path.join(LOG_DIR, "process_log.json")
    statuses = Counter()
    if os.path.exists(process_log_path):
        with open(process_log_path, encoding="utf-8") as f:
            for line in f:
                try:
                    rec = json.loads(line)
                    statuses[rec.get("status", "unknown")] += 1
                except Exception:
                    continue
    summary['–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ (process_log.json)'] = dict(statuses)

    # 1.2 –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫
    error_log_path = os.path.join(LOG_DIR, "error_log.json")
    error_types = Counter()
    if os.path.exists(error_log_path):
        with open(error_log_path, encoding="utf-8") as f:
            for line in f:
                try:
                    rec = json.loads(line)
                    error_types[rec.get("stage", "unknown")] += 1
                except Exception:
                    continue
    summary['–û—à–∏–±–∫–∏ (error_log.json)'] = dict(error_types)

    # 1.3 –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –¥–æ–∫—É–º–µ–Ω—Ç—ã
    dups_path = os.path.join(LOG_DIR, "duplicates_log.json")
    dups_count = 0
    if os.path.exists(dups_path):
        with open(dups_path, encoding="utf-8") as f:
            for _ in f:
                dups_count += 1
    summary['–î—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤'] = dups_count

    # 1.4 –ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    notproc_path = os.path.join(LOG_DIR, "not_processed.json")
    notproc_count = 0
    if os.path.exists(notproc_path):
        with open(notproc_path, encoding="utf-8") as f:
            for _ in f:
                notproc_count += 1
    summary['–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤'] = notproc_count

    # 1.5 –ò—Ç–æ–≥: –≤—ã–≤–æ–¥ –æ—Ç—á—ë—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    print("===== –°–≤–æ–¥–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ª–æ–≥–∞–º =====")
    for k, v in summary.items():
        print(f"{k}: {v}")

    # (–û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω—ã–π JSON-–æ—Ç—á—ë—Ç
    report_file = os.path.join(LOG_DIR, "summary_report.json")
    with open(report_file, "w", encoding="utf-8") as f:
        json.dump(summary, f, ensure_ascii=False, indent=2)
    print(f"–û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {report_file}")

# 2Ô∏è‚É£ CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á—ë—Ç–æ–≤ –∏ –ª–æ–≥–æ–≤
def run_cli():
    while True:
        print("\n1. –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—â–∏–π –æ—Ç—á—ë—Ç")
        print("2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—à–∏–±–∫–∏")
        print("3. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —É—Å–ø–µ—à–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—á–∏")
        print("4. –í—ã–π—Ç–∏")
        choice = input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ").strip()
        if choice == "1":
            generate_report()
        elif choice == "2":
            path = os.path.join(LOG_DIR, "error_log.json")
            if not os.path.exists(path):
                print("–§–∞–π–ª —Å –æ—à–∏–±–∫–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                continue
            with open(path, encoding="utf-8") as f:
                for line in f:
                    print(line.strip())
        elif choice == "3":
            path = os.path.join(LOG_DIR, "process_log.json")
            if not os.path.exists(path):
                print("–§–∞–π–ª process_log.json –Ω–µ –Ω–∞–π–¥–µ–Ω.")
                continue
            with open(path, encoding="utf-8") as f:
                for line in f:
                    rec = json.loads(line)
                    if rec.get("status") == "ok":
                        print(line.strip())
        elif choice == "4":
            print("–í—ã—Ö–æ–¥ –∏–∑ CLI.")
            break
        else:
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥.")

if __name__ == "__main__":
    run_cli()
 
–°—Ü–µ–Ω–∞—Ä–∏–π –≤—ã–∑–æ–≤–∞
‚Ä¢	–í—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑:
o	–í—Ä—É—á–Ω—É—é (CLI), –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é, –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é –∞—É–¥–∏—Ç–æ—Ä–∞/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
‚Ä¢	–†–µ–∑—É–ª—å—Ç–∞—Ç:
o	–ü–æ–ª–Ω—ã–π —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á—ë—Ç –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤, –æ—à–∏–±–æ–∫, —É—Å–ø–µ—à–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
o	summary_report.json –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
 
–ü–µ—Ä–µ–¥–∞—á–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
‚Ä¢	–°–ª–µ–¥—É—é—â–∏–π –º–æ–¥—É–ª—å: –Ω–µ—Ç (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞)
‚Ä¢	–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–µ–¥–∞—á–∏: —Ñ–∞–π–ª –æ—Ç—á—ë—Ç–∞, –¥–∞–Ω–Ω—ã–µ CLI –Ω–∞ —ç–∫—Ä–∞–Ω–µ



 
–ö—Ä–∞—Ç–∫–∞—è —Ü–µ–ø–æ—á–∫–∞ (BPMN):
1.  config.py          (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è, –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–æ–≤)
      ‚¨á
2.  validator.py       (–≤–∞–ª–∏–¥–∞—Ü–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–æ–≤, —Å—Ö–µ–º, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π)
      ‚¨á
3.  state_manager.py   (—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∂—É—Ä–Ω–∞–ª–æ–≤)
      ‚¨á
4.  filewalker.py      (—Å–±–æ—Ä –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏)
      ‚¨á
5.  parser.py          (—Ä–∞–∑–±–æ—Ä —Ñ–∞–π–ª–æ–≤, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–ª–µ–π, –ø–µ—Ä–≤–∏—á–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è)
      ‚¨á
6.  excel_processor.py / data_enrichment.py (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è Excel, enrichment –ø–æ OCR/AI ‚Äî –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
      ‚¨á
7.  exporter.py        (—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö JSON-–≤—ã–≥—Ä—É–∑–æ–∫)
      ‚¨á
8.  aggregate_exports.py (–∞–≥—Ä–µ–≥–∞—Ü–∏—è –≤—ã–≥—Ä—É–∑–æ–∫ –∑–∞ –ø–µ—Ä–∏–æ–¥ ‚Äî —Å—É—Ç–∫–∏)
      ‚¨á
9.  ftp_client.py      (–ø–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ –Ω–∞ SFTP/FTP)
      ‚¨á
10. wait_for_ack_file.py (–æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è/–∫–≤–∏—Ç–∞–Ω—Ü–∏–∏ 1–° ‚Äî .ok/.err)
      ‚¨á
11. telegram_notifier.py (–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram)
      ‚¨á
12. reporting.py / cli.py (—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–æ–≤, CLI-–∞—É–¥–∏—Ç, –∞–Ω–∞–ª–∏—Ç–∏–∫–∞) 
üîó –ü–∞–π–ø–ª–∞–π–Ω –≤ –±–ª–æ–∫–∞—Ö (—Å —É—á—ë—Ç–æ–º –ø–æ—á—Ç—ã):
     +------------------------+
     |    mail_parser.py      |
     | (–ø—Ä–∏—ë–º –ø–æ—á—Ç—ã,          |
     |  —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π)  |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     | archive_handler.py     |
     | (—Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–æ–≤,   |
     |  —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –≤–ª–æ–∂–µ–Ω–∏–π)  |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     | excel_processor.py     |
     | (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∞—Ü–∏—è,       |
     |  –ø—Ä–∞–≤–∫–∞ –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ   |
     |  Excel-—Ä–µ–µ—Å—Ç—Ä–æ–≤)       |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     | data_enrichment.py     |
     | (OCR, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ       |
     |  –∏–∑ PDF/JPG,           |
     |  –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ)       |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     |  config.py             |
     |  validator.py          |
     |  state_manager.py      |
     | (–∑–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞   |
     |  –∫–æ–Ω—Ñ–∏–≥–æ–≤,             |
     |  –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–æ–≤)  |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     |   filewalker.py        |
     | (–ø–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤    |
     |  –ø–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è–º)       |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     |   parser.py            |
     | (–ø–∞—Ä—Å–∏–Ω–≥, –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ   |
     |  –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π)    |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     | ai_client.py           |
     | (AI-–∞–Ω–∞–ª–∏–∑, enrichment |
     |  ‚Äî –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)        |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     |   exporter.py          |
     | (–≤—ã–≥—Ä—É–∑–∫–∞ –≤–∞–ª–∏–¥–Ω—ã—Ö     |
     |  –¥–∞–Ω–Ω—ã—Ö –≤ JSON,        |
     |  —Ñ–∏–∫—Å–∞—Ü–∏—è –¥—É–±–ª–µ–π)      |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     | aggregator.py          |
     | (–∞–≥—Ä–µ–≥–∞—Ü–∏—è –≤—Å–µ—Ö        |
     |  JSON-—Ñ–∞–π–ª–æ–≤ –∑–∞ –ø–µ—Ä–∏–æ–¥)|
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     |   ftp_sender.py        |
     | (–ø–µ—Ä–µ–¥–∞—á–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ    |
     |  —Ñ–∞–π–ª–∞ –Ω–∞ SFTP/FTP)    |
     +----------+-------------+
                |
                ‚ñº
     +------------------------+
     | wait_for_ack_file.py   |
     | (–æ–∂–∏–¥–∞–Ω–∏–µ ack –æ—Ç 1–°,   |
     |  –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞)  |
     +----------+-------------+
                |
                ‚ñº
     +--------------------------+
     | telegram_notifier.py     |
     | (–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤  |
     |  Telegram: —É—Å–ø–µ—Ö, —Å–±–æ–∏,  |
     |  –∏—Ç–æ–≥–æ–≤—ã–µ –æ—Ç—á—ë—Ç—ã)        |
     +----------+---------------+
                |
                ‚ñº
     
     +------------------------+
     | reporting.py / cli.py  |
     | (–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, –æ—Ç—á—ë—Ç—ã,   |
     |  CLI-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)        |
     +------------------------+


