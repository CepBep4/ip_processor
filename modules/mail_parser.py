# -*- coding: utf-8 -*-
"""
–ú–æ–¥—É–ª—å –ø–æ–ª—É—á–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–∏—Å–µ–º.
"""

import ssl
import os
import socket
import imaplib
import email
import re
import json
import datetime
import yaml
from email.header import decode_header

def decode_str(s):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫"""
    if not s:
        return ''
    parts = decode_header(s)
    result = ''
    for text, encoding in parts:
        if isinstance(text, bytes):
            result += text.decode(encoding or 'utf-8', errors='ignore')
        else:
            result += text
    return result

def load_mail_settings(configs):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥–æ–≤"""
    return configs.get('mail_settings.yaml', {})

def get_next_folder_number(base_path):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Å–ª–µ–¥—É—é—â–µ–π –ø–∞–ø–∫–∏"""
    max_num = 0
    if os.path.exists(base_path):
        for name in os.listdir(base_path):
            match = re.match(r"(\d+)\(\d{2}.\d{2}.\d{4}\)", name)
            if match:
                num = int(match.group(1))
                if num > max_num:
                    max_num = num
    return max_num + 1

def test_mail_connection(mail_cfg):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—á—Ç–µ"""
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    server = mail_cfg.get('host', 'imap.gmail.com')
    username = mail_cfg.get('username', '')
    password = mail_cfg.get('password', '')
    port = mail_cfg.get('port', 993)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        sock.settimeout(5)
        result = sock.connect_ex((server, port))
        sock.close()
        
        if result == 0:
            ...
        else:
            port = 143
            sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            sock.settimeout(5)
            result = sock.connect_ex((server, port))
            sock.close()
            
            if result == 0:
                ...
            else:
                return False, None
    except Exception as e:
        ...
    
    connection = None
    
    try:
        # –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ SSL –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        context = ssl.create_default_context()
        # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö IP
        context.check_hostname = False
        context.verify_mode = ssl.CERT_NONE
        
        # –®–∞–≥ 2: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É
        try:
            # –ü—Ä–æ–±—É–µ–º SSL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            connection = imaplib.IMAP4_SSL(server, port, ssl_context=context)
        except ssl.SSLError as ssl_error:
            try:
                # –ü—Ä–æ–±—É–µ–º –æ–±—ã—á–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ø–æ—Ä—Ç—É 143
                connection = imaplib.IMAP4(server, 143)
                port = 143
            except Exception as e:
                raise
        
        # –®–∞–≥ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π —Å–µ—Ä–≤–µ—Ä–∞
        capabilities = connection.capabilities
        
        # –®–∞–≥ 4: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        connection.login(username, password)
        
        # –®–∞–≥ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–ø–æ–∫
        _, folders = connection.list()
        folder_names = []
        for folder in folders:
            if b'"/"' in folder:
                folder_name = folder.decode().split('"')[-2]
                folder_names.append(folder_name)
        
        
        return True, connection
        
    except imaplib.IMAP4.error as e:
        return False, None
        
    except ssl.SSLError as e:
        return False, None
        
    except ConnectionRefusedError:
        return False, None
        
    except Exception as e:
        return False, None

def process_incoming_mail(configs):   
    mail_cfg = load_mail_settings(configs)
    imap_host = mail_cfg.get('host', 'imap.gmail.com')
    imap_user = mail_cfg.get('username', '')
    imap_pass = mail_cfg.get('password', '')
    mailbox = mail_cfg.get('mailbox', 'INBOX')
    save_dir = mail_cfg.get('save_dir', 'incoming')
    allowed_exts = set(mail_cfg.get('allowed_extensions', ['.xlsx', '.xls', '.zip', '.rar', '.pdf']))
    sender_filter = mail_cfg.get('sender_filter', [])
    subject_filter = mail_cfg.get('subject_filter', [])
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    os.makedirs(save_dir, exist_ok=True)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    success, connection = test_mail_connection(mail_cfg)
    
    if not success:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø–æ—á—Ç–µ")
        return
    
    try:
        # –í—ã–±–∏—Ä–∞–µ–º –ø–∞–ø–∫—É
        connection.select(mailbox)
        print(f"–ø–∞–ø–∫–∞ {mailbox} –≤—ã–±—Ä–∞–Ω–∞")
        
        # –ü–æ–∏—Å–∫ –ø–∏—Å–µ–º (—Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ/–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ)
        status, messages = connection.search(None, 'SEEN')
        if status != 'OK':
            return
        
        message_list = messages[0].split()
        total_unread = len(message_list)
        print(f"–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º: {total_unread}")
        
        if total_unread == 0:
            # return
            pass
        
        processed_count = 0
        saved_attachments = 0
        
        for i, num in enumerate(message_list, 1):
            print(f"\n–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∏—Å—å–º–æ {i}/{total_unread}...")
            
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø–∏—Å—å–º–æ
                res, msg_data = connection.fetch(num, '(RFC822)')
                if res != 'OK':
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏—Å—å–º–æ {num}")
                    continue
                
                msg = email.message_from_bytes(msg_data[0][1])
                from_addr = decode_str(msg.get('From', ''))
                subject = decode_str(msg.get('Subject', ''))
                date = decode_str(msg.get('Date', ''))
    
                
                # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é –∏ —Ç–µ–º–µ
                if sender_filter and not any(s in from_addr for s in sender_filter):
                    print(f"–æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –Ω–µ –≤ —Ñ–∏–ª—å—Ç—Ä–µ")
                    print(from_addr)
                    continue
                if subject_filter and not any(s in subject for s in subject_filter):
                    print(f"—Ç–µ–º–∞ –Ω–µ –≤ —Ñ–∏–ª—å—Ç—Ä–µ")
                    continue
                
                print("–ø–∏—Å—å–º–æ –ø—Ä–æ—à–ª–æ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é")
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è –ø–∏—Å—å–º–∞
                date_str = datetime.datetime.now().strftime('%Y%m%d_%H%M%S')
                safe_subject = ''.join(c for c in subject if c.isalnum() or c in (' ', '-', '_'))[:60]
                msg_dir = os.path.join(save_dir, f"{date_str}_{safe_subject}".strip())
                os.makedirs(msg_dir, exist_ok=True)
                print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {msg_dir}")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
                print("üìé –ò—â–µ–º –≤–ª–æ–∂–µ–Ω–∏—è...")
                attach_count = 0
                for part in msg.walk():
                    if part.get_content_maintype() == 'multipart':
                        continue
                    if part.get('Content-Disposition') is None:
                        continue
                    
                    filename = decode_str(part.get_filename())
                    if not filename:
                        continue
                    
                    ext = os.path.splitext(filename)[-1].lower()
                    if ext not in allowed_exts:
                        print(f"‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º {filename} - —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ {ext} –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ")
                        continue
                    
                    filepath = os.path.join(msg_dir, filename)
                    with open(filepath, 'wb') as f:
                        f.write(part.get_payload(decode=True))
                    attach_count += 1
                    print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}")
                
                if attach_count > 0:
                    print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–π: {attach_count}")
                    saved_attachments += attach_count
                else:
                    print("‚ÑπÔ∏è –í–ª–æ–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
                processed_count += 1
                print(f"‚úÖ –ü–∏—Å—å–º–æ {i} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–∏—Å—å–º–∞ {num}: {e}")
                continue
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print("\n" + "=" * 60)
        print("üìä –ò–¢–û–ì–ò –û–ë–†–ê–ë–û–¢–ö–ò")
        print("=" * 60)
        print(f"üìß –í—Å–µ–≥–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º: {total_unread}")
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {processed_count}")
        print(f"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–ª–æ–∂–µ–Ω–∏–π: {saved_attachments}")
        print(f"üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {save_dir}")
        print("=" * 60)
        
        if processed_count > 0:
            print("üéâ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—á—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        else:
            print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –ø–∏—Å–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
    except Exception as ex:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º: {ex}")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:")
        print("   - –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞")
        print("   - –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–∫")
        print("   - –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        
    finally:
        # –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
        if connection:
            try:
                connection.logout()
                print("üîå –û—Ç–∫–ª—é—á–∏–ª–∏—Å—å –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
            except:
                pass

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ü–ê–†–°–ï–† –ü–û–ß–¢–´")
    print("=" * 60)
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥–∏
    configs = {
        'mail_settings.yaml': {
            'host': '192.168.180.13',
            'username': 'monakhov@storm-security.ru',
            'password': '8E1j?d$g',
            'port': 993,
            'mailbox': 'INBOX',
            'save_dir': 'incoming',
            'allowed_extensions': ['.xlsx', '.xls', '.zip', '.rar', '.pdf'],
            'sender_filter': [],
            'subject_filter': []
        }
    }
    
    process_incoming_mail(configs)

if __name__ == "__main__":
    main() 